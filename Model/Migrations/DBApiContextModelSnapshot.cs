// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(DBApiContext))]
    partial class DBApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Model.Modules.CategoryModel.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2051",
                            Name = "category name  21",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7597)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2052",
                            Name = "category name  27",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7607)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2053",
                            Name = "category name  35",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7610)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2054",
                            Name = "category name  45",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7614)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2055",
                            Name = "category name  37",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7617)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2056",
                            Name = "category name  24",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7621)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2057",
                            Name = "category name  48",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7623)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2058",
                            Name = "category name  13",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7627)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2059",
                            Name = "category name  8",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7630)
                        });
                });

            modelBuilder.Entity("Model.Modules.OrderModel.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2051",
                            Status = 0,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7457),
                            UserId = "79640b64-94d3-4cb2-89c8-a5fefe3c2051"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2052",
                            Status = 0,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7460),
                            UserId = "79640b64-94d3-4cb2-89c8-a5fefe3c2052"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2053",
                            Status = 0,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7461),
                            UserId = "79640b64-94d3-4cb2-89c8-a5fefe3c2053"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2054",
                            Status = 0,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7462),
                            UserId = "79640b64-94d3-4cb2-89c8-a5fefe3c2054"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2055",
                            Status = 0,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7463),
                            UserId = "79640b64-94d3-4cb2-89c8-a5fefe3c2055"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2056",
                            Status = 0,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7465),
                            UserId = "79640b64-94d3-4cb2-89c8-a5fefe3c2056"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2057",
                            Status = 0,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7466),
                            UserId = "79640b64-94d3-4cb2-89c8-a5fefe3c2057"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2058",
                            Status = 0,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7467),
                            UserId = "79640b64-94d3-4cb2-89c8-a5fefe3c2058"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2059",
                            Status = 0,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7468),
                            UserId = "79640b64-94d3-4cb2-89c8-a5fefe3c2059"
                        });
                });

            modelBuilder.Entity("Model.Modules.ProductModel.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PromotionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PromotionId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2051",
                            CategoryId = "79640b64-94d3-4cb2-89c8-a5fefe3c2051",
                            Description = "Mô tả điện thoại",
                            Image = "https://blob3tier.blob.core.windows.net/azureblobwith3tier/samurai.png%2B6775e8b2-a9ab-4792-afcd-202adae206f8",
                            Name = "ProductName 23",
                            Price = 2580m,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7258)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2052",
                            CategoryId = "79640b64-94d3-4cb2-89c8-a5fefe3c2052",
                            Description = "Mô tả điện thoại",
                            Image = "https://blob3tier.blob.core.windows.net/azureblobwith3tier/samurai.png%2B6775e8b2-a9ab-4792-afcd-202adae206f8",
                            Name = "ProductName 10",
                            Price = 2554m,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7271)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2053",
                            CategoryId = "79640b64-94d3-4cb2-89c8-a5fefe3c2053",
                            Description = "Mô tả điện thoại",
                            Image = "https://blob3tier.blob.core.windows.net/azureblobwith3tier/samurai.png%2B6775e8b2-a9ab-4792-afcd-202adae206f8",
                            Name = "ProductName 6",
                            Price = 2568m,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7348)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2054",
                            CategoryId = "79640b64-94d3-4cb2-89c8-a5fefe3c2054",
                            Description = "Mô tả điện thoại",
                            Image = "https://blob3tier.blob.core.windows.net/azureblobwith3tier/samurai.png%2B6775e8b2-a9ab-4792-afcd-202adae206f8",
                            Name = "ProductName 44",
                            Price = 2556m,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7353)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2055",
                            CategoryId = "79640b64-94d3-4cb2-89c8-a5fefe3c2055",
                            Description = "Mô tả điện thoại",
                            Image = "https://blob3tier.blob.core.windows.net/azureblobwith3tier/samurai.png%2B6775e8b2-a9ab-4792-afcd-202adae206f8",
                            Name = "ProductName 45",
                            Price = 2539m,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7357)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2056",
                            CategoryId = "79640b64-94d3-4cb2-89c8-a5fefe3c2056",
                            Description = "Mô tả điện thoại",
                            Image = "https://blob3tier.blob.core.windows.net/azureblobwith3tier/samurai.png%2B6775e8b2-a9ab-4792-afcd-202adae206f8",
                            Name = "ProductName 42",
                            Price = 2539m,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7363)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2057",
                            CategoryId = "79640b64-94d3-4cb2-89c8-a5fefe3c2057",
                            Description = "Mô tả điện thoại",
                            Image = "https://blob3tier.blob.core.windows.net/azureblobwith3tier/samurai.png%2B6775e8b2-a9ab-4792-afcd-202adae206f8",
                            Name = "ProductName 28",
                            Price = 2578m,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7366)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2058",
                            CategoryId = "79640b64-94d3-4cb2-89c8-a5fefe3c2058",
                            Description = "Mô tả điện thoại",
                            Image = "https://blob3tier.blob.core.windows.net/azureblobwith3tier/samurai.png%2B6775e8b2-a9ab-4792-afcd-202adae206f8",
                            Name = "ProductName 23",
                            Price = 2573m,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7371)
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2059",
                            CategoryId = "79640b64-94d3-4cb2-89c8-a5fefe3c2059",
                            Description = "Mô tả điện thoại",
                            Image = "https://blob3tier.blob.core.windows.net/azureblobwith3tier/samurai.png%2B6775e8b2-a9ab-4792-afcd-202adae206f8",
                            Name = "ProductName 12",
                            Price = 2580m,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7374)
                        });
                });

            modelBuilder.Entity("Model.Modules.ProductOrderModel.ProductOrder", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("ProductOrders");

                    b.HasData(
                        new
                        {
                            ProductId = "79640b64-94d3-4cb2-89c8-a5fefe3c2051",
                            OrderId = "79640b64-94d3-4cb2-89c8-a5fefe3c2051",
                            Quantity = 17,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7145)
                        },
                        new
                        {
                            ProductId = "79640b64-94d3-4cb2-89c8-a5fefe3c2052",
                            OrderId = "79640b64-94d3-4cb2-89c8-a5fefe3c2052",
                            Quantity = 32,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7149)
                        },
                        new
                        {
                            ProductId = "79640b64-94d3-4cb2-89c8-a5fefe3c2053",
                            OrderId = "79640b64-94d3-4cb2-89c8-a5fefe3c2053",
                            Quantity = 6,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7153)
                        },
                        new
                        {
                            ProductId = "79640b64-94d3-4cb2-89c8-a5fefe3c2054",
                            OrderId = "79640b64-94d3-4cb2-89c8-a5fefe3c2054",
                            Quantity = 30,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7154)
                        },
                        new
                        {
                            ProductId = "79640b64-94d3-4cb2-89c8-a5fefe3c2055",
                            OrderId = "79640b64-94d3-4cb2-89c8-a5fefe3c2055",
                            Quantity = 7,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7156)
                        },
                        new
                        {
                            ProductId = "79640b64-94d3-4cb2-89c8-a5fefe3c2056",
                            OrderId = "79640b64-94d3-4cb2-89c8-a5fefe3c2056",
                            Quantity = 38,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7158)
                        },
                        new
                        {
                            ProductId = "79640b64-94d3-4cb2-89c8-a5fefe3c2057",
                            OrderId = "79640b64-94d3-4cb2-89c8-a5fefe3c2057",
                            Quantity = 28,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7161)
                        },
                        new
                        {
                            ProductId = "79640b64-94d3-4cb2-89c8-a5fefe3c2058",
                            OrderId = "79640b64-94d3-4cb2-89c8-a5fefe3c2058",
                            Quantity = 23,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7162)
                        },
                        new
                        {
                            ProductId = "79640b64-94d3-4cb2-89c8-a5fefe3c2059",
                            OrderId = "79640b64-94d3-4cb2-89c8-a5fefe3c2059",
                            Quantity = 16,
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7163)
                        });
                });

            modelBuilder.Entity("Model.Modules.PromotionModel.Promotion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2051",
                            Description = "Mô tả điện thoại",
                            Name = "PromotionName 7",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7017),
                            TimeEnd = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7025),
                            TimeStart = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7024),
                            Value = 30
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2052",
                            Description = "Mô tả điện thoại",
                            Name = "PromotionName 29",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7029),
                            TimeEnd = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7032),
                            TimeStart = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7031),
                            Value = 44
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2053",
                            Description = "Mô tả điện thoại",
                            Name = "PromotionName 4",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7036),
                            TimeEnd = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7038),
                            TimeStart = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7038),
                            Value = 26
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2054",
                            Description = "Mô tả điện thoại",
                            Name = "PromotionName 35",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7040),
                            TimeEnd = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7042),
                            TimeStart = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7041),
                            Value = 14
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2055",
                            Description = "Mô tả điện thoại",
                            Name = "PromotionName 23",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7045),
                            TimeEnd = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7048),
                            TimeStart = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7047),
                            Value = 28
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2056",
                            Description = "Mô tả điện thoại",
                            Name = "PromotionName 11",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7050),
                            TimeEnd = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7053),
                            TimeStart = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7052),
                            Value = 4
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2057",
                            Description = "Mô tả điện thoại",
                            Name = "PromotionName 13",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7056),
                            TimeEnd = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7058),
                            TimeStart = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7057),
                            Value = 39
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2058",
                            Description = "Mô tả điện thoại",
                            Name = "PromotionName 24",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7059),
                            TimeEnd = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7061),
                            TimeStart = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7061),
                            Value = 23
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2059",
                            Description = "Mô tả điện thoại",
                            Name = "PromotionName 48",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7065),
                            TimeEnd = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7067),
                            TimeStart = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(7066),
                            Value = 26
                        });
                });

            modelBuilder.Entity("Model.Modules.UserModel.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2051",
                            AccessFailedCount = 0,
                            Address = "Dia chi 47",
                            ConcurrencyStamp = "cf6204dd-f835-4315-b9f2-c760fc701de5",
                            Email = "user17@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "nguyen",
                            LastName = "18",
                            LockoutEnabled = false,
                            PasswordHash = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "82043152-55fe-4be0-9e00-abe79dadb147",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(6547),
                            TwoFactorEnabled = false,
                            UserName = "nguyen9"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2052",
                            AccessFailedCount = 0,
                            Address = "Dia chi 45",
                            ConcurrencyStamp = "cf139e2f-00ad-43a4-8e72-5516def89e74",
                            Email = "user31@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "nguyen",
                            LastName = "24",
                            LockoutEnabled = false,
                            PasswordHash = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6d25266f-14ce-44c7-ada8-53c5f3b310da",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(6658),
                            TwoFactorEnabled = false,
                            UserName = "nguyen9"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2053",
                            AccessFailedCount = 0,
                            Address = "Dia chi 46",
                            ConcurrencyStamp = "cc213f2d-376b-45d2-af7f-48b2579a189e",
                            Email = "user28@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "nguyen",
                            LastName = "35",
                            LockoutEnabled = false,
                            PasswordHash = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ca4a84a4-9730-4a9d-9730-d2406e0052a8",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(6674),
                            TwoFactorEnabled = false,
                            UserName = "nguyen3"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2054",
                            AccessFailedCount = 0,
                            Address = "Dia chi 21",
                            ConcurrencyStamp = "454ed1da-2b3d-48da-aa2c-a257b97fdaa2",
                            Email = "user10@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "nguyen",
                            LastName = "41",
                            LockoutEnabled = false,
                            PasswordHash = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5dcb9cde-d0c0-4eae-a84e-b50c60d91991",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(6725),
                            TwoFactorEnabled = false,
                            UserName = "nguyen46"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2055",
                            AccessFailedCount = 0,
                            Address = "Dia chi 10",
                            ConcurrencyStamp = "c3201652-ba27-4860-93f8-15d4d2f60e16",
                            Email = "user7@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "nguyen",
                            LastName = "25",
                            LockoutEnabled = false,
                            PasswordHash = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4416c46e-9591-4b2a-9fa3-2576e11175c7",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(6741),
                            TwoFactorEnabled = false,
                            UserName = "nguyen35"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2056",
                            AccessFailedCount = 0,
                            Address = "Dia chi 21",
                            ConcurrencyStamp = "2f4e43f4-4ce4-4751-918a-bc7b46b09e85",
                            Email = "user26@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "nguyen",
                            LastName = "32",
                            LockoutEnabled = false,
                            PasswordHash = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "438cb8b1-b494-462b-9ec2-fb396bd56e71",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(6755),
                            TwoFactorEnabled = false,
                            UserName = "nguyen33"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2057",
                            AccessFailedCount = 0,
                            Address = "Dia chi 11",
                            ConcurrencyStamp = "6125b373-1ecf-4f8f-a191-1e662094c216",
                            Email = "user25@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "nguyen",
                            LastName = "32",
                            LockoutEnabled = false,
                            PasswordHash = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "692a9fe1-f031-4272-a4bd-e2a29dda8fbd",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(6769),
                            TwoFactorEnabled = false,
                            UserName = "nguyen38"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2058",
                            AccessFailedCount = 0,
                            Address = "Dia chi 32",
                            ConcurrencyStamp = "d3d13d85-fabb-4160-814f-5b6d5805a57d",
                            Email = "user32@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "nguyen",
                            LastName = "25",
                            LockoutEnabled = false,
                            PasswordHash = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9117f1e3-210c-4ab2-9164-b1adc5c79f82",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(6782),
                            TwoFactorEnabled = false,
                            UserName = "nguyen8"
                        },
                        new
                        {
                            Id = "79640b64-94d3-4cb2-89c8-a5fefe3c2059",
                            AccessFailedCount = 0,
                            Address = "Dia chi 27",
                            ConcurrencyStamp = "884836f5-0b91-4372-93fb-f5540bbba1e2",
                            Email = "user18@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "nguyen",
                            LastName = "15",
                            LockoutEnabled = false,
                            PasswordHash = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "283df77f-d925-4f54-bfa7-d6bcc8e45e30",
                            Time = new DateTime(2024, 2, 29, 16, 50, 59, 895, DateTimeKind.Local).AddTicks(6794),
                            TwoFactorEnabled = false,
                            UserName = "nguyen25"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Model.Modules.UserModel.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Model.Modules.UserModel.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Modules.UserModel.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Model.Modules.UserModel.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Modules.OrderModel.Order", b =>
                {
                    b.HasOne("Model.Modules.UserModel.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Modules.ProductModel.Product", b =>
                {
                    b.HasOne("Model.Modules.CategoryModel.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Modules.PromotionModel.Promotion", "Promotion")
                        .WithMany("Products")
                        .HasForeignKey("PromotionId");

                    b.Navigation("Category");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Model.Modules.ProductOrderModel.ProductOrder", b =>
                {
                    b.HasOne("Model.Modules.OrderModel.Order", "Order")
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Modules.ProductModel.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Model.Modules.CategoryModel.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Model.Modules.OrderModel.Order", b =>
                {
                    b.Navigation("ProductOrders");
                });

            modelBuilder.Entity("Model.Modules.ProductModel.Product", b =>
                {
                    b.Navigation("ProductOrders");
                });

            modelBuilder.Entity("Model.Modules.PromotionModel.Promotion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Model.Modules.UserModel.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
