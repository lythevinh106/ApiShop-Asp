2024-02-25 14:46:24.691 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 14:46:25.179 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 14:46:25.247 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 15:45:19.173 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 15:45:19.671 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 15:45:19.707 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 15:45:19.864 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 15:45:19.865 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 15:45:19.871 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 15:45:19.872 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 15:45:19.872 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 15:45:19.886 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 15:45:19.887 +07:00 [INF] Hosting environment: Development
2024-02-25 15:45:19.887 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 15:45:20.024 +07:00 [INF] Server laptop-2s90t1ik:36412:f17c22af successfully announced in 139,4077 ms
2024-02-25 15:45:20.026 +07:00 [INF] Server laptop-2s90t1ik:36412:f17c22af is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 15:45:20.031 +07:00 [INF] Server laptop-2s90t1ik:36412:f17c22af all the dispatchers started
2024-02-25 15:45:20.067 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 15:45:20.304 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 238.8965ms
2024-02-25 15:45:20.332 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 15:45:20.332 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 15:45:20.335 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.2536ms
2024-02-25 15:45:20.373 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 41.5454ms
2024-02-25 15:45:21.901 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 15:45:22.040 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 139.2423ms
2024-02-25 15:45:52.347 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 15:45:52.677 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 15:45:52.714 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 15:45:52.793 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 15:45:52.794 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 15:45:52.800 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 15:45:52.800 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 15:45:52.801 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 15:45:52.809 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 15:45:52.810 +07:00 [INF] Hosting environment: Development
2024-02-25 15:45:52.811 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 15:45:52.918 +07:00 [INF] Server laptop-2s90t1ik:30912:23ff4fee successfully announced in 109,4431 ms
2024-02-25 15:45:52.922 +07:00 [INF] Server laptop-2s90t1ik:30912:23ff4fee is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 15:45:52.928 +07:00 [INF] Server laptop-2s90t1ik:30912:23ff4fee all the dispatchers started
2024-02-25 15:45:52.942 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 15:45:53.141 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 198.5976ms
2024-02-25 15:45:53.156 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 15:45:53.156 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 15:45:53.158 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.2311ms
2024-02-25 15:45:53.183 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.6418ms
2024-02-25 15:45:53.940 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 15:45:54.047 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 106.5796ms
2024-02-25 15:46:14.357 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 15:46:14.568 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 15:46:14.598 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 15:46:14.677 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 15:46:14.679 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 15:46:14.684 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 15:46:14.685 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 15:46:14.685 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 15:46:14.694 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 15:46:14.695 +07:00 [INF] Hosting environment: Development
2024-02-25 15:46:14.695 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 15:46:14.777 +07:00 [INF] Server laptop-2s90t1ik:43096:c6d5d13b successfully announced in 83,9226 ms
2024-02-25 15:46:14.779 +07:00 [INF] Server laptop-2s90t1ik:43096:c6d5d13b is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 15:46:14.784 +07:00 [INF] Server laptop-2s90t1ik:43096:c6d5d13b all the dispatchers started
2024-02-25 15:46:14.889 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 15:46:15.073 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 184.9983ms
2024-02-25 15:46:15.087 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 15:46:15.087 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 15:46:15.090 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.9858ms
2024-02-25 15:46:15.115 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 27.7418ms
2024-02-25 15:46:15.879 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 15:46:15.989 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 110.0001ms
2024-02-25 15:46:41.223 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 15:46:41.567 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 15:46:41.602 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 15:46:41.679 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 15:46:41.679 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 15:46:41.686 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 15:46:41.686 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 15:46:41.687 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 15:46:41.695 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 15:46:41.696 +07:00 [INF] Hosting environment: Development
2024-02-25 15:46:41.697 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 15:46:41.795 +07:00 [INF] Server laptop-2s90t1ik:15784:366cf0ec successfully announced in 100,5987 ms
2024-02-25 15:46:41.799 +07:00 [INF] Server laptop-2s90t1ik:15784:366cf0ec is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 15:46:41.800 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 15:46:41.810 +07:00 [INF] Server laptop-2s90t1ik:15784:366cf0ec all the dispatchers started
2024-02-25 15:46:41.995 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 197.0368ms
2024-02-25 15:46:42.008 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 15:46:42.008 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 15:46:42.010 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 1.9516ms
2024-02-25 15:46:42.029 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.7376ms
2024-02-25 15:46:42.753 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 15:46:42.877 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 124.4321ms
2024-02-25 15:48:12.201 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 15:48:12.620 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 15:48:12.653 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 15:48:12.730 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 15:48:12.732 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 15:48:12.738 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 15:48:12.738 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 15:48:12.739 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 15:48:12.749 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 15:48:12.750 +07:00 [INF] Hosting environment: Development
2024-02-25 15:48:12.751 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 15:48:12.852 +07:00 [INF] Server laptop-2s90t1ik:30288:619e72b3 successfully announced in 104,2493 ms
2024-02-25 15:48:12.855 +07:00 [INF] Server laptop-2s90t1ik:30288:619e72b3 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 15:48:12.861 +07:00 [INF] Server laptop-2s90t1ik:30288:619e72b3 all the dispatchers started
2024-02-25 15:48:12.962 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 15:48:13.167 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 204.9283ms
2024-02-25 15:48:13.182 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 15:48:13.182 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 15:48:13.186 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.8274ms
2024-02-25 15:48:13.209 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 27.4000ms
2024-02-25 15:48:14.035 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 15:48:14.153 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 118.8446ms
2024-02-25 15:48:20.167 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 15:48:20.423 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 15:48:20.456 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 15:48:20.538 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 15:48:20.539 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 15:48:20.545 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 15:48:20.546 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 15:48:20.546 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 15:48:20.556 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 15:48:20.557 +07:00 [INF] Hosting environment: Development
2024-02-25 15:48:20.557 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 15:48:20.656 +07:00 [INF] Server laptop-2s90t1ik:1568:20abd622 successfully announced in 101,3716 ms
2024-02-25 15:48:20.659 +07:00 [INF] Server laptop-2s90t1ik:1568:20abd622 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 15:48:20.664 +07:00 [INF] Server laptop-2s90t1ik:1568:20abd622 all the dispatchers started
2024-02-25 15:48:20.735 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 15:48:20.954 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 218.8293ms
2024-02-25 15:48:20.976 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 15:48:20.976 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 15:48:20.980 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.9812ms
2024-02-25 15:48:21.006 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 29.7237ms
2024-02-25 15:48:21.909 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 15:48:22.022 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 113.4018ms
2024-02-25 15:48:39.394 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 15:48:39.598 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 15:48:39.629 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 15:48:39.700 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 15:48:39.701 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 15:48:39.706 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 15:48:39.707 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 15:48:39.708 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 15:48:39.716 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 15:48:39.717 +07:00 [INF] Hosting environment: Development
2024-02-25 15:48:39.718 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 15:48:39.796 +07:00 [INF] Server laptop-2s90t1ik:42036:1e3b7ccb successfully announced in 80,636 ms
2024-02-25 15:48:39.799 +07:00 [INF] Server laptop-2s90t1ik:42036:1e3b7ccb is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 15:48:39.804 +07:00 [INF] Server laptop-2s90t1ik:42036:1e3b7ccb all the dispatchers started
2024-02-25 15:48:39.949 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 15:48:40.110 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 161.3164ms
2024-02-25 15:48:40.122 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 15:48:40.122 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 15:48:40.125 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.3602ms
2024-02-25 15:48:40.142 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 19.4498ms
2024-02-25 15:48:40.865 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 15:48:40.989 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 124.6539ms
2024-02-25 15:49:34.119 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 15:49:34.414 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 15:49:34.440 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 15:49:34.512 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 15:49:34.512 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 15:49:34.518 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 15:49:34.519 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 15:49:34.519 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 15:49:34.527 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 15:49:34.528 +07:00 [INF] Hosting environment: Development
2024-02-25 15:49:34.529 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 15:49:34.621 +07:00 [INF] Server laptop-2s90t1ik:38796:6ec7a567 successfully announced in 94,3239 ms
2024-02-25 15:49:34.623 +07:00 [INF] Server laptop-2s90t1ik:38796:6ec7a567 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 15:49:34.628 +07:00 [INF] Server laptop-2s90t1ik:38796:6ec7a567 all the dispatchers started
2024-02-25 15:49:34.717 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 15:49:34.894 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 177.1928ms
2024-02-25 15:49:34.905 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 15:49:34.905 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 15:49:34.907 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.1554ms
2024-02-25 15:49:34.926 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.7506ms
2024-02-25 15:49:35.662 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 15:49:35.776 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 113.5409ms
2024-02-25 15:54:18.033 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 15:54:18.309 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 15:54:18.335 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 15:54:18.404 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 15:54:18.405 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 15:54:18.411 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 15:54:18.411 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 15:54:18.412 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 15:54:18.420 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 15:54:18.421 +07:00 [INF] Hosting environment: Development
2024-02-25 15:54:18.421 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 15:54:18.531 +07:00 [INF] Server laptop-2s90t1ik:27688:73edd031 successfully announced in 112,2319 ms
2024-02-25 15:54:18.534 +07:00 [INF] Server laptop-2s90t1ik:27688:73edd031 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 15:54:18.542 +07:00 [INF] 8 servers were removed due to timeout
2024-02-25 15:54:18.542 +07:00 [INF] Server laptop-2s90t1ik:27688:73edd031 all the dispatchers started
2024-02-25 15:54:18.585 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 15:54:18.681 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/6 - -
2024-02-25 15:54:18.746 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:54:18.771 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:54:18.817 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 235.1013ms
2024-02-25 15:54:18.844 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 15:54:18.844 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 15:54:18.850 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 5.2257ms
2024-02-25 15:54:18.875 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 30.2162ms
2024-02-25 15:54:19.924 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 15:54:20.061 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 15:54:20.062 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:54:20.206 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 144.7526ms
2024-02-25 15:54:20.400 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 15:54:20.408 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:54:20.427 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1648.7751ms
2024-02-25 15:54:20.428 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:54:20.433 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/6 - - - 200 - application/json;+charset=utf-8 1751.5664ms
2024-02-25 15:54:57.693 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/8 - -
2024-02-25 15:54:57.696 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:54:57.697 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:54:57.732 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:54:57.741 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 15:54:57.743 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:54:57.745 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 45.7056ms
2024-02-25 15:54:57.745 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:54:57.746 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/8 - - - 200 - application/json;+charset=utf-8 53.2884ms
2024-02-25 15:55:04.693 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 15:55:04.697 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:55:04.698 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:55:04.712 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:55:04.718 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 15:55:04.719 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:55:04.720 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 20.0665ms
2024-02-25 15:55:04.721 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:55:04.723 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 29.6725ms
2024-02-25 15:55:51.409 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 15:55:51.410 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:55:51.411 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:55:51.413 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:55:51.419 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 15:55:51.421 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:55:51.422 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 10.261ms
2024-02-25 15:55:51.423 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:55:51.424 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 15.4083ms
2024-02-25 15:55:55.929 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 15:55:55.930 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:55:55.931 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:55:55.933 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:55:55.935 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 15:55:55.936 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:55:55.937 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 5.495ms
2024-02-25 15:55:55.938 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:55:55.939 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 9.7911ms
2024-02-25 15:56:01.123 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 15:56:01.124 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:56:01.125 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:56:01.127 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:56:01.129 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 15:56:01.131 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:56:01.132 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 5.7512ms
2024-02-25 15:56:01.133 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 15:56:01.134 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 10.2832ms
2024-02-25 15:56:22.710 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-02-25 15:56:22.713 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:56:22.717 +07:00 [INF] Executing endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 15:56:22.720 +07:00 [INF] Route matched with {action = "GetAllProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductResponse]]] GetAllProduct(DtoShared.FetchData.FetchDataProductRequest) on controller Presentation.Controllers.ProductController (Presentation).
2024-02-25 15:56:22.731 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:56:22.779 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2024-02-25 15:56:22.802 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
ORDER BY [p].[Time] DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 15:56:22.878 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:56:22.891 +07:00 [INF] Executed action Presentation.Controllers.ProductController.GetAllProduct (Presentation) in 169.1475ms
2024-02-25 15:56:22.892 +07:00 [INF] Executed endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 15:56:22.895 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 184.1497ms
2024-02-25 15:56:23.538 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-02-25 15:56:23.539 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:56:23.539 +07:00 [INF] Executing endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 15:56:23.540 +07:00 [INF] Route matched with {action = "GetAllProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductResponse]]] GetAllProduct(DtoShared.FetchData.FetchDataProductRequest) on controller Presentation.Controllers.ProductController (Presentation).
2024-02-25 15:56:23.545 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:56:23.547 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2024-02-25 15:56:23.551 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
ORDER BY [p].[Time] DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 15:56:23.554 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:56:23.556 +07:00 [INF] Executed action Presentation.Controllers.ProductController.GetAllProduct (Presentation) in 12.9366ms
2024-02-25 15:56:23.557 +07:00 [INF] Executed endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 15:56:23.559 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 21.2513ms
2024-02-25 15:56:24.103 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 15:56:24.104 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:56:24.105 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:56:24.108 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:56:24.113 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:56:24.129 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 15:56:24.132 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:56:24.139 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 29.1898ms
2024-02-25 15:56:24.142 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:56:24.144 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 40.6617ms
2024-02-25 15:58:10.463 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 15:58:10.464 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:58:10.465 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 15:58:10.469 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:58:10.474 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:58:10.486 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 15:58:10.494 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 15:58:10.524 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 15:58:10.552 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 15:58:10.562 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 15:58:10.591 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 15:58:10.593 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 15:58:10.595 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 15:58:10.597 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 15:58:10.598 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 15:58:10.605 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 15:58:10.607 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 15:58:10.610 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 15:58:10.611 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:58:10.618 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 147.6465ms
2024-02-25 15:58:10.619 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 15:58:10.620 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 156.5630ms
2024-02-25 15:58:11.794 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 15:58:11.796 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:58:11.797 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 15:58:11.802 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:58:11.810 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:58:11.844 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 15:58:11.857 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 15:58:11.868 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 15:58:11.874 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 15:58:11.877 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 15:58:11.880 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 76.9911ms
2024-02-25 15:58:11.881 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 15:58:11.883 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 88.8087ms
2024-02-25 15:58:12.513 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 15:58:12.514 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:58:12.515 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 15:58:12.516 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:58:12.519 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:58:12.525 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 15:58:12.530 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 15:58:12.534 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 15:58:12.541 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 15:58:12.551 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 15:58:12.571 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 15:58:12.578 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 15:58:12.583 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 15:58:12.591 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 15:58:12.599 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 15:58:12.608 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 15:58:12.615 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 15:58:12.624 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 15:58:12.627 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:58:12.629 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 111.8572ms
2024-02-25 15:58:12.632 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 15:58:12.634 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 120.6983ms
2024-02-25 15:58:13.656 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 15:58:13.659 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:58:13.661 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 15:58:13.662 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:58:13.665 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:58:13.674 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 15:58:13.682 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 15:58:13.692 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 15:58:13.697 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 15:58:13.699 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 15:58:13.701 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 37.255ms
2024-02-25 15:58:13.704 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 15:58:13.706 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 50.2308ms
2024-02-25 15:58:15.116 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 15:58:15.118 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:58:15.119 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:58:15.120 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:58:15.122 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:58:15.129 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 15:58:15.132 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:58:15.133 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 11.7519ms
2024-02-25 15:58:15.134 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:58:15.135 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 18.5098ms
2024-02-25 15:58:18.451 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/29 - -
2024-02-25 15:58:18.452 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:58:18.453 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:58:18.453 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:58:18.455 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:58:18.462 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 15:58:18.464 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:58:18.466 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 11.1639ms
2024-02-25 15:58:18.466 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:58:18.467 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/29 - - - 200 - application/json;+charset=utf-8 15.9761ms
2024-02-25 15:58:20.601 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/28 - -
2024-02-25 15:58:20.602 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:58:20.603 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:58:20.603 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:58:20.605 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:58:20.621 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 15:58:20.623 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:58:20.624 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 20.1382ms
2024-02-25 15:58:20.627 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:58:20.628 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/28 - - - 200 - application/json;+charset=utf-8 26.6077ms
2024-02-25 15:58:22.537 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/27 - -
2024-02-25 15:58:22.538 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:58:22.539 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:58:22.539 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:58:22.541 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:58:22.549 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 15:58:22.552 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:58:22.554 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 13.1199ms
2024-02-25 15:58:22.556 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:58:22.559 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/27 - - - 200 - application/json;+charset=utf-8 21.3324ms
2024-02-25 15:58:24.140 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/26 - -
2024-02-25 15:58:24.141 +07:00 [INF] CORS policy execution successful.
2024-02-25 15:58:24.141 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:58:24.142 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 15:58:24.144 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 15:58:24.153 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 15:58:24.156 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 15:58:24.157 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 13.6504ms
2024-02-25 15:58:24.158 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 15:58:24.161 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/26 - - - 200 - application/json;+charset=utf-8 20.7832ms
2024-02-25 15:59:18.559 +07:00 [INF] 1 servers were removed due to timeout
2024-02-25 16:00:24.242 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:00:24.243 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:00:24.244 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:00:24.245 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:00:24.246 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:00:24.255 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:00:24.257 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:00:24.258 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 12.2569ms
2024-02-25 16:00:24.259 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:00:24.260 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 17.3562ms
2024-02-25 16:00:49.214 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:00:49.215 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:00:49.215 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:00:49.216 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:00:49.218 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:00:49.220 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:00:49.222 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:00:49.223 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 4.8936ms
2024-02-25 16:00:49.223 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:00:49.224 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 10.2912ms
2024-02-25 16:01:23.652 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:01:23.653 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:01:23.654 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:01:23.654 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:01:23.656 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:01:23.663 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:01:23.664 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:01:23.665 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 9.5497ms
2024-02-25 16:01:23.666 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:01:23.667 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 14.4846ms
2024-02-25 16:01:34.810 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:01:34.811 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:01:34.812 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:01:34.813 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:01:34.815 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:01:34.821 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:01:34.823 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:01:34.823 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.8002ms
2024-02-25 16:01:34.824 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:01:34.825 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 14.7469ms
2024-02-25 16:02:04.111 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:02:04.112 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:02:04.112 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:02:04.113 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:02:04.114 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:02:04.120 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:02:04.121 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:02:04.122 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.6771ms
2024-02-25 16:02:04.123 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:02:04.124 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 13.0142ms
2024-02-25 16:05:35.605 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 16:05:35.606 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:05:35.606 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:05:35.607 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:05:35.609 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:05:35.619 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 16:05:35.622 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 16:05:35.628 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:05:35.633 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:05:35.640 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:05:35.643 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:05:35.647 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:05:35.650 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:05:35.656 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:05:35.661 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:05:35.666 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:05:35.670 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:05:35.677 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:05:35.680 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:05:35.681 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 73.5746ms
2024-02-25 16:05:35.682 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:05:35.684 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 78.7280ms
2024-02-25 16:05:36.990 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 16:05:36.991 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:05:36.991 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:05:36.992 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:05:36.994 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:05:37.001 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:05:37.005 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:05:37.010 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:05:37.012 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:05:37.014 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 16:05:37.016 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 22.7513ms
2024-02-25 16:05:37.018 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:05:37.019 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 28.6609ms
2024-02-25 16:05:37.656 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 16:05:37.657 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:05:37.658 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:05:37.659 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:05:37.662 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:05:37.669 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 16:05:37.675 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 16:05:37.684 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:05:37.690 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:05:37.698 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:05:37.704 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:05:37.712 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:05:37.720 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:05:37.727 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:05:37.733 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:05:37.737 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:05:37.743 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:05:37.749 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:05:37.752 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:05:37.753 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 91.4948ms
2024-02-25 16:05:37.754 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:05:37.756 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 100.0479ms
2024-02-25 16:05:38.785 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 16:05:38.786 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:05:38.788 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:05:38.790 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:05:38.793 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:05:38.803 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:05:38.810 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:05:38.819 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:05:38.827 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:05:38.829 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 16:05:38.830 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 37.2526ms
2024-02-25 16:05:38.831 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:05:38.833 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 48.2767ms
2024-02-25 16:05:40.232 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:05:40.233 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:05:40.234 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:05:40.235 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:05:40.238 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:05:40.247 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:05:40.249 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:05:40.250 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 13.5269ms
2024-02-25 16:05:40.251 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:05:40.252 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 20.0884ms
2024-02-25 16:05:40.889 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/5 - -
2024-02-25 16:05:40.890 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:05:40.890 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:05:40.891 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:05:40.895 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:05:40.906 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:05:40.909 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:05:40.910 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 17.2625ms
2024-02-25 16:05:40.911 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:05:40.913 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/5 - - - 200 - application/json;+charset=utf-8 23.8965ms
2024-02-25 16:06:58.863 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 16:06:58.864 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:06:58.864 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:06:58.865 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:06:58.867 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:06:58.873 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 16:06:58.877 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 16:06:58.880 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:06:58.885 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:06:58.893 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:06:58.898 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:06:58.905 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:06:58.908 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:06:58.912 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:06:58.914 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:06:58.917 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:06:58.919 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:06:58.921 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:06:58.923 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:06:58.925 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 58.6893ms
2024-02-25 16:06:58.925 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:06:58.926 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 63.2376ms
2024-02-25 16:07:00.227 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:07:00.229 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:07:00.230 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:07:00.231 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:07:00.233 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:07:00.247 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:07:00.250 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:07:00.253 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 20.123ms
2024-02-25 16:07:00.254 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:07:00.257 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 29.7991ms
2024-02-25 16:07:00.341 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 16:07:00.342 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:07:00.343 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:07:00.345 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:07:00.349 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:07:00.364 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:07:00.373 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:07:00.382 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:07:00.389 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:07:00.393 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 16:07:00.395 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 47.5102ms
2024-02-25 16:07:00.398 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:07:00.400 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 59.6897ms
2024-02-25 16:07:01.018 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/5 - -
2024-02-25 16:07:01.031 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:07:01.035 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:07:01.042 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:07:01.052 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:07:01.087 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:07:01.090 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:07:01.093 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 42.5175ms
2024-02-25 16:07:01.094 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:07:01.095 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/5 - - - 200 - application/json;+charset=utf-8 77.0622ms
2024-02-25 16:13:26.175 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 16:13:26.176 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:13:26.177 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:13:26.178 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:13:26.180 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:13:26.191 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 16:13:26.208 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 16:13:26.214 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:13:26.220 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:13:26.225 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:13:26.231 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:13:26.236 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:13:26.240 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:13:26.244 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:13:26.247 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:13:26.252 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:13:26.255 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:13:26.260 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:13:26.262 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:13:26.263 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 83.9395ms
2024-02-25 16:13:26.264 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:13:26.264 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 89.0031ms
2024-02-25 16:13:27.521 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 16:13:27.521 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:13:27.522 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:13:27.523 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:13:27.525 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:13:27.537 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:13:27.543 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:13:27.552 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:13:27.559 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:13:27.562 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 16:13:27.563 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 38.9561ms
2024-02-25 16:13:27.564 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:13:27.566 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 44.6321ms
2024-02-25 16:13:28.200 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 16:13:28.200 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:13:28.201 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:13:28.202 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:13:28.204 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:13:28.208 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 16:13:28.213 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 16:13:28.217 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:13:28.222 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:13:28.230 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:13:28.233 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:13:28.236 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:13:28.240 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:13:28.243 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:13:28.245 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:13:28.248 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:13:28.253 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:13:28.256 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:13:28.258 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:13:28.259 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 55.9241ms
2024-02-25 16:13:28.260 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:13:28.261 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 61.4791ms
2024-02-25 16:13:28.834 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:13:28.836 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:13:28.837 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:13:28.838 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:13:28.841 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:13:28.862 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:13:28.865 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:13:28.867 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 26.7226ms
2024-02-25 16:13:28.868 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:13:28.870 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 35.6529ms
2024-02-25 16:13:29.296 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 16:13:29.298 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:13:29.299 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:13:29.301 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:13:29.303 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:13:29.314 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:13:29.320 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:13:29.329 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:13:29.333 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:13:29.335 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 16:13:29.337 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 34.5035ms
2024-02-25 16:13:29.338 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:13:29.340 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 43.2618ms
2024-02-25 16:13:29.498 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/5 - -
2024-02-25 16:13:29.498 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:13:29.499 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:13:29.499 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:13:29.501 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:13:29.508 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:13:29.509 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:13:29.511 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 9.9382ms
2024-02-25 16:13:29.512 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:13:29.514 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/5 - - - 200 - application/json;+charset=utf-8 15.9017ms
2024-02-25 16:19:14.812 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 16:19:14.813 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:19:14.813 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:19:14.815 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:19:14.824 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:19:14.826 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:19:14.827 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 12.4017ms
2024-02-25 16:19:14.828 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:19:14.828 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 16.5633ms
2024-02-25 16:19:22.969 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:19:22.970 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:19:22.971 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:22.971 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:19:22.972 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:19:22.977 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:19:22.979 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:19:22.979 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 7.3141ms
2024-02-25 16:19:22.980 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:22.981 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 11.5530ms
2024-02-25 16:19:23.830 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/1 - -
2024-02-25 16:19:23.831 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:19:23.832 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:23.833 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:19:23.835 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:19:23.839 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:19:23.841 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:19:23.842 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.4302ms
2024-02-25 16:19:23.844 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:23.845 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/1 - - - 200 - application/json;+charset=utf-8 14.6268ms
2024-02-25 16:19:42.458 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:19:42.458 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:19:42.459 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:42.460 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:19:42.461 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:19:42.467 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:19:42.468 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:19:42.469 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.3969ms
2024-02-25 16:19:42.470 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:42.470 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 12.7859ms
2024-02-25 16:19:43.328 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/2 - -
2024-02-25 16:19:43.329 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:19:43.330 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:43.332 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:19:43.335 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:19:43.346 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:19:43.349 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:19:43.351 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 16.596ms
2024-02-25 16:19:43.353 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:43.355 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/2 - - - 200 - application/json;+charset=utf-8 26.1523ms
2024-02-25 16:19:52.292 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:19:52.293 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:19:52.293 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:52.294 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:19:52.297 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:19:52.302 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:19:52.304 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:19:52.305 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.6165ms
2024-02-25 16:19:52.306 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:52.306 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 14.1894ms
2024-02-25 16:19:53.414 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/2 - -
2024-02-25 16:19:53.416 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:19:53.417 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:53.418 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:19:53.421 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:19:53.425 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:19:53.427 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:19:53.429 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 9.7097ms
2024-02-25 16:19:53.431 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:19:53.433 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/2 - - - 200 - application/json;+charset=utf-8 18.4670ms
2024-02-25 16:20:52.037 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 16:20:52.038 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:20:52.038 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:20:52.039 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:20:52.041 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:20:52.046 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:20:52.048 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:20:52.048 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 8.3897ms
2024-02-25 16:20:52.049 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:20:52.050 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 12.8382ms
2024-02-25 16:21:16.159 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:21:16.160 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:21:16.160 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:21:16.161 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:21:16.162 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:21:16.168 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:21:16.170 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:21:16.171 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 9.0126ms
2024-02-25 16:21:16.172 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:21:16.172 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 13.4365ms
2024-02-25 16:21:17.170 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 16:21:17.171 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:21:17.172 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:21:17.173 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:21:17.175 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:21:17.184 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:21:17.187 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:21:17.189 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 13.9012ms
2024-02-25 16:21:17.190 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:21:17.192 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 21.3993ms
2024-02-25 16:22:42.411 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:22:42.412 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:22:42.412 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:22:42.413 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:22:42.414 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:22:42.420 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:22:42.421 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:22:42.422 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.2298ms
2024-02-25 16:22:42.423 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:22:42.423 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 12.4953ms
2024-02-25 16:22:43.470 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 16:22:43.471 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:22:43.472 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:22:43.474 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:22:43.478 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:22:43.489 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:22:43.492 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:22:43.494 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 17.0583ms
2024-02-25 16:22:43.495 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:22:43.496 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 26.9388ms
2024-02-25 16:28:34.461 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:28:34.462 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:28:34.462 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:28:34.463 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:28:34.465 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:28:34.474 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:28:34.475 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:28:34.477 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 12.7308ms
2024-02-25 16:28:34.478 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:28:34.479 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 17.7792ms
2024-02-25 16:29:12.587 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:29:12.588 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:29:12.588 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:29:12.589 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:29:12.590 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:29:12.592 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:29:12.593 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:29:12.594 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 4.3173ms
2024-02-25 16:29:12.595 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:29:12.596 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 8.7877ms
2024-02-25 16:29:13.590 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 16:29:13.591 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:29:13.592 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:29:13.593 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:29:13.597 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:29:13.608 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:29:13.610 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:29:13.611 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 15.22ms
2024-02-25 16:29:13.612 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:29:13.613 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 22.6346ms
2024-02-25 16:29:56.097 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:29:56.098 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:29:56.099 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:29:56.099 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:29:56.100 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:29:56.107 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:29:56.108 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:29:56.109 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.9767ms
2024-02-25 16:29:56.110 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:29:56.110 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 13.1633ms
2024-02-25 16:29:57.081 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 16:29:57.084 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:29:57.085 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:29:57.086 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:29:57.090 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:29:57.101 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:29:57.104 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:29:57.106 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 16.575ms
2024-02-25 16:29:57.107 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:29:57.109 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 27.2919ms
2024-02-25 16:32:01.558 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:32:01.559 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:32:01.559 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:32:01.560 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:32:01.561 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:32:01.567 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:32:01.569 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:32:01.569 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.5039ms
2024-02-25 16:32:01.570 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:32:01.571 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 12.8144ms
2024-02-25 16:32:02.542 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 16:32:02.544 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:32:02.545 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:32:02.546 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:32:02.550 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:32:02.558 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:32:02.562 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:32:02.564 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 15.3524ms
2024-02-25 16:32:02.566 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:32:02.567 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 24.7159ms
2024-02-25 16:42:59.712 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 16:42:59.713 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:42:59.713 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:42:59.714 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:42:59.715 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:42:59.721 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 16:42:59.724 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 16:42:59.727 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:42:59.731 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:42:59.737 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:42:59.741 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:42:59.744 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:42:59.746 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:42:59.748 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:42:59.750 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:42:59.752 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:42:59.754 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:42:59.756 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:42:59.758 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:42:59.759 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 44.2837ms
2024-02-25 16:42:59.760 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:42:59.761 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 48.9144ms
2024-02-25 16:43:01.026 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 16:43:01.026 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:43:01.027 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:43:01.027 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:43:01.029 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:43:01.036 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:43:01.042 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:43:01.049 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:43:01.055 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:43:01.057 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 16:43:01.058 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 29.8971ms
2024-02-25 16:43:01.060 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:43:01.061 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 35.7804ms
2024-02-25 16:43:01.684 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 16:43:01.685 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:43:01.686 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:43:01.688 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:43:01.690 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:43:01.692 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 16:43:01.695 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 16:43:01.697 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:43:01.701 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:43:01.706 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:43:01.710 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:43:01.713 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:43:01.718 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:43:01.722 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:43:01.726 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:43:01.729 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:43:01.732 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:43:01.736 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:43:01.738 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:43:01.739 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 49.6767ms
2024-02-25 16:43:01.741 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:43:01.742 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 57.9984ms
2024-02-25 16:43:02.304 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:43:02.305 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:43:02.306 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:43:02.307 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:43:02.309 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:43:02.321 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:43:02.323 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:43:02.325 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 16.8523ms
2024-02-25 16:43:02.327 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:43:02.330 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 25.7542ms
2024-02-25 16:43:02.778 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 16:43:02.780 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:43:02.781 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:43:02.782 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:43:02.786 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:43:02.790 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:43:02.793 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:43:02.796 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:43:02.799 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:43:02.801 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 16:43:02.803 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 18.4651ms
2024-02-25 16:43:02.804 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:43:02.806 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 27.5160ms
2024-02-25 16:43:02.935 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 16:43:02.935 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:43:02.936 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:43:02.936 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:43:02.938 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:43:02.943 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:43:02.945 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:43:02.946 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 8.2061ms
2024-02-25 16:43:02.947 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:43:02.948 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 13.2342ms
2024-02-25 16:43:10.944 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 16:43:10.944 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:43:10.945 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:43:10.947 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:43:10.950 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:43:10.951 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:43:10.952 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 5.6141ms
2024-02-25 16:43:10.953 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:43:10.953 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 9.7901ms
2024-02-25 16:43:48.532 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:43:48.532 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:43:48.533 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:43:48.533 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:43:48.535 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:43:48.540 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:43:48.542 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:43:48.542 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.2697ms
2024-02-25 16:43:48.543 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:43:48.544 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 12.5197ms
2024-02-25 16:43:49.392 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 16:43:49.393 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:43:49.394 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:43:49.395 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:43:49.398 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:43:49.406 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:43:49.409 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:43:49.411 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 14.4062ms
2024-02-25 16:43:49.413 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:43:49.416 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 24.1251ms
2024-02-25 16:44:21.609 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:44:21.609 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:44:21.610 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:44:21.610 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:44:21.612 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:44:21.618 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:44:21.619 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:44:21.620 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.3038ms
2024-02-25 16:44:21.620 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:44:21.621 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 12.4165ms
2024-02-25 16:44:22.454 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 16:44:22.455 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:44:22.456 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:44:22.457 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:44:22.459 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:44:22.472 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:44:22.475 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:44:22.477 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 18.3631ms
2024-02-25 16:44:22.478 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:44:22.479 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 25.3707ms
2024-02-25 16:45:17.033 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:45:17.034 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:45:17.034 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:45:17.035 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:45:17.036 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:45:17.042 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:45:17.044 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:45:17.044 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.4571ms
2024-02-25 16:45:17.045 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:45:17.046 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 13.3182ms
2024-02-25 16:45:17.895 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 16:45:17.896 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:45:17.897 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:45:17.899 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:45:17.902 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:45:17.912 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:45:17.914 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:45:17.916 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 14.6014ms
2024-02-25 16:45:17.917 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:45:17.918 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 23.0220ms
2024-02-25 16:54:12.034 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 16:54:12.035 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:54:12.036 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:54:12.036 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:54:12.038 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:54:12.044 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 16:54:12.048 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 16:54:12.051 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:54:12.055 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:54:12.060 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:54:12.063 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:54:12.065 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:54:12.068 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:54:12.071 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:54:12.074 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:54:12.077 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:54:12.079 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:54:12.084 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:54:12.086 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:54:12.087 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 49.8942ms
2024-02-25 16:54:12.088 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:54:12.089 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 54.6740ms
2024-02-25 16:54:13.353 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 16:54:13.353 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:54:13.354 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:54:13.354 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:54:13.356 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:54:13.363 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:54:13.368 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:54:13.373 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:54:13.376 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:54:13.378 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 16:54:13.379 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 23.5351ms
2024-02-25 16:54:13.381 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:54:13.382 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 29.2657ms
2024-02-25 16:54:14.058 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 16:54:14.060 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:54:14.061 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:54:14.062 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:54:14.064 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:54:14.067 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 16:54:14.071 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 16:54:14.075 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:54:14.079 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:54:14.084 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:54:14.088 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:54:14.092 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:54:14.098 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:54:14.103 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:54:14.106 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:54:14.112 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 16:54:14.118 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 16:54:14.123 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 16:54:14.127 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:54:14.129 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 65.7267ms
2024-02-25 16:54:14.131 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 16:54:14.132 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 74.3080ms
2024-02-25 16:54:15.203 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 16:54:15.204 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:54:15.205 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:54:15.206 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:54:15.208 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:54:15.212 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:54:15.215 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 16:54:15.218 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:54:15.221 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 16:54:15.222 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 16:54:15.223 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 16.1388ms
2024-02-25 16:54:15.225 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 16:54:15.227 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 23.9526ms
2024-02-25 16:54:15.543 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:54:15.544 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:54:15.546 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:54:15.546 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:54:15.549 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:54:15.560 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:54:15.562 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:54:15.564 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 15.902ms
2024-02-25 16:54:15.566 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:54:15.568 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 25.4146ms
2024-02-25 16:54:16.185 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 16:54:16.186 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:54:16.186 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:54:16.187 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:54:16.188 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:54:16.194 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:54:16.195 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:54:16.196 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 8.4687ms
2024-02-25 16:54:16.197 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:54:16.198 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 13.1253ms
2024-02-25 16:55:13.813 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:55:13.814 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:55:13.814 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:55:13.815 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:55:13.816 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:55:13.822 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:55:13.823 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:55:13.824 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.3796ms
2024-02-25 16:55:13.825 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:55:13.826 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 12.8029ms
2024-02-25 16:55:14.659 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 16:55:14.659 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:55:14.660 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:55:14.661 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:55:14.664 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:55:14.672 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:55:14.674 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:55:14.675 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 12.4664ms
2024-02-25 16:55:14.677 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:55:14.679 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 20.4124ms
2024-02-25 16:55:29.968 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 16:55:29.969 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:55:29.970 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:55:29.971 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:55:29.974 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:55:29.975 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:55:29.976 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 5.299ms
2024-02-25 16:55:29.977 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:55:29.978 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 9.7664ms
2024-02-25 16:56:31.643 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 16:56:31.645 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:56:31.645 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:56:31.647 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:56:31.653 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:56:31.654 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:56:31.655 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 8.5864ms
2024-02-25 16:56:31.656 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:56:31.657 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 13.2468ms
2024-02-25 16:56:34.641 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 16:56:34.642 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:56:34.643 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:56:34.643 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:56:34.645 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:56:34.650 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 16:56:34.651 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:56:34.652 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 7.3651ms
2024-02-25 16:56:34.653 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 16:56:34.653 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 12.4221ms
2024-02-25 16:56:35.479 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 16:56:35.480 +07:00 [INF] CORS policy execution successful.
2024-02-25 16:56:35.481 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:56:35.483 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 16:56:35.485 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 16:56:35.488 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 16:56:35.492 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 16:56:35.493 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 8.8733ms
2024-02-25 16:56:35.495 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 16:56:35.496 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 16.3245ms
2024-02-25 17:00:02.969 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 17:00:02.969 +07:00 [INF] CORS policy execution successful.
2024-02-25 17:00:02.970 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 17:00:02.970 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:00:02.972 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:00:02.980 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 17:00:02.981 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 17:00:02.982 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 10.9748ms
2024-02-25 17:00:02.983 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 17:00:02.984 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 15.3766ms
2024-02-25 17:00:03.804 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 17:00:03.805 +07:00 [INF] CORS policy execution successful.
2024-02-25 17:00:03.806 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:00:03.807 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:00:03.810 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:00:03.819 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 17:00:03.822 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 17:00:03.824 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 14.7234ms
2024-02-25 17:00:03.826 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:00:03.827 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 23.5610ms
2024-02-25 17:06:36.827 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 17:06:36.827 +07:00 [INF] CORS policy execution successful.
2024-02-25 17:06:36.828 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 17:06:36.828 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:06:36.830 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:06:36.839 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 17:06:36.840 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 17:06:36.841 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 11.2366ms
2024-02-25 17:06:36.841 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 17:06:36.843 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 16.0536ms
2024-02-25 17:06:37.664 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 17:06:37.665 +07:00 [INF] CORS policy execution successful.
2024-02-25 17:06:37.666 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:06:37.667 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:06:37.671 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:06:37.679 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [categoryName], [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 17:06:37.680 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 17:06:37.682 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 12.1742ms
2024-02-25 17:06:37.684 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:06:37.686 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 21.5988ms
2024-02-25 17:10:32.985 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:10:33.304 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:10:33.340 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:10:33.416 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:10:33.417 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:10:33.423 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:10:33.424 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:10:33.424 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:10:33.433 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:10:33.433 +07:00 [INF] Hosting environment: Development
2024-02-25 17:10:33.434 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:10:33.550 +07:00 [INF] Server laptop-2s90t1ik:16108:a6ce92b7 successfully announced in 118,4071 ms
2024-02-25 17:10:33.555 +07:00 [INF] Server laptop-2s90t1ik:16108:a6ce92b7 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:10:33.562 +07:00 [INF] Server laptop-2s90t1ik:16108:a6ce92b7 all the dispatchers started
2024-02-25 17:10:33.904 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:10:34.098 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 194.7983ms
2024-02-25 17:10:34.118 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:10:34.118 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:10:34.122 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.1044ms
2024-02-25 17:10:34.154 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 35.5076ms
2024-02-25 17:10:35.129 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:10:35.246 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 116.6717ms
2024-02-25 17:11:15.748 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 17:11:15.773 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:11:15.802 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:11:16.559 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 17:11:16.672 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:11:16.926 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [orderSucces]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name], [p0].[Time]
2024-02-25 17:11:16.934 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 17:11:16.950 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1141.7321ms
2024-02-25 17:11:16.952 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:11:16.955 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 1206.9377ms
2024-02-25 17:15:33.573 +07:00 [INF] 1 servers were removed due to timeout
2024-02-25 17:41:50.390 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:41:50.726 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:41:50.760 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:41:50.865 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:41:50.866 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:41:50.873 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:41:50.874 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:41:50.875 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:41:50.886 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:41:50.887 +07:00 [INF] Hosting environment: Development
2024-02-25 17:41:50.888 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:41:50.969 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:41:50.969 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 17:41:51.018 +07:00 [INF] Server laptop-2s90t1ik:32684:ce73b998 successfully announced in 131,8629 ms
2024-02-25 17:41:51.022 +07:00 [INF] Server laptop-2s90t1ik:32684:ce73b998 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:41:51.029 +07:00 [INF] 1 servers were removed due to timeout
2024-02-25 17:41:51.034 +07:00 [INF] Server laptop-2s90t1ik:32684:ce73b998 all the dispatchers started
2024-02-25 17:41:51.056 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:41:51.090 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:41:51.170 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 200.2394ms
2024-02-25 17:41:51.193 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:41:51.193 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:41:51.197 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 4.4646ms
2024-02-25 17:41:51.222 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 29.7214ms
2024-02-25 17:41:52.053 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 17:41:52.212 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:41:52.321 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1225.6372ms
2024-02-25 17:41:52.325 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:41:52.332 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:41:52.338 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 400 - application/json 1370.1241ms
2024-02-25 17:41:52.499 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 166.9340ms
2024-02-25 17:42:17.232 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:42:17.520 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:42:17.548 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:42:17.624 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:42:17.626 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:42:17.631 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:42:17.632 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:42:17.632 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:42:17.640 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:42:17.641 +07:00 [INF] Hosting environment: Development
2024-02-25 17:42:17.641 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:42:17.726 +07:00 [INF] Server laptop-2s90t1ik:20712:0c367f3c successfully announced in 86,2114 ms
2024-02-25 17:42:17.728 +07:00 [INF] Server laptop-2s90t1ik:20712:0c367f3c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:42:17.732 +07:00 [INF] Server laptop-2s90t1ik:20712:0c367f3c all the dispatchers started
2024-02-25 17:42:17.823 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:42:17.994 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 171.4041ms
2024-02-25 17:42:18.013 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:42:18.013 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:42:18.017 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.0852ms
2024-02-25 17:42:18.035 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.4218ms
2024-02-25 17:42:18.734 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:42:18.839 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 105.5737ms
2024-02-25 17:42:47.802 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:42:48.005 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:42:48.033 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:42:48.102 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:42:48.102 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:42:48.108 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:42:48.109 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:42:48.109 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:42:48.118 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:42:48.119 +07:00 [INF] Hosting environment: Development
2024-02-25 17:42:48.120 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:42:48.207 +07:00 [INF] Server laptop-2s90t1ik:6592:853e5cda successfully announced in 89,8494 ms
2024-02-25 17:42:48.210 +07:00 [INF] Server laptop-2s90t1ik:6592:853e5cda is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:42:48.218 +07:00 [INF] Server laptop-2s90t1ik:6592:853e5cda all the dispatchers started
2024-02-25 17:42:48.381 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:42:48.588 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 207.5589ms
2024-02-25 17:42:48.608 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:42:48.613 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:42:48.615 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.9450ms
2024-02-25 17:42:48.644 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 36.0512ms
2024-02-25 17:42:49.398 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 17:42:49.431 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:42:49.462 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:42:49.533 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:42:49.666 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 132.8442ms
2024-02-25 17:42:50.265 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 17:42:50.370 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:42:50.531 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[Time]
FROM [Categories] AS [c]
2024-02-25 17:42:50.572 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
2024-02-25 17:42:50.609 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
2024-02-25 17:42:50.625 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 17:42:50.642 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1173.8787ms
2024-02-25 17:42:50.644 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:42:50.649 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 1250.6422ms
2024-02-25 17:43:23.415 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:43:23.712 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:43:23.740 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:43:23.811 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:43:23.812 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:43:23.817 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:43:23.818 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:43:23.818 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:43:23.827 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:43:23.827 +07:00 [INF] Hosting environment: Development
2024-02-25 17:43:23.828 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:43:23.916 +07:00 [INF] Server laptop-2s90t1ik:37156:b611bc1b successfully announced in 90,4546 ms
2024-02-25 17:43:23.919 +07:00 [INF] Server laptop-2s90t1ik:37156:b611bc1b is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:43:23.923 +07:00 [INF] Server laptop-2s90t1ik:37156:b611bc1b all the dispatchers started
2024-02-25 17:43:23.993 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:43:24.192 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 199.1043ms
2024-02-25 17:43:24.207 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:43:24.207 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:43:24.209 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.4154ms
2024-02-25 17:43:24.235 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 27.9414ms
2024-02-25 17:43:24.749 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 17:43:24.777 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:43:24.814 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:43:25.076 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:43:25.211 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 135.6488ms
2024-02-25 17:43:25.678 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 17:43:25.787 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:43:25.932 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[Time]
FROM [Categories] AS [c]
2024-02-25 17:43:25.970 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
2024-02-25 17:43:25.999 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
2024-02-25 17:43:26.016 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1194.5549ms
2024-02-25 17:43:26.017 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:43:26.022 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 500 - application/json 1273.0210ms
2024-02-25 17:44:26.561 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:44:26.830 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:44:26.857 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:44:26.926 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:44:26.927 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:44:26.932 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:44:26.933 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:44:26.933 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:44:26.941 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:44:26.942 +07:00 [INF] Hosting environment: Development
2024-02-25 17:44:26.942 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:44:27.021 +07:00 [INF] Server laptop-2s90t1ik:29324:4d07bff7 successfully announced in 81,0442 ms
2024-02-25 17:44:27.024 +07:00 [INF] Server laptop-2s90t1ik:29324:4d07bff7 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:44:27.029 +07:00 [INF] Server laptop-2s90t1ik:29324:4d07bff7 all the dispatchers started
2024-02-25 17:44:27.198 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:44:27.380 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 182.5007ms
2024-02-25 17:44:27.399 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:44:27.399 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:44:27.401 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.6540ms
2024-02-25 17:44:27.421 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.4441ms
2024-02-25 17:44:28.122 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:44:28.223 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 100.8903ms
2024-02-25 17:44:47.840 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:44:47.844 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 3.9709ms
2024-02-25 17:44:47.865 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:44:47.865 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:44:47.867 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 1.8008ms
2024-02-25 17:44:47.875 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 9.3856ms
2024-02-25 17:44:48.682 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:44:48.702 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 19.3606ms
2024-02-25 17:44:48.931 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 17:44:48.961 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:44:48.994 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:44:49.811 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 17:44:49.924 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:44:50.071 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[Time]
FROM [Categories] AS [c]
2024-02-25 17:44:50.108 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
2024-02-25 17:44:50.137 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
2024-02-25 17:44:50.152 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 17:44:50.170 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1170.6919ms
2024-02-25 17:44:50.171 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:44:50.174 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 1242.9778ms
2024-02-25 17:45:36.306 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:45:36.586 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:45:36.615 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:45:36.681 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:45:36.683 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:45:36.688 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:45:36.688 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:45:36.689 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:45:36.697 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:45:36.697 +07:00 [INF] Hosting environment: Development
2024-02-25 17:45:36.698 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:45:36.778 +07:00 [INF] Server laptop-2s90t1ik:18392:867212a2 successfully announced in 81,8803 ms
2024-02-25 17:45:36.780 +07:00 [INF] Server laptop-2s90t1ik:18392:867212a2 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:45:36.785 +07:00 [INF] Server laptop-2s90t1ik:18392:867212a2 all the dispatchers started
2024-02-25 17:45:36.938 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:45:37.116 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 178.1562ms
2024-02-25 17:45:37.132 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:45:37.132 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:45:37.134 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.4824ms
2024-02-25 17:45:37.157 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.6028ms
2024-02-25 17:45:37.865 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:45:37.971 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 105.6056ms
2024-02-25 17:49:43.209 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:49:43.545 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:49:43.576 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:49:43.662 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:49:43.663 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:49:43.671 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:49:43.673 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:49:43.674 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:49:43.685 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:49:43.686 +07:00 [INF] Hosting environment: Development
2024-02-25 17:49:43.688 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:49:43.791 +07:00 [INF] Server laptop-2s90t1ik:2624:51581b61 successfully announced in 107,0587 ms
2024-02-25 17:49:43.794 +07:00 [INF] Server laptop-2s90t1ik:2624:51581b61 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:49:43.795 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:49:43.800 +07:00 [INF] Server laptop-2s90t1ik:2624:51581b61 all the dispatchers started
2024-02-25 17:49:43.801 +07:00 [INF] 4 servers were removed due to timeout
2024-02-25 17:49:44.024 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 230.2867ms
2024-02-25 17:49:44.042 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:49:44.042 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:49:44.045 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.0622ms
2024-02-25 17:49:44.069 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.3263ms
2024-02-25 17:49:44.937 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:49:45.079 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 142.4969ms
2024-02-25 17:49:50.180 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:49:50.491 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:49:50.520 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:49:50.594 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:49:50.595 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:49:50.601 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:49:50.603 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:49:50.603 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:49:50.612 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:49:50.613 +07:00 [INF] Hosting environment: Development
2024-02-25 17:49:50.613 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:49:50.690 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:49:50.715 +07:00 [INF] Server laptop-2s90t1ik:4932:e9584f2e successfully announced in 103,8651 ms
2024-02-25 17:49:50.719 +07:00 [INF] Server laptop-2s90t1ik:4932:e9584f2e is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:49:50.732 +07:00 [INF] Server laptop-2s90t1ik:4932:e9584f2e all the dispatchers started
2024-02-25 17:49:50.949 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 259.6452ms
2024-02-25 17:49:50.979 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:49:50.979 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:49:50.983 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 4.3531ms
2024-02-25 17:49:50.996 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 17:49:51.015 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 36.2308ms
2024-02-25 17:49:51.030 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:49:51.066 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:49:51.699 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:49:51.845 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 146.2373ms
2024-02-25 17:49:52.057 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 17:49:52.159 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:49:52.311 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[Time]
FROM [Categories] AS [c]
2024-02-25 17:49:52.349 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
2024-02-25 17:49:52.379 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
2024-02-25 17:49:52.398 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 17:49:52.418 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1347.0333ms
2024-02-25 17:49:52.420 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:49:52.423 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 1426.8672ms
2024-02-25 17:50:59.736 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:51:00.046 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:51:00.079 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:51:00.152 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:51:00.154 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:51:00.162 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:51:00.163 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:51:00.164 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:51:00.173 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:51:00.174 +07:00 [INF] Hosting environment: Development
2024-02-25 17:51:00.174 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:51:00.276 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:51:00.280 +07:00 [INF] Server laptop-2s90t1ik:10436:0ab7f47a successfully announced in 107,9857 ms
2024-02-25 17:51:00.283 +07:00 [INF] Server laptop-2s90t1ik:10436:0ab7f47a is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:51:00.288 +07:00 [INF] Server laptop-2s90t1ik:10436:0ab7f47a all the dispatchers started
2024-02-25 17:51:00.288 +07:00 [INF] 1 servers were removed due to timeout
2024-02-25 17:51:00.478 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 202.2476ms
2024-02-25 17:51:00.492 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:51:00.492 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:51:00.494 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.3016ms
2024-02-25 17:51:00.518 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.9115ms
2024-02-25 17:51:01.275 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:51:01.391 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 115.8594ms
2024-02-25 17:51:11.634 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:51:11.956 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:51:11.988 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:51:12.067 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:51:12.069 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:51:12.074 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:51:12.075 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:51:12.075 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:51:12.083 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:51:12.084 +07:00 [INF] Hosting environment: Development
2024-02-25 17:51:12.085 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:51:12.152 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:51:12.178 +07:00 [INF] Server laptop-2s90t1ik:3112:38934567 successfully announced in 95,5893 ms
2024-02-25 17:51:12.181 +07:00 [INF] Server laptop-2s90t1ik:3112:38934567 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:51:12.186 +07:00 [INF] Server laptop-2s90t1ik:3112:38934567 all the dispatchers started
2024-02-25 17:51:12.367 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 216.0441ms
2024-02-25 17:51:12.382 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:51:12.382 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:51:12.384 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.2741ms
2024-02-25 17:51:12.402 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.5656ms
2024-02-25 17:51:14.073 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:51:14.290 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:51:14.319 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:51:14.393 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:51:14.395 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:51:14.400 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:51:14.401 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:51:14.401 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:51:14.409 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:51:14.410 +07:00 [INF] Hosting environment: Development
2024-02-25 17:51:14.412 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:51:14.481 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:51:14.519 +07:00 [INF] Server laptop-2s90t1ik:40052:78284972 successfully announced in 110,2143 ms
2024-02-25 17:51:14.522 +07:00 [INF] Server laptop-2s90t1ik:40052:78284972 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:51:14.527 +07:00 [INF] Server laptop-2s90t1ik:40052:78284972 all the dispatchers started
2024-02-25 17:51:14.608 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:51:14.687 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 206.4066ms
2024-02-25 17:51:14.741 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 133.1587ms
2024-02-25 17:51:14.788 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:51:14.788 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:51:14.790 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.3631ms
2024-02-25 17:51:14.814 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.8519ms
2024-02-25 17:51:15.406 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:51:15.420 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 13.8845ms
2024-02-25 17:52:04.263 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:52:04.601 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:52:04.629 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:52:04.706 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:52:04.707 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:52:04.713 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:52:04.713 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:52:04.714 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:52:04.723 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:52:04.724 +07:00 [INF] Hosting environment: Development
2024-02-25 17:52:04.725 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:52:04.831 +07:00 [INF] Server laptop-2s90t1ik:2012:93be9ae7 successfully announced in 108,5704 ms
2024-02-25 17:52:04.833 +07:00 [INF] Server laptop-2s90t1ik:2012:93be9ae7 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:52:04.837 +07:00 [INF] Server laptop-2s90t1ik:2012:93be9ae7 all the dispatchers started
2024-02-25 17:52:04.847 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:52:05.037 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 190.6741ms
2024-02-25 17:52:05.052 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:52:05.052 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:52:05.055 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.6987ms
2024-02-25 17:52:05.076 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.3101ms
2024-02-25 17:52:06.020 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:52:06.173 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 152.7014ms
2024-02-25 17:52:11.721 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:52:12.029 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:52:12.057 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:52:12.133 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:52:12.135 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:52:12.140 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:52:12.141 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:52:12.141 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:52:12.150 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:52:12.150 +07:00 [INF] Hosting environment: Development
2024-02-25 17:52:12.151 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:52:12.256 +07:00 [INF] Server laptop-2s90t1ik:11548:b31e0225 successfully announced in 106,9653 ms
2024-02-25 17:52:12.259 +07:00 [INF] Server laptop-2s90t1ik:11548:b31e0225 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:52:12.271 +07:00 [INF] Server laptop-2s90t1ik:11548:b31e0225 all the dispatchers started
2024-02-25 17:52:12.328 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:52:12.589 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 260.7986ms
2024-02-25 17:52:12.618 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:52:12.618 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:52:12.624 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 4.8924ms
2024-02-25 17:52:12.655 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 37.6662ms
2024-02-25 17:52:13.571 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 17:52:13.599 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:52:13.610 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:52:13.640 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:52:13.766 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 155.8754ms
2024-02-25 17:52:14.470 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 17:52:14.581 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:52:14.660 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1014.8599ms
2024-02-25 17:52:14.664 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:52:14.672 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 400 - application/json 1100.1746ms
2024-02-25 17:53:06.723 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:53:07.032 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:53:07.065 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:53:07.136 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:53:07.138 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:53:07.143 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:53:07.144 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:53:07.144 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:53:07.152 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:53:07.153 +07:00 [INF] Hosting environment: Development
2024-02-25 17:53:07.154 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:53:07.243 +07:00 [INF] Server laptop-2s90t1ik:26748:5a910ce3 successfully announced in 91,4063 ms
2024-02-25 17:53:07.246 +07:00 [INF] Server laptop-2s90t1ik:26748:5a910ce3 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:53:07.250 +07:00 [INF] Server laptop-2s90t1ik:26748:5a910ce3 all the dispatchers started
2024-02-25 17:53:07.328 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:53:07.528 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 200.0192ms
2024-02-25 17:53:07.543 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:53:07.543 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:53:07.545 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.2772ms
2024-02-25 17:53:07.570 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.4927ms
2024-02-25 17:53:08.404 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:53:08.523 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 118.9270ms
2024-02-25 17:53:15.562 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:53:15.868 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:53:15.898 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:53:15.975 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:53:15.976 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:53:15.982 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:53:15.983 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:53:15.983 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:53:15.992 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:53:15.993 +07:00 [INF] Hosting environment: Development
2024-02-25 17:53:15.994 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:53:16.085 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:53:16.101 +07:00 [INF] Server laptop-2s90t1ik:36340:a56e6604 successfully announced in 109,3738 ms
2024-02-25 17:53:16.104 +07:00 [INF] Server laptop-2s90t1ik:36340:a56e6604 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:53:16.109 +07:00 [INF] Server laptop-2s90t1ik:36340:a56e6604 all the dispatchers started
2024-02-25 17:53:16.300 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 215.2084ms
2024-02-25 17:53:16.316 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:53:16.316 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:53:16.318 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.4465ms
2024-02-25 17:53:16.340 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.1131ms
2024-02-25 17:53:16.835 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 17:53:16.878 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:53:16.914 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:53:17.245 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:53:17.391 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 146.3736ms
2024-02-25 17:53:17.840 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 17:53:17.962 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:53:18.047 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1127.0607ms
2024-02-25 17:53:18.050 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:53:18.058 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 400 - application/json 1223.0577ms
2024-02-25 17:54:17.179 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:54:17.473 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:54:17.504 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:54:17.584 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:54:17.585 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:54:17.591 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:54:17.592 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:54:17.592 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:54:17.605 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:54:17.606 +07:00 [INF] Hosting environment: Development
2024-02-25 17:54:17.607 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:54:17.722 +07:00 [INF] Server laptop-2s90t1ik:35544:d4d0f6ee successfully announced in 119,2836 ms
2024-02-25 17:54:17.726 +07:00 [INF] Server laptop-2s90t1ik:35544:d4d0f6ee is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:54:17.733 +07:00 [INF] Server laptop-2s90t1ik:35544:d4d0f6ee all the dispatchers started
2024-02-25 17:54:17.732 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:54:17.955 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 222.7579ms
2024-02-25 17:54:17.974 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:54:17.974 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:54:17.977 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.5448ms
2024-02-25 17:54:18.013 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 39.4930ms
2024-02-25 17:54:18.892 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:54:19.012 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 120.5856ms
2024-02-25 17:56:12.431 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:56:12.720 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:56:12.749 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:56:12.822 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:56:12.823 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:56:12.829 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:56:12.829 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:56:12.830 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:56:12.838 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:56:12.839 +07:00 [INF] Hosting environment: Development
2024-02-25 17:56:12.839 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:56:12.933 +07:00 [INF] Server laptop-2s90t1ik:15784:10caf763 successfully announced in 95,5731 ms
2024-02-25 17:56:12.936 +07:00 [INF] Server laptop-2s90t1ik:15784:10caf763 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:56:12.940 +07:00 [INF] Server laptop-2s90t1ik:15784:10caf763 all the dispatchers started
2024-02-25 17:56:12.941 +07:00 [INF] 5 servers were removed due to timeout
2024-02-25 17:56:13.010 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:56:13.201 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 190.4665ms
2024-02-25 17:56:13.219 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:56:13.219 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:56:13.222 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.9290ms
2024-02-25 17:56:13.243 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.6392ms
2024-02-25 17:56:14.069 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:56:14.194 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 124.9643ms
2024-02-25 17:57:15.301 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:57:15.602 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:57:15.633 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:57:15.707 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:57:15.708 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:57:15.714 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:57:15.715 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:57:15.715 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:57:15.723 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:57:15.724 +07:00 [INF] Hosting environment: Development
2024-02-25 17:57:15.725 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:57:15.815 +07:00 [INF] Server laptop-2s90t1ik:8540:5c870184 successfully announced in 91,9249 ms
2024-02-25 17:57:15.817 +07:00 [INF] Server laptop-2s90t1ik:8540:5c870184 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:57:15.822 +07:00 [INF] Server laptop-2s90t1ik:8540:5c870184 all the dispatchers started
2024-02-25 17:57:15.823 +07:00 [INF] 2 servers were removed due to timeout
2024-02-25 17:57:15.872 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:57:16.056 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 183.5528ms
2024-02-25 17:57:16.071 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:57:16.071 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:57:16.073 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.2943ms
2024-02-25 17:57:16.093 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.6400ms
2024-02-25 17:57:16.921 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:57:17.041 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 120.1673ms
2024-02-25 17:58:11.005 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 17:58:11.306 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 17:58:11.336 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 17:58:11.413 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 17:58:11.414 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 17:58:11.420 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 17:58:11.421 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 17:58:11.421 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 17:58:11.430 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 17:58:11.431 +07:00 [INF] Hosting environment: Development
2024-02-25 17:58:11.431 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 17:58:11.522 +07:00 [INF] Server laptop-2s90t1ik:11624:7c53ce44 successfully announced in 93,4139 ms
2024-02-25 17:58:11.526 +07:00 [INF] Server laptop-2s90t1ik:11624:7c53ce44 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 17:58:11.532 +07:00 [INF] Server laptop-2s90t1ik:11624:7c53ce44 all the dispatchers started
2024-02-25 17:58:11.533 +07:00 [INF] 2 servers were removed due to timeout
2024-02-25 17:58:11.586 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:58:11.793 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 207.2699ms
2024-02-25 17:58:11.806 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:58:11.806 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:58:11.809 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.2533ms
2024-02-25 17:58:11.831 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.1065ms
2024-02-25 17:58:12.611 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:58:12.720 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 108.8804ms
2024-02-25 17:58:15.648 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 17:58:15.673 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:58:15.700 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:58:16.450 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 17:58:16.565 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:58:16.643 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 936.5387ms
2024-02-25 17:58:16.646 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:58:16.655 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 400 - application/json 1007.4938ms
2024-02-25 17:58:24.821 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 17:58:24.825 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 3.6791ms
2024-02-25 17:58:24.846 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 17:58:24.846 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 17:58:24.848 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 1.7955ms
2024-02-25 17:58:24.853 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.5095ms
2024-02-25 17:58:25.692 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 17:58:25.704 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 12.0521ms
2024-02-25 17:58:26.952 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 17:58:26.956 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:58:26.957 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:58:26.993 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:58:26.996 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 38.0013ms
2024-02-25 17:58:26.997 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:58:26.998 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 400 - application/json 45.7117ms
2024-02-25 17:58:27.948 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 17:58:27.955 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:58:27.956 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:58:27.972 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:58:27.977 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 19.9381ms
2024-02-25 17:58:27.979 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:58:27.982 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 400 - application/json 33.7942ms
2024-02-25 17:58:28.923 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 17:58:28.924 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:58:28.925 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 17:58:28.928 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 17:58:28.931 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 3.9034ms
2024-02-25 17:58:28.932 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 17:58:28.933 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 400 - application/json 9.7752ms
2024-02-25 18:03:11.537 +07:00 [INF] 4 servers were removed due to timeout
2024-02-25 18:14:00.189 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 18:14:00.191 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:14:00.192 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:14:00.197 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:14:00.202 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 7.4052ms
2024-02-25 18:14:00.203 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:14:00.204 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 400 - application/json 15.1049ms
2024-02-25 18:14:03.780 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:14:04.077 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:14:04.109 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:14:04.218 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:14:04.219 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:14:04.227 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:14:04.228 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:14:04.229 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:14:04.242 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:14:04.243 +07:00 [INF] Hosting environment: Development
2024-02-25 18:14:04.245 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:14:04.385 +07:00 [INF] Server laptop-2s90t1ik:42968:dcc86dba successfully announced in 143,9168 ms
2024-02-25 18:14:04.388 +07:00 [INF] Server laptop-2s90t1ik:42968:dcc86dba is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:14:04.394 +07:00 [INF] Server laptop-2s90t1ik:42968:dcc86dba all the dispatchers started
2024-02-25 18:14:04.483 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 18:14:04.514 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:14:04.586 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:14:04.624 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:14:04.724 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 209.5460ms
2024-02-25 18:14:04.752 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:14:04.752 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:14:04.756 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.5983ms
2024-02-25 18:14:04.781 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 29.3906ms
2024-02-25 18:14:05.594 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 18:14:05.749 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:14:05.792 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:14:05.929 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 137.1049ms
2024-02-25 18:14:06.053 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [orderSucces]
FROM [Products] AS [p]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [p0].[Time]
2024-02-25 18:14:06.063 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:14:06.080 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1451.4364ms
2024-02-25 18:14:06.081 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:14:06.084 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 1603.0839ms
2024-02-25 18:14:12.737 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 18:14:12.739 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:14:12.740 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:14:12.776 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:14:12.783 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [p0].[Time] AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [orderSucces]
FROM [Products] AS [p]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [p0].[Time]
2024-02-25 18:14:12.785 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:14:12.786 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 45.3463ms
2024-02-25 18:14:12.787 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:14:12.788 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 51.8091ms
2024-02-25 18:15:12.003 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:15:12.220 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:15:12.250 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:15:12.328 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:15:12.328 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:15:12.335 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:15:12.336 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:15:12.337 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:15:12.347 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:15:12.348 +07:00 [INF] Hosting environment: Development
2024-02-25 18:15:12.348 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:15:12.444 +07:00 [INF] Server laptop-2s90t1ik:30632:1bd84229 successfully announced in 98,5729 ms
2024-02-25 18:15:12.447 +07:00 [INF] Server laptop-2s90t1ik:30632:1bd84229 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:15:12.451 +07:00 [INF] Server laptop-2s90t1ik:30632:1bd84229 all the dispatchers started
2024-02-25 18:15:12.533 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:15:12.720 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 186.6844ms
2024-02-25 18:15:12.735 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:15:12.735 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:15:12.738 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.7368ms
2024-02-25 18:15:12.762 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.5505ms
2024-02-25 18:15:13.548 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:15:13.661 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 113.1308ms
2024-02-25 18:15:20.983 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:15:21.203 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:15:21.240 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:15:21.328 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:15:21.329 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:15:21.335 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:15:21.335 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:15:21.336 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:15:21.345 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:15:21.346 +07:00 [INF] Hosting environment: Development
2024-02-25 18:15:21.346 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:15:21.438 +07:00 [INF] Server laptop-2s90t1ik:9028:008a6cb0 successfully announced in 94,3188 ms
2024-02-25 18:15:21.441 +07:00 [INF] Server laptop-2s90t1ik:9028:008a6cb0 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:15:21.446 +07:00 [INF] Server laptop-2s90t1ik:9028:008a6cb0 all the dispatchers started
2024-02-25 18:15:21.595 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:15:21.836 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 242.1134ms
2024-02-25 18:15:21.862 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:15:21.862 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:15:21.866 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.9451ms
2024-02-25 18:15:21.900 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 37.6754ms
2024-02-25 18:15:22.020 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 18:15:22.055 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:15:22.089 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:15:23.158 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 18:15:23.302 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:15:23.336 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:15:23.485 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 149.4251ms
2024-02-25 18:15:23.619 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p0].[Time]) AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [orderSucces]
FROM [Products] AS [p]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY CONVERT(date, [p0].[Time])
2024-02-25 18:15:23.627 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:15:23.645 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1550.9874ms
2024-02-25 18:15:23.647 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:15:23.650 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 1630.4019ms
2024-02-25 18:17:41.395 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:17:41.602 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:17:41.630 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:17:41.700 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:17:41.702 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:17:41.707 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:17:41.708 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:17:41.708 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:17:41.716 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:17:41.717 +07:00 [INF] Hosting environment: Development
2024-02-25 18:17:41.718 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:17:41.800 +07:00 [INF] Server laptop-2s90t1ik:41256:ddc25bd8 successfully announced in 84,2241 ms
2024-02-25 18:17:41.802 +07:00 [INF] Server laptop-2s90t1ik:41256:ddc25bd8 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:17:41.807 +07:00 [INF] Server laptop-2s90t1ik:41256:ddc25bd8 all the dispatchers started
2024-02-25 18:17:41.975 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:17:42.166 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 191.0002ms
2024-02-25 18:17:42.179 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:17:42.179 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:17:42.182 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.5889ms
2024-02-25 18:17:42.203 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.5915ms
2024-02-25 18:17:42.982 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:17:43.099 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 117.1523ms
2024-02-25 18:18:07.643 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:18:07.850 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:18:07.878 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:18:07.950 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:18:07.950 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:18:07.956 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:18:07.957 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:18:07.957 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:18:07.966 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:18:07.966 +07:00 [INF] Hosting environment: Development
2024-02-25 18:18:07.967 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:18:08.056 +07:00 [INF] Server laptop-2s90t1ik:23648:8b3c9a3b successfully announced in 91,3885 ms
2024-02-25 18:18:08.059 +07:00 [INF] Server laptop-2s90t1ik:23648:8b3c9a3b is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:18:08.064 +07:00 [INF] Server laptop-2s90t1ik:23648:8b3c9a3b all the dispatchers started
2024-02-25 18:18:08.282 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:18:08.478 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 196.4653ms
2024-02-25 18:18:08.495 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:18:08.495 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:18:08.499 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 4.0222ms
2024-02-25 18:18:08.521 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.2823ms
2024-02-25 18:18:09.291 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:18:09.419 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 128.4567ms
2024-02-25 18:19:04.753 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:19:04.959 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:19:04.988 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:19:05.063 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:19:05.065 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:19:05.070 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:19:05.071 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:19:05.072 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:19:05.080 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:19:05.081 +07:00 [INF] Hosting environment: Development
2024-02-25 18:19:05.081 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:19:05.164 +07:00 [INF] Server laptop-2s90t1ik:25196:731f59b9 successfully announced in 85,0086 ms
2024-02-25 18:19:05.168 +07:00 [INF] Server laptop-2s90t1ik:25196:731f59b9 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:19:05.172 +07:00 [INF] 1 servers were removed due to timeout
2024-02-25 18:19:05.172 +07:00 [INF] Server laptop-2s90t1ik:25196:731f59b9 all the dispatchers started
2024-02-25 18:19:05.359 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:19:05.570 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 210.7379ms
2024-02-25 18:19:05.586 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:19:05.586 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:19:05.591 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 4.5326ms
2024-02-25 18:19:05.618 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 31.5218ms
2024-02-25 18:19:06.349 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:19:06.477 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 127.9099ms
2024-02-25 18:19:32.929 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:19:33.132 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:19:33.161 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:19:33.235 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:19:33.236 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:19:33.242 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:19:33.243 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:19:33.243 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:19:33.252 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:19:33.252 +07:00 [INF] Hosting environment: Development
2024-02-25 18:19:33.253 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:19:33.334 +07:00 [INF] Server laptop-2s90t1ik:5264:c116d47c successfully announced in 83,4832 ms
2024-02-25 18:19:33.337 +07:00 [INF] Server laptop-2s90t1ik:5264:c116d47c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:19:33.342 +07:00 [INF] Server laptop-2s90t1ik:5264:c116d47c all the dispatchers started
2024-02-25 18:19:33.539 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:19:33.718 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 180.0493ms
2024-02-25 18:19:33.733 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:19:33.733 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:19:33.736 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.5357ms
2024-02-25 18:19:33.756 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.5443ms
2024-02-25 18:19:34.491 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:19:34.611 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 120.0123ms
2024-02-25 18:20:08.257 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:20:08.465 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:20:08.495 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:20:08.567 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:20:08.568 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:20:08.573 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:20:08.574 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:20:08.574 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:20:08.583 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:20:08.584 +07:00 [INF] Hosting environment: Development
2024-02-25 18:20:08.584 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:20:08.668 +07:00 [INF] Server laptop-2s90t1ik:30232:a5854936 successfully announced in 86,2781 ms
2024-02-25 18:20:08.671 +07:00 [INF] Server laptop-2s90t1ik:30232:a5854936 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:20:08.675 +07:00 [INF] 1 servers were removed due to timeout
2024-02-25 18:20:08.676 +07:00 [INF] Server laptop-2s90t1ik:30232:a5854936 all the dispatchers started
2024-02-25 18:20:08.843 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:20:09.026 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 182.8746ms
2024-02-25 18:20:09.040 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:20:09.040 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:20:09.043 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.1979ms
2024-02-25 18:20:09.066 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.9022ms
2024-02-25 18:20:09.840 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:20:09.953 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 112.9236ms
2024-02-25 18:20:37.617 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:20:37.823 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:20:37.851 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:20:37.922 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:20:37.923 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:20:37.928 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:20:37.929 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:20:37.929 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:20:37.937 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:20:37.938 +07:00 [INF] Hosting environment: Development
2024-02-25 18:20:37.939 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:20:38.022 +07:00 [INF] Server laptop-2s90t1ik:13684:aca761dd successfully announced in 85,6171 ms
2024-02-25 18:20:38.026 +07:00 [INF] Server laptop-2s90t1ik:13684:aca761dd is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:20:38.029 +07:00 [INF] 1 servers were removed due to timeout
2024-02-25 18:20:38.030 +07:00 [INF] Server laptop-2s90t1ik:13684:aca761dd all the dispatchers started
2024-02-25 18:20:38.224 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:20:38.423 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 199.4650ms
2024-02-25 18:20:38.439 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:20:38.439 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:20:38.441 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.7858ms
2024-02-25 18:20:38.462 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.2250ms
2024-02-25 18:20:39.263 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:20:39.390 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 126.9060ms
2024-02-25 18:20:58.260 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:20:58.495 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:20:58.537 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:20:58.671 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:20:58.673 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:20:58.682 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:20:58.690 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:20:58.691 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:20:58.705 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:20:58.707 +07:00 [INF] Hosting environment: Development
2024-02-25 18:20:58.708 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:20:58.859 +07:00 [INF] Server laptop-2s90t1ik:14772:4f840d95 successfully announced in 154,7073 ms
2024-02-25 18:20:58.865 +07:00 [INF] Server laptop-2s90t1ik:14772:4f840d95 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:20:58.894 +07:00 [INF] Server laptop-2s90t1ik:14772:4f840d95 all the dispatchers started
2024-02-25 18:20:58.896 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:20:59.229 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 333.0506ms
2024-02-25 18:20:59.263 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:20:59.263 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:20:59.272 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 9.1983ms
2024-02-25 18:20:59.314 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 51.0432ms
2024-02-25 18:21:00.219 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:21:00.376 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 156.5785ms
2024-02-25 18:21:25.725 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:21:25.938 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:21:25.968 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:21:26.040 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:21:26.042 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:21:26.047 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:21:26.048 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:21:26.048 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:21:26.057 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:21:26.057 +07:00 [INF] Hosting environment: Development
2024-02-25 18:21:26.058 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:21:26.143 +07:00 [INF] Server laptop-2s90t1ik:17260:8af84904 successfully announced in 87,1672 ms
2024-02-25 18:21:26.146 +07:00 [INF] Server laptop-2s90t1ik:17260:8af84904 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:21:26.150 +07:00 [INF] Server laptop-2s90t1ik:17260:8af84904 all the dispatchers started
2024-02-25 18:21:26.302 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:21:26.491 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 189.7402ms
2024-02-25 18:21:26.505 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:21:26.505 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:21:26.508 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.9043ms
2024-02-25 18:21:26.528 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.4081ms
2024-02-25 18:21:27.140 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:21:27.264 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 123.6443ms
2024-02-25 18:21:36.067 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:21:36.293 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:21:36.322 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:21:36.402 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:21:36.403 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:21:36.409 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:21:36.411 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:21:36.411 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:21:36.420 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:21:36.421 +07:00 [INF] Hosting environment: Development
2024-02-25 18:21:36.421 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:21:36.506 +07:00 [INF] Server laptop-2s90t1ik:9212:3a2b32de successfully announced in 87,4029 ms
2024-02-25 18:21:36.509 +07:00 [INF] Server laptop-2s90t1ik:9212:3a2b32de is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:21:36.514 +07:00 [INF] Server laptop-2s90t1ik:9212:3a2b32de all the dispatchers started
2024-02-25 18:21:36.673 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:21:36.866 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 192.9725ms
2024-02-25 18:21:36.880 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:21:36.880 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:21:36.883 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.7916ms
2024-02-25 18:21:36.904 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.5004ms
2024-02-25 18:21:37.684 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:21:37.799 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 115.8414ms
2024-02-25 18:22:47.133 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:22:47.345 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:22:47.373 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:22:47.467 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:22:47.469 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:22:47.475 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:22:47.476 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:22:47.476 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:22:47.485 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:22:47.487 +07:00 [INF] Hosting environment: Development
2024-02-25 18:22:47.487 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:22:47.581 +07:00 [INF] Server laptop-2s90t1ik:11848:13be9901 successfully announced in 96,3981 ms
2024-02-25 18:22:47.584 +07:00 [INF] Server laptop-2s90t1ik:11848:13be9901 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:22:47.587 +07:00 [INF] 2 servers were removed due to timeout
2024-02-25 18:22:47.589 +07:00 [INF] Server laptop-2s90t1ik:11848:13be9901 all the dispatchers started
2024-02-25 18:22:47.747 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:22:47.942 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 195.9948ms
2024-02-25 18:22:47.963 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:22:47.963 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:22:47.967 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 4.3198ms
2024-02-25 18:22:47.992 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 28.9797ms
2024-02-25 18:22:48.742 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:22:48.866 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 123.5698ms
2024-02-25 18:23:08.904 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:23:09.109 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:23:09.138 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:23:09.212 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:23:09.214 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:23:09.219 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:23:09.220 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:23:09.220 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:23:09.229 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:23:09.230 +07:00 [INF] Hosting environment: Development
2024-02-25 18:23:09.230 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:23:09.317 +07:00 [INF] Server laptop-2s90t1ik:43156:97d327ca successfully announced in 88,2519 ms
2024-02-25 18:23:09.319 +07:00 [INF] Server laptop-2s90t1ik:43156:97d327ca is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:23:09.324 +07:00 [INF] Server laptop-2s90t1ik:43156:97d327ca all the dispatchers started
2024-02-25 18:23:09.511 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:23:09.716 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 205.6961ms
2024-02-25 18:23:09.732 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:23:09.732 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:23:09.735 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.9094ms
2024-02-25 18:23:09.759 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.5809ms
2024-02-25 18:23:10.616 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:23:10.753 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 136.5831ms
2024-02-25 18:23:52.792 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:23:53.079 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:23:53.152 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:23:53.299 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:23:53.302 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:23:53.313 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:23:53.320 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:23:53.321 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:23:53.338 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:23:53.341 +07:00 [INF] Hosting environment: Development
2024-02-25 18:23:53.344 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:23:53.454 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:23:53.524 +07:00 [INF] Server laptop-2s90t1ik:41796:1c87bc51 successfully announced in 188,3136 ms
2024-02-25 18:23:53.542 +07:00 [INF] Server laptop-2s90t1ik:41796:1c87bc51 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:23:53.561 +07:00 [INF] 1 servers were removed due to timeout
2024-02-25 18:23:53.595 +07:00 [INF] Server laptop-2s90t1ik:41796:1c87bc51 all the dispatchers started
2024-02-25 18:23:53.830 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 377.9061ms
2024-02-25 18:23:53.908 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:23:53.908 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:23:53.916 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 8.2183ms
2024-02-25 18:23:53.950 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 41.8690ms
2024-02-25 18:23:54.794 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:23:54.919 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 125.0391ms
2024-02-25 18:24:22.733 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:24:22.938 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:24:22.966 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:24:23.038 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:24:23.040 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:24:23.045 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:24:23.047 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:24:23.047 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:24:23.056 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:24:23.056 +07:00 [INF] Hosting environment: Development
2024-02-25 18:24:23.057 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:24:23.145 +07:00 [INF] Server laptop-2s90t1ik:22256:06b7a4cb successfully announced in 90,6324 ms
2024-02-25 18:24:23.149 +07:00 [INF] Server laptop-2s90t1ik:22256:06b7a4cb is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:24:23.153 +07:00 [INF] Server laptop-2s90t1ik:22256:06b7a4cb all the dispatchers started
2024-02-25 18:24:23.156 +07:00 [INF] 1 servers were removed due to timeout
2024-02-25 18:24:23.303 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:24:23.509 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 206.2509ms
2024-02-25 18:24:23.525 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:24:23.525 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:24:23.528 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.3217ms
2024-02-25 18:24:23.551 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.6235ms
2024-02-25 18:24:24.305 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:24:24.419 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 114.1133ms
2024-02-25 18:27:09.467 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:27:09.666 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:27:09.693 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:27:09.761 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:27:09.763 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:27:09.768 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:27:09.769 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:27:09.769 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:27:09.777 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:27:09.778 +07:00 [INF] Hosting environment: Development
2024-02-25 18:27:09.779 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:27:09.856 +07:00 [INF] Server laptop-2s90t1ik:38672:f85fed25 successfully announced in 79,1674 ms
2024-02-25 18:27:09.859 +07:00 [INF] Server laptop-2s90t1ik:38672:f85fed25 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:27:09.862 +07:00 [INF] 5 servers were removed due to timeout
2024-02-25 18:27:09.863 +07:00 [INF] Server laptop-2s90t1ik:38672:f85fed25 all the dispatchers started
2024-02-25 18:27:10.070 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:27:10.247 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 177.1988ms
2024-02-25 18:27:10.260 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:27:10.261 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:27:10.264 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.5291ms
2024-02-25 18:27:10.282 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.8990ms
2024-02-25 18:27:10.973 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:27:11.082 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 107.7077ms
2024-02-25 18:27:48.059 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:27:48.263 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:27:48.291 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:27:48.358 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:27:48.360 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:27:48.366 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:27:48.367 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:27:48.367 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:27:48.376 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:27:48.376 +07:00 [INF] Hosting environment: Development
2024-02-25 18:27:48.377 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:27:48.457 +07:00 [INF] Server laptop-2s90t1ik:29428:107bdab3 successfully announced in 82,2282 ms
2024-02-25 18:27:48.460 +07:00 [INF] Server laptop-2s90t1ik:29428:107bdab3 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:27:48.463 +07:00 [INF] 2 servers were removed due to timeout
2024-02-25 18:27:48.465 +07:00 [INF] Server laptop-2s90t1ik:29428:107bdab3 all the dispatchers started
2024-02-25 18:27:48.669 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:27:48.843 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 174.4380ms
2024-02-25 18:27:48.856 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:27:48.856 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:27:48.858 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.2803ms
2024-02-25 18:27:48.878 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.0280ms
2024-02-25 18:27:49.519 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:27:49.621 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 101.8620ms
2024-02-25 18:28:09.771 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:28:09.982 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:28:10.010 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:28:10.079 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:28:10.080 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:28:10.086 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:28:10.087 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:28:10.087 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:28:10.095 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:28:10.096 +07:00 [INF] Hosting environment: Development
2024-02-25 18:28:10.096 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:28:10.176 +07:00 [INF] Server laptop-2s90t1ik:38024:58588dba successfully announced in 81,3884 ms
2024-02-25 18:28:10.179 +07:00 [INF] Server laptop-2s90t1ik:38024:58588dba is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:28:10.184 +07:00 [INF] Server laptop-2s90t1ik:38024:58588dba all the dispatchers started
2024-02-25 18:28:10.435 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:28:10.613 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 177.7784ms
2024-02-25 18:28:10.625 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:28:10.625 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:28:10.627 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.2982ms
2024-02-25 18:28:10.647 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.4228ms
2024-02-25 18:28:11.318 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:28:11.424 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 106.0200ms
2024-02-25 18:29:22.381 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:29:22.580 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:29:22.608 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:29:22.674 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:29:22.676 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:29:22.681 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:29:22.682 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:29:22.682 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:29:22.690 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:29:22.691 +07:00 [INF] Hosting environment: Development
2024-02-25 18:29:22.691 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:29:22.773 +07:00 [INF] Server laptop-2s90t1ik:11620:94bc4140 successfully announced in 83,5714 ms
2024-02-25 18:29:22.776 +07:00 [INF] Server laptop-2s90t1ik:11620:94bc4140 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:29:22.779 +07:00 [INF] 2 servers were removed due to timeout
2024-02-25 18:29:22.781 +07:00 [INF] Server laptop-2s90t1ik:11620:94bc4140 all the dispatchers started
2024-02-25 18:29:23.047 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:29:23.221 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 174.5165ms
2024-02-25 18:29:23.235 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:29:23.235 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:29:23.238 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.0570ms
2024-02-25 18:29:23.256 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.5831ms
2024-02-25 18:29:23.919 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:29:24.032 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 113.0526ms
2024-02-25 18:31:05.504 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:31:05.711 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:31:05.738 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:31:05.829 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:31:05.830 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:31:05.842 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:31:05.845 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:31:05.847 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:31:05.871 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:31:05.872 +07:00 [INF] Hosting environment: Development
2024-02-25 18:31:05.872 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:31:05.990 +07:00 [INF] Server laptop-2s90t1ik:22808:60f0ba90 successfully announced in 124,1742 ms
2024-02-25 18:31:05.993 +07:00 [INF] Server laptop-2s90t1ik:22808:60f0ba90 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:31:05.998 +07:00 [INF] Server laptop-2s90t1ik:22808:60f0ba90 all the dispatchers started
2024-02-25 18:31:06.083 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 18:31:06.110 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:31:06.157 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:31:06.194 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:31:06.307 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 196.4038ms
2024-02-25 18:31:06.324 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:31:06.324 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:31:06.327 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.2351ms
2024-02-25 18:31:06.350 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.6370ms
2024-02-25 18:31:07.084 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 18:31:07.213 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:31:07.297 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1097.7663ms
2024-02-25 18:31:07.301 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:31:07.310 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 400 - application/json 1227.4086ms
2024-02-25 18:31:07.315 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:31:07.469 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 154.5554ms
2024-02-25 18:34:57.314 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:34:57.523 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:34:57.552 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:34:57.626 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:34:57.628 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:34:57.633 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:34:57.634 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:34:57.634 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:34:57.644 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:34:57.645 +07:00 [INF] Hosting environment: Development
2024-02-25 18:34:57.645 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:34:57.733 +07:00 [INF] Server laptop-2s90t1ik:20280:7c648e6c successfully announced in 89,5263 ms
2024-02-25 18:34:57.736 +07:00 [INF] Server laptop-2s90t1ik:20280:7c648e6c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:34:57.739 +07:00 [INF] 4 servers were removed due to timeout
2024-02-25 18:34:57.740 +07:00 [INF] Server laptop-2s90t1ik:20280:7c648e6c all the dispatchers started
2024-02-25 18:34:57.947 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:34:58.126 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 180.2103ms
2024-02-25 18:34:58.142 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:34:58.142 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:34:58.146 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 4.0344ms
2024-02-25 18:34:58.171 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 28.7918ms
2024-02-25 18:34:58.871 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:34:58.987 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 115.5782ms
2024-02-25 18:39:57.752 +07:00 [INF] 2 servers were removed due to timeout
2024-02-25 18:42:16.560 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:42:16.757 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:42:16.784 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:42:16.851 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:42:16.852 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:42:16.857 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:42:16.858 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:42:16.858 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:42:16.866 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:42:16.867 +07:00 [INF] Hosting environment: Development
2024-02-25 18:42:16.867 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:42:16.947 +07:00 [INF] Server laptop-2s90t1ik:31888:6a32d744 successfully announced in 81,4994 ms
2024-02-25 18:42:16.950 +07:00 [INF] Server laptop-2s90t1ik:31888:6a32d744 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:42:16.954 +07:00 [INF] Server laptop-2s90t1ik:31888:6a32d744 all the dispatchers started
2024-02-25 18:42:17.171 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:42:17.351 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 179.9907ms
2024-02-25 18:42:17.365 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:42:17.365 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:42:17.367 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.8746ms
2024-02-25 18:42:17.387 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.1589ms
2024-02-25 18:42:18.113 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:42:18.227 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 113.0986ms
2024-02-25 18:42:52.242 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:42:52.445 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:42:52.471 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:42:52.537 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:42:52.538 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:42:52.544 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:42:52.544 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:42:52.545 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:42:52.553 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:42:52.553 +07:00 [INF] Hosting environment: Development
2024-02-25 18:42:52.554 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:42:52.638 +07:00 [INF] Server laptop-2s90t1ik:21184:6dfe5398 successfully announced in 85,7814 ms
2024-02-25 18:42:52.640 +07:00 [INF] Server laptop-2s90t1ik:21184:6dfe5398 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:42:52.644 +07:00 [INF] Server laptop-2s90t1ik:21184:6dfe5398 all the dispatchers started
2024-02-25 18:42:52.814 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:42:52.988 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 173.6170ms
2024-02-25 18:42:53.001 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:42:53.001 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:42:53.005 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.9926ms
2024-02-25 18:42:53.030 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 28.1976ms
2024-02-25 18:42:53.743 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:42:53.863 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 120.3479ms
2024-02-25 18:43:02.364 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:43:02.568 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:43:02.597 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:43:02.666 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:43:02.666 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:43:02.672 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:43:02.672 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:43:02.673 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:43:02.681 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:43:02.681 +07:00 [INF] Hosting environment: Development
2024-02-25 18:43:02.682 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:43:02.760 +07:00 [INF] Server laptop-2s90t1ik:44200:e424d983 successfully announced in 79,8475 ms
2024-02-25 18:43:02.762 +07:00 [INF] Server laptop-2s90t1ik:44200:e424d983 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:43:02.768 +07:00 [INF] Server laptop-2s90t1ik:44200:e424d983 all the dispatchers started
2024-02-25 18:43:02.953 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:43:03.145 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 192.2748ms
2024-02-25 18:43:03.164 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:43:03.164 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:43:03.167 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.4158ms
2024-02-25 18:43:03.189 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.9905ms
2024-02-25 18:43:04.124 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:43:04.231 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 107.0336ms
2024-02-25 18:43:11.893 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:43:12.150 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:43:12.187 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:43:12.265 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:43:12.266 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:43:12.272 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:43:12.273 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:43:12.273 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:43:12.281 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:43:12.282 +07:00 [INF] Hosting environment: Development
2024-02-25 18:43:12.282 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:43:12.362 +07:00 [INF] Server laptop-2s90t1ik:32716:3459bbb8 successfully announced in 82,3732 ms
2024-02-25 18:43:12.365 +07:00 [INF] Server laptop-2s90t1ik:32716:3459bbb8 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:43:12.370 +07:00 [INF] Server laptop-2s90t1ik:32716:3459bbb8 all the dispatchers started
2024-02-25 18:43:12.397 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:43:12.592 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 195.5875ms
2024-02-25 18:43:12.605 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:43:12.605 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:43:12.608 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.0095ms
2024-02-25 18:43:12.635 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 29.7850ms
2024-02-25 18:43:13.442 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:43:13.583 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 140.9514ms
2024-02-25 18:44:00.570 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:44:00.762 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:44:00.790 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:44:00.858 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:44:00.859 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:44:00.864 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:44:00.865 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:44:00.865 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:44:00.873 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:44:00.874 +07:00 [INF] Hosting environment: Development
2024-02-25 18:44:00.874 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:44:00.953 +07:00 [INF] Server laptop-2s90t1ik:26548:7c46f726 successfully announced in 80,1039 ms
2024-02-25 18:44:00.956 +07:00 [INF] Server laptop-2s90t1ik:26548:7c46f726 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:44:00.961 +07:00 [INF] Server laptop-2s90t1ik:26548:7c46f726 all the dispatchers started
2024-02-25 18:44:01.187 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:44:01.383 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 195.8119ms
2024-02-25 18:44:01.403 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:44:01.403 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:44:01.405 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.2633ms
2024-02-25 18:44:01.426 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.5826ms
2024-02-25 18:44:02.087 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:44:02.189 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 101.9169ms
2024-02-25 18:44:05.188 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 18:44:05.229 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:44:05.263 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:44:06.078 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 18:44:06.186 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:44:06.431 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p0].[Time]) AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [orderSucces]
FROM [Products] AS [p]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY CONVERT(date, [p0].[Time])
2024-02-25 18:44:06.442 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:44:06.461 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1194.0803ms
2024-02-25 18:44:06.463 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:44:06.467 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 1278.8719ms
2024-02-25 18:44:27.126 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:44:27.326 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:44:27.353 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:44:27.421 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:44:27.422 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:44:27.428 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:44:27.428 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:44:27.429 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:44:27.437 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:44:27.438 +07:00 [INF] Hosting environment: Development
2024-02-25 18:44:27.438 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:44:27.518 +07:00 [INF] Server laptop-2s90t1ik:18408:ef32eb5c successfully announced in 81,5188 ms
2024-02-25 18:44:27.522 +07:00 [INF] Server laptop-2s90t1ik:18408:ef32eb5c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:44:27.526 +07:00 [INF] Server laptop-2s90t1ik:18408:ef32eb5c all the dispatchers started
2024-02-25 18:44:27.741 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:44:27.920 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 179.2058ms
2024-02-25 18:44:27.934 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:44:27.934 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:44:27.937 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.6194ms
2024-02-25 18:44:27.956 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.9471ms
2024-02-25 18:44:28.689 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:44:28.794 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 104.6039ms
2024-02-25 18:45:02.571 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:45:02.779 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:45:02.809 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:45:02.879 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:45:02.880 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:45:02.885 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:45:02.886 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:45:02.886 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:45:02.894 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:45:02.895 +07:00 [INF] Hosting environment: Development
2024-02-25 18:45:02.896 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:45:02.979 +07:00 [INF] Server laptop-2s90t1ik:30900:36c0a48b successfully announced in 85,3698 ms
2024-02-25 18:45:02.981 +07:00 [INF] Server laptop-2s90t1ik:30900:36c0a48b is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:45:02.986 +07:00 [INF] Server laptop-2s90t1ik:30900:36c0a48b all the dispatchers started
2024-02-25 18:45:03.161 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:45:03.400 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 238.8434ms
2024-02-25 18:45:03.418 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:45:03.418 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:45:03.421 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.1872ms
2024-02-25 18:45:03.445 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 27.3643ms
2024-02-25 18:45:04.253 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:45:04.364 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 111.7070ms
2024-02-25 18:45:04.743 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 18:45:04.767 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:45:04.795 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:45:05.531 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 18:45:05.636 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:45:05.868 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p0].[Time]) AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [orderSucces]
FROM [Products] AS [p]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY CONVERT(date, [p0].[Time])
2024-02-25 18:45:05.880 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:45:05.898 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1097.1239ms
2024-02-25 18:45:05.900 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:45:05.904 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 1160.5138ms
2024-02-25 18:50:02.995 +07:00 [INF] 7 servers were removed due to timeout
2024-02-25 18:51:37.187 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 18:51:37.192 +07:00 [INF] CORS policy execution successful.
2024-02-25 18:51:37.198 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 18:51:37.207 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:51:37.275 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:51:37.302 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 18:51:37.332 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 18:51:37.392 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 18:51:37.420 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 18:51:37.447 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 18:51:37.484 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 18:51:37.486 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 18:51:37.489 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 18:51:37.492 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 18:51:37.495 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 18:51:37.498 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 18:51:37.500 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 18:51:37.504 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 18:51:37.507 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:51:37.522 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 313.796ms
2024-02-25 18:51:37.524 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 18:51:37.526 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 338.1219ms
2024-02-25 18:51:37.986 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 18:51:37.988 +07:00 [INF] CORS policy execution successful.
2024-02-25 18:51:37.993 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 18:51:37.998 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:51:38.016 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:51:38.053 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 18:51:38.058 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:51:38.067 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 68.0079ms
2024-02-25 18:51:38.069 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 18:51:38.071 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 84.3163ms
2024-02-25 18:51:38.613 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 18:51:38.614 +07:00 [INF] CORS policy execution successful.
2024-02-25 18:51:38.615 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 18:51:38.621 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:51:38.628 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:51:38.663 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 18:51:38.676 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 18:51:38.687 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 18:51:38.695 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 18:51:38.698 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 18:51:38.701 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 77.6367ms
2024-02-25 18:51:38.702 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 18:51:38.703 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 90.1959ms
2024-02-25 18:51:39.330 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 18:51:39.331 +07:00 [INF] CORS policy execution successful.
2024-02-25 18:51:39.332 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 18:51:39.334 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:51:39.338 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:51:39.340 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 18:51:39.343 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 18:51:39.346 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 18:51:39.351 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 18:51:39.355 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 18:51:39.358 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 18:51:39.365 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 18:51:39.369 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 18:51:39.372 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 18:51:39.377 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 18:51:39.383 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 18:51:39.389 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 18:51:39.393 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 18:51:39.396 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:51:39.398 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 62.0408ms
2024-02-25 18:51:39.399 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 18:51:39.401 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 71.3602ms
2024-02-25 18:51:39.498 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 18:51:39.500 +07:00 [INF] CORS policy execution successful.
2024-02-25 18:51:39.500 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:51:39.502 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:51:39.506 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:51:39.515 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p0].[Time]) AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [orderSucces]
FROM [Products] AS [p]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY CONVERT(date, [p0].[Time])
2024-02-25 18:51:39.518 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:51:39.520 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 15.5915ms
2024-02-25 18:51:39.522 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:51:39.523 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 24.8310ms
2024-02-25 18:51:40.454 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 18:51:40.455 +07:00 [INF] CORS policy execution successful.
2024-02-25 18:51:40.456 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 18:51:40.458 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:51:40.463 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:51:40.469 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 18:51:40.474 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 18:51:40.479 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 18:51:40.483 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 18:51:40.486 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 18:51:40.487 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 26.9401ms
2024-02-25 18:51:40.489 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 18:51:40.491 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 37.0836ms
2024-02-25 18:51:41.768 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 18:51:41.769 +07:00 [INF] CORS policy execution successful.
2024-02-25 18:51:41.770 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 18:51:41.770 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:51:41.773 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:51:41.781 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 18:51:41.783 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:51:41.784 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 12.4374ms
2024-02-25 18:51:41.785 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 18:51:41.786 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 18.2220ms
2024-02-25 18:51:42.395 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 18:51:42.396 +07:00 [INF] CORS policy execution successful.
2024-02-25 18:51:42.397 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:51:42.398 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:51:42.404 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:51:42.415 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p0].[Time]) AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [orderSucces]
FROM [Products] AS [p]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY CONVERT(date, [p0].[Time])
2024-02-25 18:51:42.417 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:51:42.418 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 17.5111ms
2024-02-25 18:51:42.419 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:51:42.421 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 25.7641ms
2024-02-25 18:54:05.024 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - -
2024-02-25 18:54:05.025 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:54:05.025 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 18:54:05.028 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 18:54:05.033 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p0].[Time]) AS [time], COALESCE(SUM([p0].[Quantity]), 0) AS [orderSucces]
FROM [Products] AS [p]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY CONVERT(date, [p0].[Time])
2024-02-25 18:54:05.035 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 18:54:05.036 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 8.9946ms
2024-02-25 18:54:05.036 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 18:54:05.037 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - - - 200 - application/json;+charset=utf-8 13.3203ms
2024-02-25 18:58:13.313 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 18:58:13.610 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 18:58:13.640 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 18:58:13.721 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 18:58:13.723 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 18:58:13.728 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 18:58:13.729 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 18:58:13.729 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 18:58:13.738 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 18:58:13.739 +07:00 [INF] Hosting environment: Development
2024-02-25 18:58:13.740 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 18:58:13.837 +07:00 [INF] Server laptop-2s90t1ik:32900:9e1e2bd5 successfully announced in 100,0311 ms
2024-02-25 18:58:13.839 +07:00 [INF] Server laptop-2s90t1ik:32900:9e1e2bd5 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 18:58:13.844 +07:00 [INF] Server laptop-2s90t1ik:32900:9e1e2bd5 all the dispatchers started
2024-02-25 18:58:13.928 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 18:58:14.121 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 192.9086ms
2024-02-25 18:58:14.145 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 18:58:14.145 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 18:58:14.149 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.8682ms
2024-02-25 18:58:14.170 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.7263ms
2024-02-25 18:58:14.892 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 18:58:15.005 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 113.5776ms
2024-02-25 19:01:55.830 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:01:56.108 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:01:56.134 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:01:56.199 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:01:56.201 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:01:56.206 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:01:56.206 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:01:56.207 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:01:56.215 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:01:56.216 +07:00 [INF] Hosting environment: Development
2024-02-25 19:01:56.217 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:01:56.297 +07:00 [INF] Server laptop-2s90t1ik:35792:3bece66b successfully announced in 83,3694 ms
2024-02-25 19:01:56.300 +07:00 [INF] Server laptop-2s90t1ik:35792:3bece66b is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:01:56.305 +07:00 [INF] Server laptop-2s90t1ik:35792:3bece66b all the dispatchers started
2024-02-25 19:01:56.439 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:01:56.618 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 179.4432ms
2024-02-25 19:01:56.635 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:01:56.635 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:01:56.638 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.8849ms
2024-02-25 19:01:56.660 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.5184ms
2024-02-25 19:01:57.374 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:01:57.484 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 110.0076ms
2024-02-25 19:01:59.964 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - -
2024-02-25 19:01:59.989 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:02:00.020 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 19:02:00.743 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 19:02:00.845 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 19:02:01.085 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:02:01.096 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 19:02:01.116 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1090.7902ms
2024-02-25 19:02:01.119 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:02:01.122 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - - - 200 - application/json;+charset=utf-8 1158.2601ms
2024-02-25 19:05:36.655 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:05:36.974 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:05:37.004 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:05:37.072 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:05:37.074 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:05:37.079 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:05:37.080 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:05:37.080 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:05:37.088 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:05:37.089 +07:00 [INF] Hosting environment: Development
2024-02-25 19:05:37.090 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:05:37.184 +07:00 [INF] Server laptop-2s90t1ik:42764:66c20cda successfully announced in 96,7149 ms
2024-02-25 19:05:37.187 +07:00 [INF] Server laptop-2s90t1ik:42764:66c20cda is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:05:37.191 +07:00 [INF] Server laptop-2s90t1ik:42764:66c20cda all the dispatchers started
2024-02-25 19:05:37.195 +07:00 [INF] 1 servers were removed due to timeout
2024-02-25 19:05:37.260 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:05:37.461 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 200.5693ms
2024-02-25 19:05:37.477 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:05:37.477 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:05:37.481 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.9743ms
2024-02-25 19:05:37.502 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 25.0600ms
2024-02-25 19:05:38.237 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:05:38.350 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 112.6846ms
2024-02-25 19:10:37.210 +07:00 [INF] 2 servers were removed due to timeout
2024-02-25 19:10:46.740 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:10:47.043 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:10:47.072 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:10:47.144 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:10:47.145 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:10:47.151 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:10:47.151 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:10:47.152 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:10:47.160 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:10:47.160 +07:00 [INF] Hosting environment: Development
2024-02-25 19:10:47.161 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:10:47.247 +07:00 [INF] Server laptop-2s90t1ik:14120:47bfb23c successfully announced in 88,3225 ms
2024-02-25 19:10:47.249 +07:00 [INF] Server laptop-2s90t1ik:14120:47bfb23c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:10:47.253 +07:00 [INF] Server laptop-2s90t1ik:14120:47bfb23c all the dispatchers started
2024-02-25 19:10:47.330 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:10:47.516 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 186.2224ms
2024-02-25 19:10:47.529 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:10:47.529 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:10:47.532 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.8773ms
2024-02-25 19:10:47.550 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.2840ms
2024-02-25 19:10:48.312 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:10:48.469 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 157.1344ms
2024-02-25 19:11:02.458 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:11:02.727 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:11:02.756 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:11:02.828 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:11:02.829 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:11:02.834 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:11:02.835 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:11:02.835 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:11:02.844 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:11:02.845 +07:00 [INF] Hosting environment: Development
2024-02-25 19:11:02.845 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:11:02.934 +07:00 [INF] Server laptop-2s90t1ik:5368:5790d30f successfully announced in 91,5593 ms
2024-02-25 19:11:02.937 +07:00 [INF] Server laptop-2s90t1ik:5368:5790d30f is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:11:02.942 +07:00 [INF] Server laptop-2s90t1ik:5368:5790d30f all the dispatchers started
2024-02-25 19:11:03.038 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:11:03.216 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 178.2003ms
2024-02-25 19:11:03.231 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:11:03.231 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:11:03.233 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.2702ms
2024-02-25 19:11:03.254 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 23.6078ms
2024-02-25 19:11:03.974 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:11:04.081 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 106.9068ms
2024-02-25 19:11:15.904 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:11:16.106 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:11:16.133 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:11:16.198 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:11:16.199 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:11:16.205 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:11:16.206 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:11:16.206 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:11:16.214 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:11:16.215 +07:00 [INF] Hosting environment: Development
2024-02-25 19:11:16.216 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:11:16.294 +07:00 [INF] Server laptop-2s90t1ik:36676:ce03d652 successfully announced in 80,5792 ms
2024-02-25 19:11:16.297 +07:00 [INF] Server laptop-2s90t1ik:36676:ce03d652 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:11:16.302 +07:00 [INF] Server laptop-2s90t1ik:36676:ce03d652 all the dispatchers started
2024-02-25 19:11:16.501 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:11:16.672 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 171.3083ms
2024-02-25 19:11:16.684 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:11:16.684 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:11:16.687 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.5832ms
2024-02-25 19:11:16.705 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.1878ms
2024-02-25 19:11:17.388 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:11:17.504 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 115.6105ms
2024-02-25 19:11:41.832 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:11:42.033 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:11:42.062 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:11:42.129 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:11:42.130 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:11:42.135 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:11:42.136 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:11:42.136 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:11:42.144 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:11:42.145 +07:00 [INF] Hosting environment: Development
2024-02-25 19:11:42.145 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:11:42.222 +07:00 [INF] Server laptop-2s90t1ik:32544:2370d32a successfully announced in 78,6921 ms
2024-02-25 19:11:42.225 +07:00 [INF] Server laptop-2s90t1ik:32544:2370d32a is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:11:42.229 +07:00 [INF] Server laptop-2s90t1ik:32544:2370d32a all the dispatchers started
2024-02-25 19:11:42.424 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:11:42.603 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 179.1890ms
2024-02-25 19:11:42.615 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:11:42.615 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:11:42.618 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.6383ms
2024-02-25 19:11:42.637 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.1967ms
2024-02-25 19:11:43.338 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:11:43.445 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 107.4939ms
2024-02-25 19:11:58.009 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:11:58.220 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:11:58.249 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:11:58.321 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:11:58.322 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:11:58.328 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:11:58.329 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:11:58.330 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:11:58.338 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:11:58.339 +07:00 [INF] Hosting environment: Development
2024-02-25 19:11:58.340 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:11:58.444 +07:00 [INF] Server laptop-2s90t1ik:37384:86f56aa2 successfully announced in 106,3845 ms
2024-02-25 19:11:58.447 +07:00 [INF] Server laptop-2s90t1ik:37384:86f56aa2 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:11:58.452 +07:00 [INF] Server laptop-2s90t1ik:37384:86f56aa2 all the dispatchers started
2024-02-25 19:11:58.648 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:11:58.852 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 205.4879ms
2024-02-25 19:11:58.867 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:11:58.867 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:11:58.869 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.3623ms
2024-02-25 19:11:58.893 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 26.0786ms
2024-02-25 19:11:59.785 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:11:59.916 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 130.4832ms
2024-02-25 19:12:28.412 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:12:28.704 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:12:28.733 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:12:28.798 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:12:28.799 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:12:28.805 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:12:28.806 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:12:28.807 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:12:28.815 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:12:28.816 +07:00 [INF] Hosting environment: Development
2024-02-25 19:12:28.817 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:12:28.946 +07:00 [INF] Server laptop-2s90t1ik:27700:d0d62429 successfully announced in 131,3375 ms
2024-02-25 19:12:28.951 +07:00 [INF] Server laptop-2s90t1ik:27700:d0d62429 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:12:28.967 +07:00 [INF] Server laptop-2s90t1ik:27700:d0d62429 all the dispatchers started
2024-02-25 19:12:28.987 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:12:29.126 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - -
2024-02-25 19:12:29.157 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:12:29.194 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 19:12:29.273 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 287.2301ms
2024-02-25 19:12:29.300 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:12:29.300 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:12:29.307 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 6.4745ms
2024-02-25 19:12:29.338 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 37.2434ms
2024-02-25 19:12:30.221 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 19:12:30.347 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 19:12:30.377 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:12:30.521 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 144.4229ms
2024-02-25 19:12:30.652 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:12:30.663 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 19:12:30.681 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1480.5907ms
2024-02-25 19:12:30.682 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:12:30.686 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - - - 200 - application/json;+charset=utf-8 1559.8162ms
2024-02-25 19:13:42.667 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:13:42.959 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:13:42.988 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:13:43.062 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:13:43.064 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:13:43.070 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:13:43.071 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:13:43.071 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:13:43.081 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:13:43.082 +07:00 [INF] Hosting environment: Development
2024-02-25 19:13:43.083 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:13:43.165 +07:00 [INF] Server laptop-2s90t1ik:27144:ee0e594d successfully announced in 84,6567 ms
2024-02-25 19:13:43.167 +07:00 [INF] Server laptop-2s90t1ik:27144:ee0e594d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:13:43.171 +07:00 [INF] Server laptop-2s90t1ik:27144:ee0e594d all the dispatchers started
2024-02-25 19:13:43.217 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:13:43.403 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 185.8549ms
2024-02-25 19:13:43.416 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:13:43.416 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:13:43.419 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.6594ms
2024-02-25 19:13:43.438 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.7758ms
2024-02-25 19:13:44.319 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:13:44.445 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 126.2692ms
2024-02-25 19:14:29.624 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:14:29.914 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:14:29.942 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:14:30.011 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:14:30.012 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:14:30.018 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:14:30.018 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:14:30.019 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:14:30.027 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:14:30.027 +07:00 [INF] Hosting environment: Development
2024-02-25 19:14:30.028 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:14:30.114 +07:00 [INF] Server laptop-2s90t1ik:37868:0cfb39ef successfully announced in 88,3891 ms
2024-02-25 19:14:30.117 +07:00 [INF] Server laptop-2s90t1ik:37868:0cfb39ef is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:14:30.122 +07:00 [INF] Server laptop-2s90t1ik:37868:0cfb39ef all the dispatchers started
2024-02-25 19:14:30.183 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:14:30.358 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 175.2881ms
2024-02-25 19:14:30.371 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:14:30.371 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:14:30.373 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.2956ms
2024-02-25 19:14:30.393 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.4767ms
2024-02-25 19:14:31.096 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:14:31.204 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 108.2888ms
2024-02-25 19:19:14.876 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:19:15.147 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:19:15.175 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:19:15.241 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:19:15.243 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:19:15.248 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:19:15.248 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:19:15.249 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:19:15.257 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:19:15.257 +07:00 [INF] Hosting environment: Development
2024-02-25 19:19:15.258 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:19:15.340 +07:00 [INF] Server laptop-2s90t1ik:24448:387c290c successfully announced in 84,2419 ms
2024-02-25 19:19:15.343 +07:00 [INF] Server laptop-2s90t1ik:24448:387c290c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:19:15.347 +07:00 [INF] 8 servers were removed due to timeout
2024-02-25 19:19:15.348 +07:00 [INF] Server laptop-2s90t1ik:24448:387c290c all the dispatchers started
2024-02-25 19:19:15.505 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:19:15.671 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 165.9295ms
2024-02-25 19:19:15.686 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:19:15.686 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:19:15.688 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.1536ms
2024-02-25 19:19:15.711 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.5002ms
2024-02-25 19:19:16.486 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:19:16.598 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 112.5221ms
2024-02-25 19:19:25.550 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - -
2024-02-25 19:19:25.576 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:19:25.604 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 19:19:26.317 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 19:19:26.420 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 19:19:26.653 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:19:26.665 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 19:19:26.682 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1073.6413ms
2024-02-25 19:19:26.684 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:19:26.688 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - - - 200 - application/json;+charset=utf-8 1137.9008ms
2024-02-25 19:20:34.679 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:20:34.944 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:20:34.970 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:20:35.033 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:20:35.034 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:20:35.039 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:20:35.040 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:20:35.040 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:20:35.048 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:20:35.049 +07:00 [INF] Hosting environment: Development
2024-02-25 19:20:35.049 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:20:35.131 +07:00 [INF] Server laptop-2s90t1ik:16004:f704772c successfully announced in 83,2146 ms
2024-02-25 19:20:35.134 +07:00 [INF] Server laptop-2s90t1ik:16004:f704772c is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:20:35.138 +07:00 [INF] Server laptop-2s90t1ik:16004:f704772c all the dispatchers started
2024-02-25 19:20:35.309 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:20:35.476 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 167.3027ms
2024-02-25 19:20:35.490 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:20:35.490 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:20:35.493 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.6219ms
2024-02-25 19:20:35.511 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 20.8204ms
2024-02-25 19:20:36.223 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:20:36.346 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 122.8777ms
2024-02-25 19:20:36.926 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - -
2024-02-25 19:20:36.950 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:20:36.974 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 19:20:37.692 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 19:20:37.796 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 19:20:38.034 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:20:38.045 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataLineInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 19:20:38.063 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1084.295ms
2024-02-25 19:20:38.065 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:20:38.069 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - - - 200 - application/json;+charset=utf-8 1143.0781ms
2024-02-25 19:21:11.863 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:21:12.467 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:21:12.579 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:21:12.758 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:21:12.759 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:21:12.766 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:21:12.767 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:21:12.767 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:21:12.789 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:21:12.790 +07:00 [INF] Hosting environment: Development
2024-02-25 19:21:12.790 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:21:12.934 +07:00 [INF] Server laptop-2s90t1ik:32836:bf78c7ee successfully announced in 144,325 ms
2024-02-25 19:21:12.940 +07:00 [INF] Server laptop-2s90t1ik:32836:bf78c7ee is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:21:13.011 +07:00 [INF] Server laptop-2s90t1ik:32836:bf78c7ee all the dispatchers started
2024-02-25 19:21:17.502 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:21:17.927 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 429.2171ms
2024-02-25 19:21:17.958 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:21:17.958 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:21:17.964 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 6.2220ms
2024-02-25 19:21:18.019 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 61.1446ms
2024-02-25 19:21:18.166 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:21:18.429 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 262.6170ms
2024-02-25 19:21:47.853 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:21:48.157 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:21:48.186 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:21:48.258 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:21:48.259 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:21:48.264 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:21:48.265 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:21:48.265 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:21:48.274 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:21:48.275 +07:00 [INF] Hosting environment: Development
2024-02-25 19:21:48.275 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:21:48.360 +07:00 [INF] Server laptop-2s90t1ik:32808:83cf8a66 successfully announced in 86,8537 ms
2024-02-25 19:21:48.363 +07:00 [INF] Server laptop-2s90t1ik:32808:83cf8a66 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:21:48.366 +07:00 [INF] Server laptop-2s90t1ik:32808:83cf8a66 all the dispatchers started
2024-02-25 19:21:48.587 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:21:48.771 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 184.9566ms
2024-02-25 19:21:48.792 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:21:48.795 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.6772ms
2024-02-25 19:21:48.796 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:21:48.829 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 33.4976ms
2024-02-25 19:21:49.554 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:21:49.689 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 135.6796ms
2024-02-25 19:21:51.529 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - -
2024-02-25 19:21:51.554 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:21:51.582 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 19:21:52.319 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 19:21:52.426 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 19:21:52.670 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:21:52.690 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:21:52.694 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 19:21:52.711 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1124.5788ms
2024-02-25 19:21:52.713 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:21:52.717 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - - - 200 - application/json;+charset=utf-8 1187.9046ms
2024-02-25 19:26:48.368 +07:00 [INF] 4 servers were removed due to timeout
2024-02-25 19:27:15.870 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/5 - -
2024-02-25 19:27:15.873 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:27:15.874 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 19:27:15.909 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 19:27:15.922 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:27:15.929 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:27:15.931 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 19:27:15.932 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 56.8737ms
2024-02-25 19:27:15.933 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:27:15.934 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/5 - - - 200 - application/json;+charset=utf-8 64.0328ms
2024-02-25 19:27:41.787 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/5 - -
2024-02-25 19:27:41.790 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:27:41.791 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 19:27:41.802 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 19:27:41.809 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:27:41.815 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:27:41.817 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 19:27:41.819 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 26.359ms
2024-02-25 19:27:41.820 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:27:41.821 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/5 - - - 200 - application/json;+charset=utf-8 33.2148ms
2024-02-25 19:57:09.520 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:57:09.839 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:57:09.867 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:57:09.941 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:57:09.942 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:57:09.948 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:57:09.949 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:57:09.949 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:57:09.957 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:57:09.958 +07:00 [INF] Hosting environment: Development
2024-02-25 19:57:09.959 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:57:10.059 +07:00 [INF] Server laptop-2s90t1ik:25624:f87b9ef9 successfully announced in 102,3279 ms
2024-02-25 19:57:10.061 +07:00 [INF] Server laptop-2s90t1ik:25624:f87b9ef9 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:57:10.067 +07:00 [INF] Server laptop-2s90t1ik:25624:f87b9ef9 all the dispatchers started
2024-02-25 19:57:10.102 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:57:10.302 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 201.3461ms
2024-02-25 19:57:10.323 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:57:10.326 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:57:10.329 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.8826ms
2024-02-25 19:57:10.352 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 29.5567ms
2024-02-25 19:57:10.984 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:57:11.120 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 136.3819ms
2024-02-25 19:58:25.977 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 19:58:26.282 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 19:58:26.311 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 19:58:26.379 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 19:58:26.380 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 19:58:26.387 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 19:58:26.388 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 19:58:26.388 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 19:58:26.397 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 19:58:26.398 +07:00 [INF] Hosting environment: Development
2024-02-25 19:58:26.407 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 19:58:26.547 +07:00 [INF] Server laptop-2s90t1ik:30124:861e748d successfully announced in 150,7488 ms
2024-02-25 19:58:26.560 +07:00 [INF] Server laptop-2s90t1ik:30124:861e748d is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 19:58:26.568 +07:00 [INF] Server laptop-2s90t1ik:30124:861e748d all the dispatchers started
2024-02-25 19:58:26.702 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 19:58:26.747 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/5 - -
2024-02-25 19:58:26.807 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:58:26.833 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 19:58:26.892 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 190.6738ms
2024-02-25 19:58:26.931 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 19:58:26.931 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 19:58:26.936 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 4.5512ms
2024-02-25 19:58:26.965 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 33.4412ms
2024-02-25 19:58:27.791 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 19:58:27.833 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 19:58:27.927 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 135.8729ms
2024-02-25 19:58:27.951 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 19:58:28.221 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:58:28.238 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderSucces]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 19:58:28.242 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 19:58:28.260 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1422.5105ms
2024-02-25 19:58:28.261 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 19:58:28.265 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/5 - - - 200 - application/json;+charset=utf-8 1517.4908ms
2024-02-25 20:03:26.581 +07:00 [INF] 2 servers were removed due to timeout
2024-02-25 20:05:48.268 +07:00 [INF] Start installing Hangfire SQL objects...
2024-02-25 20:05:48.566 +07:00 [INF] Hangfire SQL objects installed.
2024-02-25 20:05:48.594 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-02-25 20:05:48.662 +07:00 [INF] Now listening on: https://localhost:7148
2024-02-25 20:05:48.663 +07:00 [INF] Now listening on: http://localhost:5170
2024-02-25 20:05:48.668 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: LAPTOP-2S90T1IK\SQLEXPRESS@ApiShopHangFire'
2024-02-25 20:05:48.669 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-02-25 20:05:48.669 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-02-25 20:05:48.677 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-02-25 20:05:48.678 +07:00 [INF] Hosting environment: Development
2024-02-25 20:05:48.678 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-02-25 20:05:48.760 +07:00 [INF] Server laptop-2s90t1ik:32824:1eed76b4 successfully announced in 83,7314 ms
2024-02-25 20:05:48.763 +07:00 [INF] Server laptop-2s90t1ik:32824:1eed76b4 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-02-25 20:05:48.768 +07:00 [INF] Server laptop-2s90t1ik:32824:1eed76b4 all the dispatchers started
2024-02-25 20:05:48.934 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-02-25 20:05:49.100 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 166.3251ms
2024-02-25 20:05:49.116 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-02-25 20:05:49.116 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-02-25 20:05:49.118 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.5262ms
2024-02-25 20:05:49.137 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 21.3587ms
2024-02-25 20:05:49.962 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-02-25 20:05:50.071 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 108.2632ms
2024-02-25 20:05:51.335 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/5 - -
2024-02-25 20:05:51.361 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:05:51.393 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:05:52.120 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-02-25 20:05:52.221 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:05:52.470 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:05:52.488 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:05:52.492 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:05:52.512 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 1112.3741ms
2024-02-25 20:05:52.513 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:05:52.517 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7148/api/Order/AnalysisDataLine/5 - - - 200 - application/json;+charset=utf-8 1181.3723ms
2024-02-25 20:06:13.754 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 20:06:13.758 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:06:13.763 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:06:13.767 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:06:13.810 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:06:13.837 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 20:06:13.859 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:06:13.905 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:06:13.928 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:06:13.956 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:06:13.993 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:06:13.997 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:06:14.000 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:06:14.002 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:06:14.006 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:06:14.009 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:06:14.014 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:06:14.017 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:06:14.022 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:06:14.040 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 271.9688ms
2024-02-25 20:06:14.041 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:06:14.043 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 288.9022ms
2024-02-25 20:06:15.117 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 20:06:15.118 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:06:15.121 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:06:15.126 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:06:15.139 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:06:15.175 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:06:15.189 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:06:15.202 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:06:15.212 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:06:15.216 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 20:06:15.223 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 95.1957ms
2024-02-25 20:06:15.225 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:06:15.226 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 109.1111ms
2024-02-25 20:06:15.859 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 20:06:15.860 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:06:15.861 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:06:15.861 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:06:15.865 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:06:15.870 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 20:06:15.873 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:06:15.879 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:06:15.885 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:06:15.891 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:06:15.895 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:06:15.899 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:06:15.903 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:06:15.907 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:06:15.912 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:06:15.915 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:06:15.918 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:06:15.923 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:06:15.927 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:06:15.930 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 67.2503ms
2024-02-25 20:06:15.932 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:06:15.933 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 73.9352ms
2024-02-25 20:06:16.039 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:06:16.040 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:06:16.041 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:06:16.048 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:06:16.057 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:06:16.088 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:06:16.091 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:06:16.094 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 43.7446ms
2024-02-25 20:06:16.094 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:06:16.095 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 56.8536ms
2024-02-25 20:06:16.700 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:06:16.701 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:06:16.703 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:06:16.705 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:06:16.712 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:06:16.726 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:06:16.736 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:06:16.739 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:06:16.740 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 32.551ms
2024-02-25 20:06:16.741 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:06:16.742 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 42.5450ms
2024-02-25 20:06:17.081 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 20:06:17.083 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:06:17.084 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:06:17.085 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:06:17.088 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:06:17.101 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:06:17.109 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:06:17.119 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:06:17.125 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:06:17.127 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 20:06:17.129 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 42.3611ms
2024-02-25 20:06:17.131 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:06:17.133 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 51.3209ms
2024-02-25 20:07:08.650 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/29 - -
2024-02-25 20:07:08.651 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:08.651 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:08.652 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:08.654 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:08.660 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:08.662 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:08.663 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 10.1919ms
2024-02-25 20:07:08.665 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:08.665 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/29 - - - 200 - application/json;+charset=utf-8 15.2200ms
2024-02-25 20:07:09.788 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/28 - -
2024-02-25 20:07:09.789 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:09.790 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:09.791 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:09.796 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:09.799 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:09.802 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:09.804 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 11.2385ms
2024-02-25 20:07:09.805 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:09.808 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/28 - - - 200 - application/json;+charset=utf-8 19.8876ms
2024-02-25 20:07:11.024 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/27 - -
2024-02-25 20:07:11.025 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:11.026 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:11.028 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:11.031 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:11.036 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:11.039 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:11.041 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 11.2372ms
2024-02-25 20:07:11.044 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:11.046 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/27 - - - 200 - application/json;+charset=utf-8 21.3987ms
2024-02-25 20:07:11.641 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/26 - -
2024-02-25 20:07:11.642 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:11.643 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:11.644 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:11.647 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:11.650 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:11.652 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:11.655 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.5176ms
2024-02-25 20:07:11.657 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:11.659 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/26 - - - 200 - application/json;+charset=utf-8 17.9733ms
2024-02-25 20:07:12.246 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/25 - -
2024-02-25 20:07:12.247 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:12.248 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:12.249 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:12.253 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:12.258 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:12.263 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:12.264 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 13.4782ms
2024-02-25 20:07:12.267 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:12.269 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/25 - - - 200 - application/json;+charset=utf-8 22.5858ms
2024-02-25 20:07:12.908 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/24 - -
2024-02-25 20:07:12.909 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:12.910 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:12.912 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:12.915 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:12.920 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:12.923 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:12.926 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 12.6088ms
2024-02-25 20:07:12.927 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:12.929 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/24 - - - 200 - application/json;+charset=utf-8 21.3926ms
2024-02-25 20:07:13.544 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/23 - -
2024-02-25 20:07:13.546 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:13.547 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:13.548 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:13.552 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:13.557 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:13.559 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:13.561 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 10.8099ms
2024-02-25 20:07:13.563 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:13.566 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/23 - - - 200 - application/json;+charset=utf-8 21.1772ms
2024-02-25 20:07:14.710 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/2 - -
2024-02-25 20:07:14.711 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:14.712 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:14.713 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:14.718 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:14.724 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:14.726 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:14.728 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 12.3755ms
2024-02-25 20:07:14.729 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:14.731 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/2 - - - 200 - application/json;+charset=utf-8 20.8851ms
2024-02-25 20:07:15.419 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/7 - -
2024-02-25 20:07:15.420 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:15.421 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:15.423 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:15.426 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:15.432 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:15.434 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:15.437 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 12.2176ms
2024-02-25 20:07:15.440 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:15.442 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/7 - - - 200 - application/json;+charset=utf-8 22.7872ms
2024-02-25 20:07:19.543 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/6 - -
2024-02-25 20:07:19.544 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:19.544 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:19.545 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:19.547 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:19.550 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:19.551 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:19.552 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 5.9208ms
2024-02-25 20:07:19.553 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:19.553 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/6 - - - 200 - application/json;+charset=utf-8 10.4914ms
2024-02-25 20:07:20.493 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/5 - -
2024-02-25 20:07:20.495 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:20.496 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:20.497 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:20.502 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:20.505 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:20.508 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:20.510 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 9.9774ms
2024-02-25 20:07:20.511 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:20.513 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/5 - - - 200 - application/json;+charset=utf-8 19.9882ms
2024-02-25 20:07:21.678 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/4 - -
2024-02-25 20:07:21.679 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:21.680 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:21.682 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:21.685 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:21.689 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:21.691 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:21.692 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 7.8344ms
2024-02-25 20:07:21.693 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:21.696 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/4 - - - 200 - application/json;+charset=utf-8 16.9035ms
2024-02-25 20:07:30.280 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-02-25 20:07:30.281 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:30.282 +07:00 [INF] Executing endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 20:07:30.286 +07:00 [INF] Route matched with {action = "GetAllProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductResponse]]] GetAllProduct(DtoShared.FetchData.FetchDataProductRequest) on controller Presentation.Controllers.ProductController (Presentation).
2024-02-25 20:07:30.292 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:30.304 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2024-02-25 20:07:30.316 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
ORDER BY [p].[Time] DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:07:30.319 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:30.324 +07:00 [INF] Executed action Presentation.Controllers.ProductController.GetAllProduct (Presentation) in 35.7601ms
2024-02-25 20:07:30.325 +07:00 [INF] Executed endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 20:07:30.326 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 46.5746ms
2024-02-25 20:07:30.911 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-02-25 20:07:30.912 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:30.913 +07:00 [INF] Executing endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 20:07:30.915 +07:00 [INF] Route matched with {action = "GetAllProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductResponse]]] GetAllProduct(DtoShared.FetchData.FetchDataProductRequest) on controller Presentation.Controllers.ProductController (Presentation).
2024-02-25 20:07:30.919 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:30.922 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2024-02-25 20:07:30.925 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
ORDER BY [p].[Time] DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:07:30.927 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:30.928 +07:00 [INF] Executed action Presentation.Controllers.ProductController.GetAllProduct (Presentation) in 11.3105ms
2024-02-25 20:07:30.929 +07:00 [INF] Executed endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 20:07:30.930 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 19.2943ms
2024-02-25 20:07:32.272 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:07:32.273 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:32.274 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:32.275 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:32.277 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:32.280 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:07:32.282 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:07:32.283 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 6.997ms
2024-02-25 20:07:32.284 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:07:32.285 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 12.8884ms
2024-02-25 20:07:32.857 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:07:32.858 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:07:32.859 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:07:32.860 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:07:32.864 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:07:32.872 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:07:32.882 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:07:32.885 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:07:32.886 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 23.3228ms
2024-02-25 20:07:32.887 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:07:32.888 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 31.5939ms
2024-02-25 20:08:43.023 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:08:43.024 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:08:43.024 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:08:43.025 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:08:43.027 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:08:43.033 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:08:43.034 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:08:43.036 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 9.4634ms
2024-02-25 20:08:43.036 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:08:43.037 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 14.3246ms
2024-02-25 20:08:43.927 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:08:43.928 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:08:43.930 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:08:43.932 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:08:43.936 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:08:43.949 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:08:43.961 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:08:43.964 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:08:43.967 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 32.9461ms
2024-02-25 20:08:43.969 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:08:43.971 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 43.9301ms
2024-02-25 20:08:52.908 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/29 - -
2024-02-25 20:08:52.909 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:08:52.909 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:08:52.910 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:08:52.912 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:08:52.919 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:08:52.920 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:08:52.922 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 11.216ms
2024-02-25 20:08:52.923 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:08:52.924 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/29 - - - 200 - application/json;+charset=utf-8 15.9761ms
2024-02-25 20:08:54.436 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/28 - -
2024-02-25 20:08:54.437 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:08:54.438 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:08:54.439 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:08:54.443 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:08:54.450 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:08:54.453 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:08:54.454 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 13.1141ms
2024-02-25 20:08:54.456 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:08:54.457 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/28 - - - 200 - application/json;+charset=utf-8 21.2170ms
2024-02-25 20:09:31.388 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:09:31.389 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:09:31.390 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:09:31.391 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:09:31.394 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:09:31.401 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:09:31.403 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:09:31.404 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 10.8444ms
2024-02-25 20:09:31.405 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:09:31.405 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 17.3044ms
2024-02-25 20:09:32.231 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:09:32.233 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:09:32.234 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:09:32.235 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:09:32.239 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:09:32.250 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:09:32.260 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:09:32.263 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:09:32.265 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 27.6729ms
2024-02-25 20:09:32.266 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:09:32.268 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 36.4084ms
2024-02-25 20:10:48.769 +07:00 [INF] 1 servers were removed due to timeout
2024-02-25 20:13:10.673 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:13:10.674 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:13:10.674 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:13:10.675 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:13:10.677 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:13:10.683 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:13:10.684 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:13:10.685 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.9925ms
2024-02-25 20:13:10.686 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:13:10.687 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 13.8039ms
2024-02-25 20:13:11.523 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:13:11.525 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:13:11.527 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:11.529 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:13:11.533 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:13:11.543 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:11.554 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:11.558 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:13:11.559 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 28.2445ms
2024-02-25 20:13:11.561 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:11.562 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 38.4533ms
2024-02-25 20:13:14.383 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:13:14.384 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:13:14.384 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:14.385 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:13:14.386 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:13:14.390 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:14.393 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:14.394 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:13:14.395 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 9.5282ms
2024-02-25 20:13:14.397 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:14.398 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 14.8012ms
2024-02-25 20:13:15.914 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:13:15.916 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:13:15.916 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:15.918 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:13:15.920 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:13:15.926 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:15.931 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:15.934 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:13:15.936 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 16.7675ms
2024-02-25 20:13:15.938 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:15.940 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 25.1563ms
2024-02-25 20:13:17.235 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:13:17.235 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:13:17.237 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:17.239 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:13:17.241 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:13:17.246 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:17.251 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:17.253 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:13:17.255 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 13.9176ms
2024-02-25 20:13:17.256 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:17.257 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 22.1766ms
2024-02-25 20:13:48.996 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/31 - -
2024-02-25 20:13:48.997 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:13:48.999 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:13:49.000 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:13:49.007 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:13:49.018 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:13:49.020 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:13:49.021 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 17.8049ms
2024-02-25 20:13:49.023 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:13:49.025 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/31 - - - 200 - application/json;+charset=utf-8 29.1109ms
2024-02-25 20:13:50.520 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/32 - -
2024-02-25 20:13:50.521 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:13:50.523 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:13:50.524 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:13:50.527 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:13:50.532 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:13:50.533 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:13:50.534 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 9.0171ms
2024-02-25 20:13:50.536 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:13:50.537 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/32 - - - 200 - application/json;+charset=utf-8 16.6593ms
2024-02-25 20:13:55.686 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:13:55.686 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:13:55.687 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:13:55.688 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:13:55.689 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:13:55.691 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:13:55.692 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:13:55.693 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 4.3114ms
2024-02-25 20:13:55.694 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:13:55.694 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 8.9748ms
2024-02-25 20:13:56.533 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:13:56.534 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:13:56.535 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:56.536 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:13:56.539 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:13:56.549 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:56.561 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:56.563 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:13:56.565 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 27.0474ms
2024-02-25 20:13:56.567 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:56.568 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 35.1638ms
2024-02-25 20:13:58.366 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:13:58.367 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:13:58.368 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:58.368 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:13:58.370 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:13:58.373 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:58.375 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:58.376 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:13:58.377 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 7.6222ms
2024-02-25 20:13:58.378 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:58.380 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 13.1730ms
2024-02-25 20:13:59.611 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:13:59.613 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:13:59.613 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:59.614 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:13:59.616 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:13:59.622 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:59.626 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:13:59.629 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:13:59.631 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 14.623ms
2024-02-25 20:13:59.632 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:13:59.634 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 23.0026ms
2024-02-25 20:14:00.955 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:14:00.956 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:14:00.957 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:00.959 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:14:00.962 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:14:00.967 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:00.972 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:00.975 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:14:00.977 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 15.5033ms
2024-02-25 20:14:00.978 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:00.979 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 24.0378ms
2024-02-25 20:14:02.469 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:14:02.470 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:14:02.470 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:02.472 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:14:02.475 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:14:02.484 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:02.489 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:02.491 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:14:02.493 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 18.2148ms
2024-02-25 20:14:02.496 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:02.497 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 28.1351ms
2024-02-25 20:14:03.668 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:14:03.669 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:14:03.670 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:03.671 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:14:03.674 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:14:03.680 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:03.683 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:03.686 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:14:03.687 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 14.1443ms
2024-02-25 20:14:03.689 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:03.690 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 22.2850ms
2024-02-25 20:14:04.811 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:14:04.811 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:14:04.812 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:04.813 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:14:04.816 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:14:04.822 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:04.828 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:04.831 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:14:04.833 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 18.0248ms
2024-02-25 20:14:04.835 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:04.836 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 25.8949ms
2024-02-25 20:14:05.932 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:14:05.932 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:14:05.933 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:05.935 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:14:05.937 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:14:05.942 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:05.946 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:05.949 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:14:05.951 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 14.0969ms
2024-02-25 20:14:05.952 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:05.954 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 22.0204ms
2024-02-25 20:14:08.527 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:14:08.527 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:14:08.528 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:08.529 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:14:08.531 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:14:08.538 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:08.546 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:08.548 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:14:08.550 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 20.3227ms
2024-02-25 20:14:08.552 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:08.554 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 27.3940ms
2024-02-25 20:14:09.618 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:14:09.619 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:14:09.620 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:09.621 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:14:09.623 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:14:09.634 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:09.646 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:09.649 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:14:09.651 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 28.3921ms
2024-02-25 20:14:09.655 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:09.657 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 38.6234ms
2024-02-25 20:14:12.094 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:14:12.095 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:14:12.095 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:12.096 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:14:12.098 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:14:12.105 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:12.113 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:12.114 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:14:12.115 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 18.0471ms
2024-02-25 20:14:12.116 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:12.117 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 22.5120ms
2024-02-25 20:14:12.691 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:14:12.691 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:14:12.692 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:12.693 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:14:12.694 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:14:12.704 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:12.711 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:12.713 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:14:12.716 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 22.0063ms
2024-02-25 20:14:12.717 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:12.719 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 27.9835ms
2024-02-25 20:14:14.115 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:14:14.116 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:14:14.117 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:14.119 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:14:14.121 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:14:14.137 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:14.145 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:14:14.147 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:14:14.149 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 28.8271ms
2024-02-25 20:14:14.150 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:14:14.151 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 36.0389ms
2024-02-25 20:15:13.877 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:15:13.878 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:15:13.878 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:15:13.879 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:15:13.881 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:15:13.891 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:15:13.892 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:15:13.893 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 13.0564ms
2024-02-25 20:15:13.894 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:15:13.895 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 18.4285ms
2024-02-25 20:15:14.760 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:15:14.761 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:15:14.763 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:15:14.765 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:15:14.767 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:15:14.789 +07:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:15:14.800 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:15:14.804 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:15:14.805 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 38.5256ms
2024-02-25 20:15:14.806 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:15:14.808 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 47.9191ms
2024-02-25 20:15:18.877 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:15:18.878 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:15:18.878 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:15:18.879 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:15:18.880 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:15:18.893 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:15:18.900 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:15:18.901 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:15:18.902 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 22.1777ms
2024-02-25 20:15:18.903 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:15:18.904 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 27.1580ms
2024-02-25 20:15:52.237 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:15:52.238 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:15:52.239 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:15:52.240 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:15:52.241 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:15:52.247 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:15:52.249 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:15:52.249 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.6356ms
2024-02-25 20:15:52.250 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:15:52.252 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 14.5699ms
2024-02-25 20:15:53.083 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:15:53.084 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:15:53.084 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:15:53.085 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:15:53.087 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:15:53.099 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:15:53.109 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:15:53.112 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:15:53.114 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 27.361ms
2024-02-25 20:15:53.115 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:15:53.117 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 34.1415ms
2024-02-25 20:15:55.517 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:15:55.517 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:15:55.518 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:15:55.519 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:15:55.520 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:15:55.523 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:15:55.525 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:15:55.526 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:15:55.527 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 7.0315ms
2024-02-25 20:15:55.528 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:15:55.529 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 11.8950ms
2024-02-25 20:15:56.782 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:15:56.783 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:15:56.785 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:15:56.786 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:15:56.790 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:15:56.796 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:15:56.802 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:15:56.804 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:15:56.806 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 17.1359ms
2024-02-25 20:15:56.808 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:15:56.809 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 26.9775ms
2024-02-25 20:16:14.506 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 20:16:14.507 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:16:14.507 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:16:14.508 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:16:14.510 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:16:14.513 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 20:16:14.516 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:16:14.520 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:14.523 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:14.534 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:14.539 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:14.543 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:14.548 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:14.550 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:14.552 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:14.554 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:14.556 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:14.559 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:14.562 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:16:14.563 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 54.5394ms
2024-02-25 20:16:14.564 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:16:14.565 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 59.3288ms
2024-02-25 20:16:15.861 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 20:16:15.862 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:16:15.864 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:16:15.866 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:16:15.870 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:16:15.882 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:16:15.892 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:16:15.902 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:16:15.908 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:16:15.910 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 20:16:15.913 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 44.4706ms
2024-02-25 20:16:15.915 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:16:15.916 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 54.6046ms
2024-02-25 20:16:16.638 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 20:16:16.640 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:16:16.641 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:16:16.642 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:16:16.646 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:16:16.653 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 20:16:16.659 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:16:16.670 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:16.678 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:16.688 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:16.696 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:16.703 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:16.708 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:16.717 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:16.721 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:16.739 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:16.746 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:16.752 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:16.755 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:16:16.760 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 116.0359ms
2024-02-25 20:16:16.762 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:16:16.765 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 126.6722ms
2024-02-25 20:16:17.859 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 20:16:17.861 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:16:17.863 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:16:17.864 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:16:17.868 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:16:17.921 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:16:17.941 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:16:17.970 +07:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:16:17.990 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:16:17.991 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 20:16:17.993 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 126.447ms
2024-02-25 20:16:17.994 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:16:17.995 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 136.2914ms
2024-02-25 20:16:36.806 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 20:16:36.807 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:16:36.807 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:16:36.808 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:16:36.809 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:16:36.812 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 20:16:36.815 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:16:36.819 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:36.823 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:36.826 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:36.828 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:36.830 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:36.832 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:36.834 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:36.836 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:36.839 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:36.841 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:36.843 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:36.844 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:16:36.845 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 36.4114ms
2024-02-25 20:16:36.846 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:16:36.847 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 40.7852ms
2024-02-25 20:16:38.218 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 20:16:38.220 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:16:38.221 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:16:38.222 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:16:38.225 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:16:38.234 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:16:38.238 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:16:38.245 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:16:38.250 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:16:38.251 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 20:16:38.253 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 29.0641ms
2024-02-25 20:16:38.255 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:16:38.256 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 37.9344ms
2024-02-25 20:16:38.969 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 20:16:38.971 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:16:38.973 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:16:38.975 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:16:38.980 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:16:38.989 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 20:16:38.998 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:16:39.013 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:39.022 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:39.031 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:39.039 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:39.044 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:39.050 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:39.055 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:39.059 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:39.062 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:16:39.067 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:16:39.071 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:16:39.074 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:16:39.075 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 98.0374ms
2024-02-25 20:16:39.077 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:16:39.078 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 109.3598ms
2024-02-25 20:16:40.119 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 20:16:40.120 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:16:40.121 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:16:40.122 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:16:40.125 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:16:40.135 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:16:40.143 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:16:40.160 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:16:40.172 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:16:40.175 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 20:16:40.176 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 52.4335ms
2024-02-25 20:16:40.178 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:16:40.179 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 60.7837ms
2024-02-25 20:16:40.339 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:16:40.342 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:16:40.345 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:16:40.346 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:16:40.351 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:16:40.373 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:16:40.376 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:16:40.378 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 28.5026ms
2024-02-25 20:16:40.380 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:16:40.382 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 42.9557ms
2024-02-25 20:16:41.043 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:16:41.044 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:16:41.045 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:16:41.045 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:16:41.047 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:16:41.055 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:16:41.063 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:16:41.064 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:16:41.067 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 20.4105ms
2024-02-25 20:16:41.069 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:16:41.072 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 29.2178ms
2024-02-25 20:17:16.340 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 20:17:16.341 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:16.343 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:17:16.344 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:16.348 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:16.353 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 20:17:16.359 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:17:16.363 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:16.368 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:17:16.377 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:16.380 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:16.383 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:16.387 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:16.390 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:17:16.393 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:16.395 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:16.400 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:17:16.404 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:16.407 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:17:16.408 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 61.8342ms
2024-02-25 20:17:16.409 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:17:16.410 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 69.5996ms
2024-02-25 20:17:17.087 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 20:17:17.089 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:17.090 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:17:17.092 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:17.095 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:17.100 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 20:17:17.104 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:17:17.110 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:17.115 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:17:17.120 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:17.124 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:17.131 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:17.137 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:17.146 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:17:17.151 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:17.163 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:17.167 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:17:17.177 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:17.182 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:17:17.185 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 91.2899ms
2024-02-25 20:17:17.187 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:17:17.193 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 105.2164ms
2024-02-25 20:17:17.743 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 20:17:17.743 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:17.744 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:17:17.745 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:17.746 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:17.751 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:17:17.755 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:17:17.762 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:17:17.765 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:17:17.767 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 20:17:17.768 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 22.0031ms
2024-02-25 20:17:17.769 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:17:17.770 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 27.1833ms
2024-02-25 20:17:18.394 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 20:17:18.395 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:18.396 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:17:18.397 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:18.400 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:18.402 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 20:17:18.405 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:17:18.408 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:18.409 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:17:18.413 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:18.416 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:18.419 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:18.423 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:18.426 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:17:18.430 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:18.434 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:17:18.437 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:17:18.441 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:17:18.444 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:17:18.446 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 46.977ms
2024-02-25 20:17:18.447 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:17:18.448 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 54.0147ms
2024-02-25 20:17:19.490 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 20:17:19.491 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:19.492 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:17:19.492 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:19.495 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:19.498 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:17:19.501 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:17:19.504 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:17:19.507 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:17:19.509 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 20:17:19.511 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 16.5334ms
2024-02-25 20:17:19.512 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:17:19.513 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 22.7212ms
2024-02-25 20:17:20.763 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:17:20.764 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:20.765 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:17:20.766 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:20.767 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:20.774 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:17:20.776 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:17:20.777 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 10.3007ms
2024-02-25 20:17:20.778 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:17:20.779 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 15.9420ms
2024-02-25 20:17:21.390 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:17:21.391 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:21.392 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:21.394 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:21.395 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:21.404 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:21.413 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:21.415 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:17:21.416 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 21.2539ms
2024-02-25 20:17:21.418 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:21.419 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 29.3889ms
2024-02-25 20:17:23.344 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/6 - -
2024-02-25 20:17:23.344 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:23.345 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:23.346 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:23.347 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:23.351 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:23.354 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:23.356 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:17:23.357 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 10.8273ms
2024-02-25 20:17:23.359 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:23.360 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/6 - - - 200 - application/json;+charset=utf-8 15.7836ms
2024-02-25 20:17:24.788 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:17:24.790 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:24.791 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:24.792 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:24.796 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:24.808 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:24.822 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:24.824 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:17:24.826 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 31.1748ms
2024-02-25 20:17:24.828 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:24.830 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 41.0482ms
2024-02-25 20:17:26.711 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/6 - -
2024-02-25 20:17:26.712 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:26.712 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:26.713 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:26.714 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:26.721 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:26.729 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:26.731 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:17:26.732 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 18.1343ms
2024-02-25 20:17:26.733 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:26.735 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/6 - - - 200 - application/json;+charset=utf-8 23.5486ms
2024-02-25 20:17:28.942 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - -
2024-02-25 20:17:28.943 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:28.943 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:28.944 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:28.946 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:28.952 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:28.958 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:28.961 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:17:28.962 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 16.6026ms
2024-02-25 20:17:28.963 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:28.964 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - - - 200 - application/json;+charset=utf-8 21.4949ms
2024-02-25 20:17:29.359 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - -
2024-02-25 20:17:29.360 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:29.361 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:29.362 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:29.364 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:29.371 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:29.379 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:29.381 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:17:29.382 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 18.8714ms
2024-02-25 20:17:29.383 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:29.384 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/30 - - - 200 - application/json;+charset=utf-8 24.5890ms
2024-02-25 20:17:32.208 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - -
2024-02-25 20:17:32.208 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:32.209 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:32.209 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:32.211 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:32.219 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:32.226 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:32.228 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:17:32.229 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 18.5058ms
2024-02-25 20:17:32.231 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:32.232 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/3 - - - 200 - application/json;+charset=utf-8 24.8110ms
2024-02-25 20:17:32.803 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - -
2024-02-25 20:17:32.804 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:32.804 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:32.805 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:32.807 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:32.810 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:32.814 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:32.816 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:17:32.818 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 11.2682ms
2024-02-25 20:17:32.820 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:32.822 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/2 - - - 200 - application/json;+charset=utf-8 18.6961ms
2024-02-25 20:17:46.239 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/4 - -
2024-02-25 20:17:46.240 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:46.241 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:46.241 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:46.243 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:46.246 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:46.248 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:46.249 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:17:46.250 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 7.7872ms
2024-02-25 20:17:46.251 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:46.252 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/4 - - - 200 - application/json;+charset=utf-8 12.6879ms
2024-02-25 20:17:48.431 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:17:48.432 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:17:48.432 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:48.433 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:17:48.435 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:17:48.437 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:48.439 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:17:48.441 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:17:48.442 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 7.4484ms
2024-02-25 20:17:48.443 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:17:48.444 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 12.6564ms
2024-02-25 20:19:24.609 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:19:24.610 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:24.611 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:19:24.612 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:19:24.613 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:24.619 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:19:24.620 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:24.621 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 8.1566ms
2024-02-25 20:19:24.621 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:19:24.622 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 12.5996ms
2024-02-25 20:19:25.458 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:19:25.459 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:25.460 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:19:25.461 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:19:25.463 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:25.474 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:19:25.487 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:19:25.490 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:19:25.491 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 29.3207ms
2024-02-25 20:19:25.494 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:19:25.496 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 37.9664ms
2024-02-25 20:19:28.044 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Category/FetchCategory?Sort=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-02-25 20:19:28.045 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:28.045 +07:00 [INF] Executing endpoint 'Presentation.Controllers.CategoryController.GetAllCategory (Presentation)'
2024-02-25 20:19:28.050 +07:00 [INF] Route matched with {action = "GetAllCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.CategoryResponse]]] GetAllCategory(DtoShared.FetchData.FetchDataCategoryRequest) on controller Presentation.Controllers.CategoryController (Presentation).
2024-02-25 20:19:28.055 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:28.061 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Categories] AS [c]
2024-02-25 20:19:28.071 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[Time]
FROM [Categories] AS [c]
ORDER BY CONVERT(varchar(100), [c].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:19:28.080 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.CategoryResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:28.083 +07:00 [INF] Executed action Presentation.Controllers.CategoryController.GetAllCategory (Presentation) in 32.2438ms
2024-02-25 20:19:28.085 +07:00 [INF] Executed endpoint 'Presentation.Controllers.CategoryController.GetAllCategory (Presentation)'
2024-02-25 20:19:28.086 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Category/FetchCategory?Sort=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 42.3596ms
2024-02-25 20:19:29.178 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Category/FetchCategory?Sort=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-02-25 20:19:29.180 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:29.180 +07:00 [INF] Executing endpoint 'Presentation.Controllers.CategoryController.GetAllCategory (Presentation)'
2024-02-25 20:19:29.181 +07:00 [INF] Route matched with {action = "GetAllCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.CategoryResponse]]] GetAllCategory(DtoShared.FetchData.FetchDataCategoryRequest) on controller Presentation.Controllers.CategoryController (Presentation).
2024-02-25 20:19:29.184 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:29.186 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Categories] AS [c]
2024-02-25 20:19:29.189 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[Time]
FROM [Categories] AS [c]
ORDER BY CONVERT(varchar(100), [c].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:19:29.191 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.CategoryResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:29.192 +07:00 [INF] Executed action Presentation.Controllers.CategoryController.GetAllCategory (Presentation) in 9.5437ms
2024-02-25 20:19:29.193 +07:00 [INF] Executed endpoint 'Presentation.Controllers.CategoryController.GetAllCategory (Presentation)'
2024-02-25 20:19:29.194 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Category/FetchCategory?Sort=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 15.9032ms
2024-02-25 20:19:30.912 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:19:30.913 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:30.914 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:19:30.915 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:19:30.916 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:30.919 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:19:30.921 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:30.922 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 6.085ms
2024-02-25 20:19:30.923 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:19:30.924 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 11.5183ms
2024-02-25 20:19:31.455 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:19:31.455 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:31.456 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:19:31.458 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:19:31.461 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:31.464 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:19:31.468 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:19:31.471 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:19:31.473 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 12.4185ms
2024-02-25 20:19:31.474 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:19:31.475 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 20.8330ms
2024-02-25 20:19:35.311 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-02-25 20:19:35.311 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:35.312 +07:00 [INF] Executing endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 20:19:35.313 +07:00 [INF] Route matched with {action = "GetAllProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductResponse]]] GetAllProduct(DtoShared.FetchData.FetchDataProductRequest) on controller Presentation.Controllers.ProductController (Presentation).
2024-02-25 20:19:35.316 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:35.320 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2024-02-25 20:19:35.326 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
ORDER BY [p].[Time] DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:19:35.328 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:35.330 +07:00 [INF] Executed action Presentation.Controllers.ProductController.GetAllProduct (Presentation) in 15.5609ms
2024-02-25 20:19:35.331 +07:00 [INF] Executed endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 20:19:35.331 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 20.7861ms
2024-02-25 20:19:35.931 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-02-25 20:19:35.931 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:35.932 +07:00 [INF] Executing endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 20:19:35.934 +07:00 [INF] Route matched with {action = "GetAllProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductResponse]]] GetAllProduct(DtoShared.FetchData.FetchDataProductRequest) on controller Presentation.Controllers.ProductController (Presentation).
2024-02-25 20:19:35.936 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:35.938 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2024-02-25 20:19:35.941 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
ORDER BY [p].[Time] DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:19:35.943 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:35.944 +07:00 [INF] Executed action Presentation.Controllers.ProductController.GetAllProduct (Presentation) in 8.683ms
2024-02-25 20:19:35.945 +07:00 [INF] Executed endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 20:19:35.946 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 15.1327ms
2024-02-25 20:19:37.623 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Category/all - -
2024-02-25 20:19:37.624 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:37.624 +07:00 [INF] Executing endpoint 'Presentation.Controllers.CategoryController.GetAllCategory (Presentation)'
2024-02-25 20:19:37.628 +07:00 [INF] Route matched with {action = "GetAllCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.CategoryResponse]]] GetAllCategory() on controller Presentation.Controllers.CategoryController (Presentation).
2024-02-25 20:19:37.632 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:37.641 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[Time]
FROM [Categories] AS [c]
2024-02-25 20:19:37.643 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.CategoryResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:37.644 +07:00 [INF] Executed action Presentation.Controllers.CategoryController.GetAllCategory (Presentation) in 14.5104ms
2024-02-25 20:19:37.645 +07:00 [INF] Executed endpoint 'Presentation.Controllers.CategoryController.GetAllCategory (Presentation)'
2024-02-25 20:19:37.645 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Category/all - - - 200 - application/json;+charset=utf-8 22.7346ms
2024-02-25 20:19:40.968 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Category/FetchCategory?Sort=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-02-25 20:19:40.969 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:40.970 +07:00 [INF] Executing endpoint 'Presentation.Controllers.CategoryController.GetAllCategory (Presentation)'
2024-02-25 20:19:40.971 +07:00 [INF] Route matched with {action = "GetAllCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.CategoryResponse]]] GetAllCategory(DtoShared.FetchData.FetchDataCategoryRequest) on controller Presentation.Controllers.CategoryController (Presentation).
2024-02-25 20:19:40.974 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:40.979 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Categories] AS [c]
2024-02-25 20:19:40.983 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[Time]
FROM [Categories] AS [c]
ORDER BY CONVERT(varchar(100), [c].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:19:40.985 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.CategoryResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:40.986 +07:00 [INF] Executed action Presentation.Controllers.CategoryController.GetAllCategory (Presentation) in 14.0191ms
2024-02-25 20:19:40.988 +07:00 [INF] Executed endpoint 'Presentation.Controllers.CategoryController.GetAllCategory (Presentation)'
2024-02-25 20:19:40.989 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Category/FetchCategory?Sort=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 20.2680ms
2024-02-25 20:19:42.027 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Category/FetchCategory?Sort=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-02-25 20:19:42.028 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:42.029 +07:00 [INF] Executing endpoint 'Presentation.Controllers.CategoryController.GetAllCategory (Presentation)'
2024-02-25 20:19:42.030 +07:00 [INF] Route matched with {action = "GetAllCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.CategoryResponse]]] GetAllCategory(DtoShared.FetchData.FetchDataCategoryRequest) on controller Presentation.Controllers.CategoryController (Presentation).
2024-02-25 20:19:42.032 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:42.035 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Categories] AS [c]
2024-02-25 20:19:42.041 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [c].[Time]
FROM [Categories] AS [c]
ORDER BY CONVERT(varchar(100), [c].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:19:42.043 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.CategoryResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:42.044 +07:00 [INF] Executed action Presentation.Controllers.CategoryController.GetAllCategory (Presentation) in 12.9846ms
2024-02-25 20:19:42.046 +07:00 [INF] Executed endpoint 'Presentation.Controllers.CategoryController.GetAllCategory (Presentation)'
2024-02-25 20:19:42.047 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Category/FetchCategory?Sort=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 19.4782ms
2024-02-25 20:19:46.504 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-02-25 20:19:46.505 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:46.506 +07:00 [INF] Executing endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 20:19:46.507 +07:00 [INF] Route matched with {action = "GetAllProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductResponse]]] GetAllProduct(DtoShared.FetchData.FetchDataProductRequest) on controller Presentation.Controllers.ProductController (Presentation).
2024-02-25 20:19:46.511 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:46.515 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2024-02-25 20:19:46.519 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
ORDER BY [p].[Time] DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:19:46.521 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:46.523 +07:00 [INF] Executed action Presentation.Controllers.ProductController.GetAllProduct (Presentation) in 14.1557ms
2024-02-25 20:19:46.524 +07:00 [INF] Executed endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-02-25 20:19:46.525 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 20.5919ms
2024-02-25 20:19:46.936 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:19:46.937 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:46.939 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:19:46.939 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:19:46.942 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:46.949 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:19:46.951 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:46.952 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 11.35ms
2024-02-25 20:19:46.953 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:19:46.954 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 18.2487ms
2024-02-25 20:19:47.491 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:19:47.491 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:47.492 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:19:47.493 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:19:47.495 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:47.501 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:19:47.508 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:19:47.510 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:19:47.511 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 15.8932ms
2024-02-25 20:19:47.511 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:19:47.512 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 21.6517ms
2024-02-25 20:19:50.010 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 20:19:50.011 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:50.012 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:19:50.013 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:19:50.015 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:50.018 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 20:19:50.022 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:19:50.026 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:19:50.032 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:19:50.037 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:19:50.040 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:19:50.043 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:19:50.045 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:19:50.048 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:19:50.051 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:19:50.053 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:19:50.056 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:19:50.059 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:19:50.061 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:50.062 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 46.8293ms
2024-02-25 20:19:50.063 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:19:50.064 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 53.7521ms
2024-02-25 20:19:51.097 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 20:19:51.097 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:51.098 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:19:51.099 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:19:51.101 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:51.106 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:19:51.109 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:19:51.115 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:19:51.119 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:19:51.121 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 20:19:51.122 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 21.6752ms
2024-02-25 20:19:51.123 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:19:51.124 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 27.5635ms
2024-02-25 20:19:51.696 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-02-25 20:19:51.697 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:51.698 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:19:51.699 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:19:51.701 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:51.704 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-02-25 20:19:51.708 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-02-25 20:19:51.713 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:19:51.716 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:19:51.721 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:19:51.725 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:19:51.728 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:19:51.732 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:19:51.735 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:19:51.739 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:19:51.744 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[Status], [o].[Time], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[Id] = @__p_0
2024-02-25 20:19:51.747 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[Time]
FROM [Products] AS [p]
WHERE [p].[Id] = @__p_0
2024-02-25 20:19:51.749 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2024-02-25 20:19:51.751 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:19:51.752 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 51.4149ms
2024-02-25 20:19:51.752 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-02-25 20:19:51.753 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 57.6048ms
2024-02-25 20:19:52.764 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-02-25 20:19:52.765 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:19:52.766 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:19:52.767 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:19:52.770 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:19:52.774 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:19:52.776 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-02-25 20:19:52.778 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:19:52.781 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-02-25 20:19:52.783 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-02-25 20:19:52.784 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 14.8821ms
2024-02-25 20:19:52.785 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-02-25 20:19:52.787 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 23.3187ms
2024-02-25 20:20:01.449 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - -
2024-02-25 20:20:01.450 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:20:01.451 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:20:01.452 +07:00 [INF] Route matched with {action = "AnalysisData", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[DtoShared.ModulesDto.AnalysisDataInfo]]] AnalysisData(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:20:01.454 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:20:01.459 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Name] AS [nameCategory], COALESCE(SUM(CAST([p0].[Quantity] AS decimal(18,2)) * [p].[Price]), 0.0) AS [profit], COALESCE(SUM([p0].[Quantity]), 0) AS [soldNumber]
FROM [Categories] AS [c]
INNER JOIN [Products] AS [p] ON [c].[Id] = [p].[CategoryId]
INNER JOIN [ProductOrders] AS [p0] ON [p].[Id] = [p0].[ProductId]
WHERE CONVERT(date, [p0].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))
GROUP BY [c].[Id], [c].[Name]
2024-02-25 20:20:01.462 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[DtoShared.ModulesDto.AnalysisDataInfo, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-02-25 20:20:01.463 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisData (Presentation) in 10.1574ms
2024-02-25 20:20:01.464 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisData (Presentation)'
2024-02-25 20:20:01.465 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisData/30 - - - 200 - application/json;+charset=utf-8 15.8884ms
2024-02-25 20:20:02.033 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - -
2024-02-25 20:20:02.034 +07:00 [INF] CORS policy execution successful.
2024-02-25 20:20:02.035 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:20:02.036 +07:00 [INF] Route matched with {action = "AnalysisDataLine", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.GroupAnalysisDataLineInfo]] AnalysisDataLine(Int32) on controller Presentation.Controllers.OrderController (Presentation).
2024-02-25 20:20:02.038 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-02-25 20:20:02.041 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = -1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:20:02.046 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SELECT CONVERT(date, [p].[Time]) AS [time], COALESCE(SUM([p].[Quantity]), 0) AS [orderNumber]
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
INNER JOIN [Orders] AS [o] ON [p].[OrderId] = [o].[Id]
WHERE (CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(@__p_0 AS int), CONVERT(date, GETDATE()))) AND ([o].[Status] = 1)
GROUP BY CONVERT(date, [p].[Time])
2024-02-25 20:20:02.050 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.GroupAnalysisDataLineInfo'.
2024-02-25 20:20:02.051 +07:00 [INF] Executed action Presentation.Controllers.OrderController.AnalysisDataLine (Presentation) in 13.6534ms
2024-02-25 20:20:02.052 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.AnalysisDataLine (Presentation)'
2024-02-25 20:20:02.054 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/AnalysisDataLine/7 - - - 200 - application/json;+charset=utf-8 20.5324ms
