2024-03-04 18:16:54.434 +07:00 [INF] Start installing Hangfire SQL objects...
2024-03-04 18:16:56.749 +07:00 [INF] Hangfire SQL objects installed.
2024-03-04 18:16:56.825 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-03-04 18:16:56.943 +07:00 [INF] Now listening on: https://localhost:7148
2024-03-04 18:16:56.945 +07:00 [INF] Now listening on: http://localhost:5170
2024-03-04 18:16:56.953 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: tcp:lythevinh106.database.windows.net,1433@ApiShopHangFire'
2024-03-04 18:16:56.955 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-03-04 18:16:56.955 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-03-04 18:16:56.968 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-03-04 18:16:56.970 +07:00 [INF] Hosting environment: Development
2024-03-04 18:16:56.970 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-03-04 18:16:57.134 +07:00 [INF] Server laptop-2s90t1ik:23816:d1d157ec successfully announced in 167,3139 ms
2024-03-04 18:16:57.141 +07:00 [INF] Server laptop-2s90t1ik:23816:d1d157ec is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-03-04 18:16:57.147 +07:00 [INF] Server laptop-2s90t1ik:23816:d1d157ec all the dispatchers started
2024-03-04 18:16:58.308 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 18:16:58.502 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 194.5800ms
2024-03-04 18:16:58.525 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 18:16:58.529 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.5345ms
2024-03-04 18:16:58.559 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 18:16:58.614 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 55.0948ms
2024-03-04 18:16:59.480 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 18:16:59.656 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 175.4464ms
2024-03-04 18:44:25.967 +07:00 [INF] Start installing Hangfire SQL objects...
2024-03-04 18:44:27.898 +07:00 [INF] Hangfire SQL objects installed.
2024-03-04 18:44:27.965 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-03-04 18:44:28.042 +07:00 [INF] Now listening on: https://localhost:7148
2024-03-04 18:44:28.043 +07:00 [INF] Now listening on: http://localhost:5170
2024-03-04 18:44:28.049 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: tcp:lythevinh106.database.windows.net,1433@ApiShopHangFire'
2024-03-04 18:44:28.050 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-03-04 18:44:28.050 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-03-04 18:44:28.059 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-03-04 18:44:28.060 +07:00 [INF] Hosting environment: Development
2024-03-04 18:44:28.061 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-03-04 18:44:28.209 +07:00 [INF] Server laptop-2s90t1ik:16676:95c668d2 successfully announced in 150,6649 ms
2024-03-04 18:44:28.212 +07:00 [INF] Server laptop-2s90t1ik:16676:95c668d2 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-03-04 18:44:28.216 +07:00 [INF] Server laptop-2s90t1ik:16676:95c668d2 all the dispatchers started
2024-03-04 18:44:28.302 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 18:44:28.416 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 114.3686ms
2024-03-04 18:44:28.513 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 18:44:28.513 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 18:44:28.516 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.3833ms
2024-03-04 18:44:28.536 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.8245ms
2024-03-04 18:44:29.423 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 18:44:29.546 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 123.1656ms
2024-03-04 18:44:33.329 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 18:44:33.332 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 3.4664ms
2024-03-04 18:44:33.375 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 18:44:33.375 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 18:44:33.377 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.2262ms
2024-03-04 18:44:33.385 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 10.1965ms
2024-03-04 18:44:34.515 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 18:44:34.530 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 15.0636ms
2024-03-04 18:44:44.720 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 18:44:44.733 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 12.7114ms
2024-03-04 18:44:44.995 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 18:44:44.997 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 1.2675ms
2024-03-04 18:44:45.026 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 18:44:45.043 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 16.5235ms
2024-03-04 18:44:45.881 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 18:44:45.890 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 8.9110ms
2024-03-04 18:45:20.700 +07:00 [INF] Start installing Hangfire SQL objects...
2024-03-04 18:45:22.704 +07:00 [INF] Hangfire SQL objects installed.
2024-03-04 18:45:22.784 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-03-04 18:45:22.886 +07:00 [INF] Now listening on: https://localhost:7148
2024-03-04 18:45:22.887 +07:00 [INF] Now listening on: http://localhost:5170
2024-03-04 18:45:22.892 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: tcp:lythevinh106.database.windows.net,1433@ApiShopHangFire'
2024-03-04 18:45:22.893 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-03-04 18:45:22.894 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-03-04 18:45:22.905 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-03-04 18:45:22.906 +07:00 [INF] Hosting environment: Development
2024-03-04 18:45:22.906 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-03-04 18:45:23.065 +07:00 [INF] Server laptop-2s90t1ik:30968:ad20098e successfully announced in 160,8345 ms
2024-03-04 18:45:23.068 +07:00 [INF] Server laptop-2s90t1ik:30968:ad20098e is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-03-04 18:45:23.072 +07:00 [INF] Server laptop-2s90t1ik:30968:ad20098e all the dispatchers started
2024-03-04 18:45:23.088 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 18:45:23.196 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 108.7142ms
2024-03-04 18:45:23.227 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 18:45:23.227 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 18:45:23.229 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.7801ms
2024-03-04 18:45:23.252 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.9956ms
2024-03-04 18:45:23.557 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 18:45:23.707 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 150.5055ms
2024-03-04 18:45:30.939 +07:00 [INF] Start installing Hangfire SQL objects...
2024-03-04 18:45:32.761 +07:00 [INF] Hangfire SQL objects installed.
2024-03-04 18:45:32.832 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-03-04 18:45:32.902 +07:00 [INF] Now listening on: https://localhost:7148
2024-03-04 18:45:32.903 +07:00 [INF] Now listening on: http://localhost:5170
2024-03-04 18:45:32.909 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: tcp:lythevinh106.database.windows.net,1433@ApiShopHangFire'
2024-03-04 18:45:32.910 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-03-04 18:45:32.910 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-03-04 18:45:32.919 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-03-04 18:45:32.919 +07:00 [INF] Hosting environment: Development
2024-03-04 18:45:32.920 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-03-04 18:45:33.002 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 18:45:33.062 +07:00 [INF] Server laptop-2s90t1ik:10612:b0b1863b successfully announced in 143,8155 ms
2024-03-04 18:45:33.065 +07:00 [INF] Server laptop-2s90t1ik:10612:b0b1863b is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-03-04 18:45:33.070 +07:00 [INF] Server laptop-2s90t1ik:10612:b0b1863b all the dispatchers started
2024-03-04 18:45:33.135 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 132.7662ms
2024-03-04 18:45:33.151 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 18:45:33.151 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 18:45:33.156 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 4.4797ms
2024-03-04 18:45:33.182 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 30.5386ms
2024-03-04 18:45:33.472 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 18:45:33.635 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 163.1136ms
2024-03-04 19:05:59.324 +07:00 [INF] Start installing Hangfire SQL objects...
2024-03-04 19:06:01.486 +07:00 [INF] Hangfire SQL objects installed.
2024-03-04 19:06:01.563 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-03-04 19:06:01.671 +07:00 [INF] Now listening on: https://localhost:7148
2024-03-04 19:06:01.672 +07:00 [INF] Now listening on: http://localhost:5170
2024-03-04 19:06:01.678 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: tcp:lythevinh106.database.windows.net,1433@ApiShopHangFire'
2024-03-04 19:06:01.679 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-03-04 19:06:01.680 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-03-04 19:06:01.690 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-03-04 19:06:01.691 +07:00 [INF] Hosting environment: Development
2024-03-04 19:06:01.691 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-03-04 19:06:01.843 +07:00 [INF] Server laptop-2s90t1ik:1856:240028eb successfully announced in 153,6954 ms
2024-03-04 19:06:01.847 +07:00 [INF] Server laptop-2s90t1ik:1856:240028eb is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-03-04 19:06:01.852 +07:00 [INF] Server laptop-2s90t1ik:1856:240028eb all the dispatchers started
2024-03-04 19:06:03.170 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 19:06:03.457 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 287.8053ms
2024-03-04 19:06:03.526 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 19:06:03.527 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 19:06:03.529 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.0974ms
2024-03-04 19:06:03.642 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 115.0450ms
2024-03-04 19:06:04.861 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 19:06:05.057 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 196.5483ms
2024-03-04 19:15:35.430 +07:00 [INF] Start installing Hangfire SQL objects...
2024-03-04 19:15:37.379 +07:00 [INF] Hangfire SQL objects installed.
2024-03-04 19:15:37.448 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-03-04 19:15:37.516 +07:00 [INF] Now listening on: https://localhost:7148
2024-03-04 19:15:37.517 +07:00 [INF] Now listening on: http://localhost:5170
2024-03-04 19:15:37.523 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: tcp:lythevinh106.database.windows.net,1433@ApiShopHangFire'
2024-03-04 19:15:37.524 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-03-04 19:15:37.524 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-03-04 19:15:37.532 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-03-04 19:15:37.533 +07:00 [INF] Hosting environment: Development
2024-03-04 19:15:37.533 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-03-04 19:15:37.677 +07:00 [INF] Server laptop-2s90t1ik:19068:9244fc16 successfully announced in 145,44 ms
2024-03-04 19:15:37.680 +07:00 [INF] Server laptop-2s90t1ik:19068:9244fc16 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-03-04 19:15:37.683 +07:00 [INF] Server laptop-2s90t1ik:19068:9244fc16 all the dispatchers started
2024-03-04 19:15:38.214 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 19:15:38.374 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 161.6316ms
2024-03-04 19:15:38.413 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 19:15:38.416 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 3.2000ms
2024-03-04 19:15:38.433 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 19:15:38.461 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 28.2427ms
2024-03-04 19:15:39.254 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 19:15:39.412 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 158.2110ms
2024-03-04 19:20:37.777 +07:00 [INF] 1 servers were removed due to timeout
2024-03-04 19:34:23.673 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 19:34:23.679 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 5.8513ms
2024-03-04 19:34:23.788 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 19:34:23.790 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 1.4601ms
2024-03-04 19:34:23.837 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 19:34:23.850 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 12.4168ms
2024-03-04 19:34:24.718 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 19:34:24.727 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 9.0305ms
2024-03-04 19:35:06.108 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 19:35:06.111 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 3.3876ms
2024-03-04 19:35:06.144 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 19:35:06.146 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 1.5305ms
2024-03-04 19:35:06.153 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 19:35:06.159 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.6615ms
2024-03-04 19:35:07.011 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 19:35:07.022 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 10.6310ms
2024-03-04 19:35:39.445 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 19:35:39.448 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 2.9589ms
2024-03-04 19:35:39.489 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 19:35:39.489 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 19:35:39.493 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 4.1370ms
2024-03-04 19:35:39.497 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 8.4851ms
2024-03-04 19:35:40.658 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 19:35:40.682 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 24.1141ms
2024-03-04 19:37:23.656 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 19:37:23.663 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 7.6076ms
2024-03-04 19:37:23.690 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 19:37:23.690 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 19:37:23.693 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.3674ms
2024-03-04 19:37:23.698 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.3653ms
2024-03-04 19:37:24.808 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 19:37:24.821 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 13.0219ms
2024-03-04 19:37:44.967 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Category/FetchCategory?Sort=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-03-04 19:37:44.971 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:37:45.006 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-03-04 19:37:45.009 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-03-04 19:37:45.010 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Category/FetchCategory?Sort=Descending&PageNumber=1&Search=&PageSize=8 - - - 401 0 - 43.0964ms
2024-03-04 19:38:00.342 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7148/api/User/SingIn - -
2024-03-04 19:38:00.343 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:00.345 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7148/api/User/SingIn - - - 204 - - 3.8524ms
2024-03-04 19:38:00.348 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7148/api/User/SingIn application/json;+charset=utf-8 57
2024-03-04 19:38:00.351 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:00.367 +07:00 [INF] Executing endpoint 'Presentation.Controllers.UserController.SingIn (Presentation)'
2024-03-04 19:38:00.408 +07:00 [INF] Route matched with {action = "SingIn", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] SingIn(DtoShared.ModulesDto.SingInUser) on controller Presentation.Controllers.UserController (Presentation).
2024-03-04 19:38:01.268 +07:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-03-04 19:38:01.405 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:38:02.129 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[@__request__singInUser_Email_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]
        WHERE [a].[Email] = @__request__singInUser_Email_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-03-04 19:38:02.214 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2024-03-04 19:38:02.351 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2024-03-04 19:38:02.433 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2024-03-04 19:38:02.441 +07:00 [INF] AuthenticationScheme: Identity.Application signed in.
2024-03-04 19:38:02.492 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Address], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Time], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2024-03-04 19:38:02.536 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2024-03-04 19:38:02.604 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.SingInResponse'.
2024-03-04 19:38:02.636 +07:00 [INF] Executed action Presentation.Controllers.UserController.SingIn (Presentation) in 2218.6633ms
2024-03-04 19:38:02.641 +07:00 [INF] Executed endpoint 'Presentation.Controllers.UserController.SingIn (Presentation)'
2024-03-04 19:38:02.648 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7148/api/User/SingIn application/json;+charset=utf-8 57 - 200 - application/json;+charset=utf-8 2300.0951ms
2024-03-04 19:38:02.715 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-03-04 19:38:02.717 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:02.717 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 204 - - 2.2151ms
2024-03-04 19:38:02.721 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-03-04 19:38:02.722 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:02.774 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:38:02.780 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:38:02.824 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:38:02.897 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-03-04 19:38:02.949 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-03-04 19:38:02.953 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-03-04 19:38:02.963 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 182.0603ms
2024-03-04 19:38:02.965 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:38:02.967 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 246.5657ms
2024-03-04 19:38:03.000 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7148/api/Order/CountSoldInfo - -
2024-03-04 19:38:03.001 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:03.003 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7148/api/Order/CountSoldInfo - - - 204 - - 2.2380ms
2024-03-04 19:38:03.008 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-03-04 19:38:03.009 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:03.011 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:38:03.016 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:38:03.031 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:38:03.100 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:38:03.162 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:38:03.209 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:38:03.252 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:38:03.255 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-03-04 19:38:03.264 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 246.3317ms
2024-03-04 19:38:03.265 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:38:03.268 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 260.3309ms
2024-03-04 19:38:03.402 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-03-04 19:38:03.404 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:03.405 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:38:03.407 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:38:03.410 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:38:03.452 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-03-04 19:38:03.495 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-03-04 19:38:03.497 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-03-04 19:38:03.498 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 89.7324ms
2024-03-04 19:38:03.499 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:38:03.500 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 97.2759ms
2024-03-04 19:38:03.506 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-03-04 19:38:03.508 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:03.508 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:38:03.509 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:38:03.511 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:38:03.555 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:38:03.598 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:38:03.642 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:38:03.686 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:38:03.688 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-03-04 19:38:03.690 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 179.6331ms
2024-03-04 19:38:03.691 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:38:03.693 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 186.7586ms
2024-03-04 19:38:10.872 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 19:38:10.876 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 3.5907ms
2024-03-04 19:38:10.907 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 19:38:10.907 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 19:38:10.910 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.6754ms
2024-03-04 19:38:10.918 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 10.7578ms
2024-03-04 19:38:12.269 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 19:38:12.285 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 16.0187ms
2024-03-04 19:38:13.100 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-03-04 19:38:13.101 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:13.101 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 204 - - 1.3126ms
2024-03-04 19:38:13.104 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-03-04 19:38:13.105 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:13.105 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:38:13.106 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:38:13.109 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:38:13.151 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-03-04 19:38:13.194 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-03-04 19:38:13.196 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-03-04 19:38:13.197 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 90.293ms
2024-03-04 19:38:13.198 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:38:13.200 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 95.4981ms
2024-03-04 19:38:13.364 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7148/api/Order/CountSoldInfo - -
2024-03-04 19:38:13.364 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:13.365 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7148/api/Order/CountSoldInfo - - - 204 - - 1.6146ms
2024-03-04 19:38:13.368 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-03-04 19:38:13.369 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:13.371 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:38:13.371 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:38:13.374 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:38:13.417 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:38:13.459 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:38:13.502 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:38:13.545 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:38:13.547 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-03-04 19:38:13.549 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 176.4223ms
2024-03-04 19:38:13.550 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:38:13.551 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 182.4869ms
2024-03-04 19:38:13.651 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-03-04 19:38:13.652 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:13.653 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:38:13.654 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:38:13.656 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:38:13.699 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-03-04 19:38:13.743 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-03-04 19:38:13.745 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-03-04 19:38:13.747 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 91.4766ms
2024-03-04 19:38:13.748 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:38:13.750 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 98.3946ms
2024-03-04 19:38:13.766 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-03-04 19:38:13.766 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:38:13.769 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:38:13.770 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:38:13.772 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:38:13.816 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:38:13.859 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:38:13.902 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:38:13.946 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:38:13.949 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-03-04 19:38:13.950 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 178.5888ms
2024-03-04 19:38:13.951 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:38:13.953 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 186.8465ms
2024-03-04 19:39:13.413 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 19:39:13.416 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 2.4763ms
2024-03-04 19:39:13.444 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 19:39:13.444 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 19:39:13.446 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 1.8880ms
2024-03-04 19:39:13.448 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 3.8158ms
2024-03-04 19:39:14.699 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 19:39:14.712 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 13.0311ms
2024-03-04 19:39:15.945 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-03-04 19:39:15.946 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:39:15.946 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 204 - - 1.3785ms
2024-03-04 19:39:15.949 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-03-04 19:39:15.950 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:39:15.951 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:39:15.952 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:39:15.954 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:39:15.995 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-03-04 19:39:16.037 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-03-04 19:39:16.040 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-03-04 19:39:16.041 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 87.8662ms
2024-03-04 19:39:16.042 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:39:16.042 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 92.9924ms
2024-03-04 19:39:16.200 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7148/api/Order/CountSoldInfo - -
2024-03-04 19:39:16.201 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:39:16.201 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7148/api/Order/CountSoldInfo - - - 204 - - 1.3172ms
2024-03-04 19:39:16.204 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-03-04 19:39:16.205 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:39:16.206 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:39:16.207 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:39:16.209 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:39:16.251 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:39:16.293 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:39:16.336 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:39:16.381 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:39:16.382 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-03-04 19:39:16.384 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 175.1988ms
2024-03-04 19:39:16.385 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:39:16.386 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 181.3018ms
2024-03-04 19:39:16.494 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - -
2024-03-04 19:39:16.495 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:39:16.496 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:39:16.497 +07:00 [INF] Route matched with {action = "GetAllOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]]] GetAllOrder(DtoShared.FetchData.FetchDataOrderRequest) on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:39:16.499 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:39:16.542 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [ProductOrders] AS [p]
2024-03-04 19:39:16.586 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[OrderId], [p].[Quantity], [p].[Time]
FROM [ProductOrders] AS [p]
ORDER BY CONVERT(varchar(100), [p].[Time]) DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-03-04 19:39:16.587 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductOrderWithUserResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-03-04 19:39:16.589 +07:00 [INF] Executed action Presentation.Controllers.OrderController.GetAllOrder (Presentation) in 91.1199ms
2024-03-04 19:39:16.591 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.GetAllOrder (Presentation)'
2024-03-04 19:39:16.592 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/FetchOrder?Sort=Descending&PageNumber=1&PageSize=8 - - - 200 - application/json;+charset=utf-8 97.6555ms
2024-03-04 19:39:16.598 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - -
2024-03-04 19:39:16.599 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:39:16.600 +07:00 [INF] Executing endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:39:16.602 +07:00 [INF] Route matched with {action = "CountSoldInfo", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.ModulesDto.ProductOrderWithUserResponse]] CountSoldInfo() on controller Presentation.Controllers.OrderController (Presentation).
2024-03-04 19:39:16.604 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:39:16.648 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:39:16.691 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) = CONVERT(date, GETDATE())
2024-03-04 19:39:16.734 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM(CAST([p].[Quantity] AS decimal(18,2)) * [p0].[Price]), 0.0)
FROM [ProductOrders] AS [p]
INNER JOIN [Products] AS [p0] ON [p].[ProductId] = [p0].[Id]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:39:16.779 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(SUM([p].[Quantity]), 0)
FROM [ProductOrders] AS [p]
WHERE CONVERT(date, [p].[Time]) >= DATEADD(day, CAST(-30.0E0 AS int), CONVERT(date, GETDATE()))
2024-03-04 19:39:16.781 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.ModulesDto.CountOrderInfo'.
2024-03-04 19:39:16.782 +07:00 [INF] Executed action Presentation.Controllers.OrderController.CountSoldInfo (Presentation) in 179.0152ms
2024-03-04 19:39:16.784 +07:00 [INF] Executed endpoint 'Presentation.Controllers.OrderController.CountSoldInfo (Presentation)'
2024-03-04 19:39:16.786 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Order/CountSoldInfo - - - 200 - application/json;+charset=utf-8 188.0722ms
2024-03-04 19:39:17.838 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7148/api/Product/FetchProduct?PageNumber=1&Search=&PageSize=8 - -
2024-03-04 19:39:17.839 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:39:17.840 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7148/api/Product/FetchProduct?PageNumber=1&Search=&PageSize=8 - - - 204 - - 1.7510ms
2024-03-04 19:39:17.845 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?PageNumber=1&Search=&PageSize=8 - -
2024-03-04 19:39:17.846 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:39:17.847 +07:00 [INF] Executing endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-03-04 19:39:17.854 +07:00 [INF] Route matched with {action = "GetAllProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductResponse]]] GetAllProduct(DtoShared.FetchData.FetchDataProductRequest) on controller Presentation.Controllers.ProductController (Presentation).
2024-03-04 19:39:17.863 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:39:17.911 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2024-03-04 19:39:17.916 +07:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-03-04 19:39:17.917 +07:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-03-04 19:39:17.967 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[PromotionId], [p].[Time]
FROM [Products] AS [p]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-03-04 19:39:17.991 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-03-04 19:39:17.997 +07:00 [INF] Executed action Presentation.Controllers.ProductController.GetAllProduct (Presentation) in 141.224ms
2024-03-04 19:39:17.998 +07:00 [INF] Executed endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-03-04 19:39:18.000 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 154.7282ms
2024-03-04 19:39:18.087 +07:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-03-04 19:39:18.088 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:39:18.089 +07:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - - - 204 - - 2.3761ms
2024-03-04 19:39:18.095 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - -
2024-03-04 19:39:18.096 +07:00 [INF] CORS policy execution successful.
2024-03-04 19:39:18.097 +07:00 [INF] Executing endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-03-04 19:39:18.098 +07:00 [INF] Route matched with {action = "GetAllProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[DtoShared.Pagging.PaggingResponse`1[DtoShared.ModulesDto.ProductResponse]]] GetAllProduct(DtoShared.FetchData.FetchDataProductRequest) on controller Presentation.Controllers.ProductController (Presentation).
2024-03-04 19:39:18.100 +07:00 [INF] Entity Framework Core 6.0.25 initialized 'DBApiContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.25' with options: using lazy loading proxies 
2024-03-04 19:39:18.146 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Products] AS [p]
2024-03-04 19:39:18.196 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[Description], [p].[Image], [p].[Name], [p].[Price], [p].[PromotionId], [p].[Time]
FROM [Products] AS [p]
ORDER BY [p].[Time] DESC
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2024-03-04 19:39:18.201 +07:00 [INF] Executing OkObjectResult, writing value of type 'DtoShared.Pagging.PaggingResponse`1[[DtoShared.ModulesDto.ProductResponse, DtoShared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-03-04 19:39:18.203 +07:00 [INF] Executed action Presentation.Controllers.ProductController.GetAllProduct (Presentation) in 103.2206ms
2024-03-04 19:39:18.204 +07:00 [INF] Executed endpoint 'Presentation.Controllers.ProductController.GetAllProduct (Presentation)'
2024-03-04 19:39:18.206 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/api/Product/FetchProduct?SortTime=Descending&PageNumber=1&Search=&PageSize=8 - - - 200 - application/json;+charset=utf-8 110.5418ms
2024-03-04 19:48:47.823 +07:00 [INF] Start installing Hangfire SQL objects...
2024-03-04 19:48:49.890 +07:00 [INF] Hangfire SQL objects installed.
2024-03-04 19:48:49.957 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-03-04 19:48:50.038 +07:00 [INF] Now listening on: https://localhost:7148
2024-03-04 19:48:50.039 +07:00 [INF] Now listening on: http://localhost:5170
2024-03-04 19:48:50.044 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: tcp:lythevinh106.database.windows.net,1433@ApiShopHangFire'
2024-03-04 19:48:50.045 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-03-04 19:48:50.045 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-03-04 19:48:50.055 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-03-04 19:48:50.055 +07:00 [INF] Hosting environment: Development
2024-03-04 19:48:50.056 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-03-04 19:48:50.129 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 19:48:50.187 +07:00 [INF] Server laptop-2s90t1ik:12696:cad73b2e successfully announced in 133,7904 ms
2024-03-04 19:48:50.190 +07:00 [INF] Server laptop-2s90t1ik:12696:cad73b2e is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-03-04 19:48:50.194 +07:00 [INF] Server laptop-2s90t1ik:12696:cad73b2e all the dispatchers started
2024-03-04 19:48:50.239 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 110.3272ms
2024-03-04 19:48:50.252 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 19:48:50.252 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 19:48:50.255 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.9451ms
2024-03-04 19:48:50.274 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.7106ms
2024-03-04 19:48:52.563 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 19:48:52.785 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 221.7876ms
2024-03-04 19:53:50.286 +07:00 [INF] 1 servers were removed due to timeout
2024-03-04 20:05:37.866 +07:00 [INF] Start installing Hangfire SQL objects...
2024-03-04 20:05:39.904 +07:00 [INF] Hangfire SQL objects installed.
2024-03-04 20:05:40.002 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-03-04 20:05:40.127 +07:00 [INF] Now listening on: https://localhost:7148
2024-03-04 20:05:40.128 +07:00 [INF] Now listening on: http://localhost:5170
2024-03-04 20:05:40.134 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: tcp:lythevinh106.database.windows.net,1433@ApiShopHangFire'
2024-03-04 20:05:40.135 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-03-04 20:05:40.145 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-03-04 20:05:40.158 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-03-04 20:05:40.159 +07:00 [INF] Hosting environment: Development
2024-03-04 20:05:40.161 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-03-04 20:05:40.385 +07:00 [INF] Server laptop-2s90t1ik:25896:5b35cd54 successfully announced in 219,351 ms
2024-03-04 20:05:40.390 +07:00 [INF] Server laptop-2s90t1ik:25896:5b35cd54 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-03-04 20:05:40.412 +07:00 [INF] Server laptop-2s90t1ik:25896:5b35cd54 all the dispatchers started
2024-03-04 20:05:40.414 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 20:05:40.551 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 137.1914ms
2024-03-04 20:05:40.567 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 20:05:40.567 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 20:05:40.569 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.6476ms
2024-03-04 20:05:40.595 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 28.0377ms
2024-03-04 20:05:41.736 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 20:05:41.932 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 195.6887ms
2024-03-04 20:09:31.892 +07:00 [INF] Start installing Hangfire SQL objects...
2024-03-04 20:09:34.190 +07:00 [INF] Hangfire SQL objects installed.
2024-03-04 20:09:34.272 +07:00 [INF] User profile is available. Using 'C:\Users\VINH\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-03-04 20:09:34.367 +07:00 [INF] Now listening on: https://localhost:7148
2024-03-04 20:09:34.367 +07:00 [INF] Now listening on: http://localhost:5170
2024-03-04 20:09:34.375 +07:00 [INF] Starting Hangfire Server using job storage: 'SQL Server: tcp:lythevinh106.database.windows.net,1433@ApiShopHangFire'
2024-03-04 20:09:34.375 +07:00 [INF] Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
2024-03-04 20:09:34.376 +07:00 [INF] Using the following options for Hangfire Server:
    Worker count: 20
    Listening queues: 'default'
    Shutdown timeout: 00:00:15
    Schedule polling interval: 00:00:15
2024-03-04 20:09:34.385 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-03-04 20:09:34.386 +07:00 [INF] Hosting environment: Development
2024-03-04 20:09:34.386 +07:00 [INF] Content root path: C:\Users\VINH\source\repos\ApiShop\Presentation\
2024-03-04 20:09:34.540 +07:00 [INF] Server laptop-2s90t1ik:3984:24df1410 successfully announced in 155,7813 ms
2024-03-04 20:09:34.544 +07:00 [INF] Server laptop-2s90t1ik:3984:24df1410 is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
2024-03-04 20:09:34.548 +07:00 [INF] Server laptop-2s90t1ik:3984:24df1410 all the dispatchers started
2024-03-04 20:09:34.876 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/index.html - -
2024-03-04 20:09:35.022 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/index.html - - - 200 - text/html;charset=utf-8 147.9386ms
2024-03-04 20:09:35.037 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - -
2024-03-04 20:09:35.040 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 2.7567ms
2024-03-04 20:09:35.062 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/_vs/browserLink - -
2024-03-04 20:09:35.094 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 32.2321ms
2024-03-04 20:09:35.880 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - -
2024-03-04 20:09:36.032 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7148/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 151.8693ms
